{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Popup/AlertDialog.js","Components/Popup/BlockSenderDialog.js","Components/Popup/ClearHistoryDialog.js","Utils/Language.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/InputPasswordDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/LeaveVoiceChatDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/OpenGameDialog.js","Components/Popup/OpenUrlDialog.js","Components/Popup/PinMessageDialog.js","Components/Popup/ReportChatDialog.js","Components/Popup/RequestUrlDialog.js","Components/Popup/UnpinMessageDialog.js","Components/Actions.js","Utils/Game.js","Assets/Icons/CallEnd.js","Components/Calls/CallSettingsVideoPreview.js","Components/Calls/GroupCallMicAmplitude.js","Utils/Text.js","Components/Calls/GroupCallSettings.js","Assets/Icons/More.js","Assets/Icons/Mic.js","Assets/Icons/MicOff.js","Components/Calls/CallPanel.js","Components/Calls/Call.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacyCalls.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Calls/BlobDrawable.js","Components/Calls/LineBlobDrawable.js","Components/Calls/TopBar.js","Components/Calls/GroupCallTopPanel.js","Assets/Icons/PlaylistEdit.js","Assets/Icons/Block.js","Assets/Icons/Broom.js","Assets/Icons/Phone.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Calls/GroupCallJoinPanelSubtitle.js","Components/Calls/GroupCallRecentParticipants.js","Components/Calls/GroupCallJoinPanel.js","Components/Message/MessageContext.js","Components/ColumnMiddle/InputBoxHints.js","Assets/Icons/ArrowTopRight.js","Assets/Icons/ShareFilled.js","Components/Message/Markup/KeyboardButton.js","Components/Message/Markup/KeyboardRow.js","Components/Message/Markup/ReplyMarkup.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/SelectChatPlaceholder.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/ForwardTargetChat.js","Components/Popup/ForwardDialog.js","Components/Calls/Button.js","Components/Calls/GroupCallMicButtonHint.js","Components/Calls/GroupCallMicButton.js","Components/Calls/GroupCallPanelButtons.js","Assets/Icons/AddMember.js","Assets/Icons/MicOutlined.js","Assets/Icons/MicOffOutlined.js","Components/Calls/GroupCallParticipant.js","Components/Calls/GroupCallParticipants.js","Assets/Icons/Tune.js","Components/Calls/GroupCallSettingsButton.js","Components/Calls/GroupCallPanel.js","Components/Calls/GroupCall.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Player/PipPlayer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","AlertDialog","handleClose","onClose","params","t","title","message","ok","cancel","getFormattedText","open","manager","modalManager","transitionDuration","classes","paper","DialogContentText","DialogActions","onClick","color","withTranslation","BlockSenderDialog","reportSpam","deleteChat","handleReportSpamChange","handleDeleteChatChange","sender","text","entities","reportText","user_id","LStore","formatString","getUserShortName","getSimpleMarkupEntities","getString","chat_id","location","getChatLocation","address","isChannelChat","aria-labelledby","FormControlLabel","control","Checkbox","checked","onChange","label","ClearHistoryDialog","handleRevokeChange","revoke","chatId","canBeDeletedForAllUsers","getChatShortTitle","ChatTile","isPrivateChat","style","marginLeft","prevChatId","ChatStore","get","can_be_deleted_for_all_users","sprintf","key","args","postProcess","cyrillicInput","isCyrillicPackId","packId","value","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","DeleteMessagesDialog","messageIds","count","confirm","isSupergroup","formatPluralString","prevMessageIds","messageId","MessageStore","InputPasswordDialog","handleChange","e","password","target","handleClickShowPassword","showPassword","getErrorMessage","error","startsWith","str","replace","parseInt","timeString","floor","loading","passwordHint","password_hint","errorMessage","FormControl","fullWidth","InputLabel","htmlFor","Boolean","Input","autoFocus","autoComplete","type","disabled","endAdornment","InputAdornment","position","IconButton","aria-label","edge","FormHelperText","LeaveChatDialog","getDeleteDialogText","chat","supergroup","SupergroupStore","supergroup_id","is_channel","LeaveVoiceChatDialog","discard","handleDiscardChange","NotificationTimer","handleTimer","Date","seconds","expire","timeout","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","setInterval","Typography","toFixed","CircularProgress","size","variant","OpenGameDialog","game","userId","getUserFullName","OpenUrlDialog","url","overflowWrap","PinMessageDialog","prevMessageId","ReportChatDialog","handleReport","ListItem","button","ListItemText","primary","RequestUrlDialog","value1","value2","handleValue1Change","handleValue2Change","domain","bot_user_id","request_write_access","text1","UserStore","getMyId","entities1","option1","option2","text2","entities2","display","flexDirection","UnpinMessageDialog","Actions","leaveChat","clearHistory","deleteMessages","pinMessage","unpinMessage","alert","openUrlAlert","openGameAlert","requestUrlAlert","inputPasswordAlert","requestBlockSenderAlert","leaveVoiceChatAlert","reportChatAlert","onClientUpdateReportChat","update","onClientUpdateBlockSender","sender_id","onClientUpdateInputPasswordAlert","onPassword","onClientUpdateLeaveVoiceChatAlert","onClientUpdateOpenGameAlert","isVerified","handleOpenGameContinue","onClientUpdateOpenUrlAlert","ask","handleOpenUrlContinue","onClientUpdateRequestUrlAlert","onClientUpdateSnackbar","enqueueSnackbar","closeSnackbar","action","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","onClientUpdateAlert","onClientUpdateUnpinMessage","isMeChat","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","onClientUpdateLeaveChat","onClientUpdateClearHistory","handleClearHistoryContinue","AppStore","getChatId","request","remove_from_chat_list","handleScheduledAction","handleLeaveContinue","a","undo","getLeaveChatNotification","requests","isChatMember","push","isCreator","status","is_member","handleDeleteMessagesContinue","clearSelection","message_ids","clientUpdateType","snackKey","clientUpdate","inProgress","addScheduledAction","Number","MAX_VALUE","persist","removeScheduledAction","pinMessageAction","canPinMessages","unpinMessageAction","closePinned","unpinAllMessages","data","getClientData","clientData","unpinned","handleAlertContinue","onResult","event","preventDefault","newWindow","window","opener","sharedPreferences","JSON","parse","localStorage","getItem","existing","hash","addHash","encodeURIComponent","chars","array","Uint8Array","crypto","getRandomValues","setItem","stringify","index","indexOf","curHash","substring","openGameInBrowser","handleRequestUrlContinue","values","buttonId","message_id","button_id","allow_write_access","httpUrl","handleInputPasswordContinue","onCloseDialog","handleBlockSenderContinue","blockSender","reason","reportChat","canDeleteChat","handleLeaveVoiceChatContinue","resultParams","handleReportChatContinue","showSnackbar","Close","on","off","PureComponent","enhance","compose","withSnackbar","CallSettingsVideoPreview","stream","video","document","getElementById","srcObject","autoPlay","muted","GroupCallMicAmplitude","audioContext","AudioContext","webkitAudioContext","timer","addAnalyser","removeAnalyser","streamSource","createMediaStreamSource","analyser","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","fftSize","connect","analyse","disconnect","frequencyBinCount","getByteFrequencyData","getAmplitude","bars","viewBox","fill","strokeWidth","width","copy","navigator","clipboard","writeText","console","copyOld","element","successful","createElement","contentEditable","readOnly","all","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","focus","select","execCommand","Error","removeChild","GroupCallSettings","onKeyDown","modals","isComposing","openDeviceSelect","handleCloseDeviceSelect","stopPropagation","handleCancel","onUpdateGroupCall","groupCallId","group_call","muteNewParticipants","mute_new_participants","allowedChangeMuteNewParticipants","allowed_change_mute_new_participants","onDeviceChange","mediaDevices","enumerateDevices","devices","CallStore","outputDeviceId","getOutputDeviceId","filter","kind","deviceId","inputAudioDeviceId","getInputAudioDeviceId","inputAudio","inputVideoDeviceId","getInputVideoDeviceId","inputVideo","handleOutputChange","handleCopyLink","currentGroupCall","username","getChatUsername","telegramUrlOption","handleOpenDeviceSelect","handleSelectDevice","setOutputDeviceId","currentCall","streamManager","inputAudioStream","getAudioTracks","getStream","audio","exact","inputVideoStream","getVideoTracks","handleEnd","call","leaveGroupCall","handleMuteNewParticipants","toggleMuteNewParticipants","handleDone","setInputAudioDeviceId","setInputVideoDeviceId","keyboardHandler","KeyboardHandler","addEventListener","KeyboardManager","add","removeEventListener","remove","closeStreams","callId","outputDeviceInfo","find","outputString","inputAudioDeviceInfo","inputAudioString","inputVideoDeviceInfo","inputVideoString","items","map","canManage","canManageVoiceChats","onMouseDown","Switch","disableRipple","root","switchBase","colorSecondary","track","prevGroupCallId","prevCallId","muteSettings","groupCall","CallPanel","onClientUpdateCallMediaState","currentCallId","mediaState","inputMediaState","outputMediaState","handleUpdateCall","forceUpdate","handleFullScreenChange","fullScreen","isFullScreen","handleClick","handleAccept","p2pAcceptCall","handleDiscard","closeCallPanel","setTimeout","p2pHangUp","handleOpenSettings","handleCloseContextMenu","openSettings","handleCloseSettings","exitFullscreen","handleShareScreen","screenStream","p2pStopScreenSharing","p2pStartScreenSharing","handleFullScreen","requestFullscreen","handleOpenContextMenu","currentTarget","anchorEl","handleAudio","p2pAudioEnabled","handleVideo","videoState","p2pVideoEnabled","callPanelRef","createRef","contextMenu","left","p2pGetMediaState","callPanel","current","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","method","mozRequestFullScreen","webkitRequestFullscreen","mozCancelFullScreen","webkitExitFullscreen","p2pGet","is_outgoing","screenSharing","outputVideoStyle","isFirefox","transform","videoRotation","classNames","ref","p2pGetCallStatus","Popover","container","getContentAnchorEl","disableRestoreFocus","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","ListItemClasses","focusVisible","TouchRippleProps","child","rippleVisible","onDoubleClick","MicOff","CallEnd","p2pIsCallReady","Mic","Call","onClientUpdateGroupCallFullScreen","fullscreen","closeGroupCallPanel","handleMouseDown","nativeEvent","which","mouseDownRoot","pageX","pageY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","onWindowResize","player","oldLeft","oldTop","normalizePosition","startLeft","startTop","setPosition","pipParams","documentElement","clientWidth","clientHeight","prevLeft","prevTop","checkGlue","playerWidth","playerHeight","documentWidth","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","clamp","glueTop","glueBottom","DialogTitle","onFastUpdatingComplete","onUpdateChatTitle","nextProps","nextState","showSavedMessages","isChatVerified","getChatTitle","defaultProps","DialogStatus","onUpdateUserStatus","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","basic_group","onUpdateSupergroup","externalSubtitle","Chat","onSelect","onTileSelect","showStatus","big","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","alignItems","ListItemIcon","tabIndex","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","supergroupMembers","photoAndVideo","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","padding","scroll","filtersRef","item","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","r","set","ContextMenu","handleOpenMessage","openChat","handleForward","forwardMessages","handleDelete","anchorPosition","showOpenMessage","can_be_forwarded","can_be_deleted_only_for_self","anchorReference","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","fileId","photo","clientX","clientY","nextContext","FileStore","openMedia","minithumbnail","miniSrc","thumbSrc","getSrc","src","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","sizes","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","thumbnail","file","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","tileColor","abs","charCodeAt","draggable","alt","SharedLink","webPage","caption","decodedUrl","decodeURI","hostname","URL","split","punycode","ToUnicode","content","description","animation","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","isValidEntity","showLinks","oneLinkText","offset","nonEmptyUrlEntities","entityText","trim","links","mail","typeUrl","getTitleFromUrl","SafeLink","getFirstLetter","entity","SharedVoiceNote","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","getDurationString","overScanCount","SharedMediaContent","some","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","completed","migrateCompleted","getFilter","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","query","sender_user_id","from_message_id","limit","finally","currentParams","total_count","concat","isValidMessage","incompleteResults","setItems","store","getStore","loadMessageContents","onLoadMigratedNext","handleOpen","popup","openUser","loadUsersContent","loadChatsContent","renderIdsList","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","height","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","voice_note","ChatDetails","loadContent","loadChatContents","getGroupChatMembers","getChatFullInfo","handleUsernameHint","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","handleTabClick","divider","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","theme","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isGroupChat","users","member","user","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","toLowerCase","onScroll","List","wordWrap","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","handleSelect","chatIds","getChatUserId","offset_chat_id","chat_ids","minHeight","chats","SharedMediaHeader","handleSearch","searchInputRef","innerText","onSearch","onCloseSearch","openSearch","handleKeyDown","keyCode","handleKeyUp","innerHTML","handlePaste","plainText","clipboardData","getData","ANIMATION_DURATION_200MS","placeholder","suppressContentEditableWarning","onKeyUp","onPaste","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","force","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","chatList","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","cx","cy","Status","onUpdateMessageSendAcknowledged","sendingState","old_message_id","sending_state","newMessageId","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","Pending","Sent","Succeeded","isMessageUnread","DialogMeta","getLastMessageDate","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","handleMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","dialog","hidden","isLastPinned","ApplicationStore","deleteChatTitle","getDeleteChatTitle","isSelected","isUnread","isArchived","showOnline","showGroupCall","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","scrollBottom","max","removeItem","clear","reset","archiveChatIds","meChat","cacheContacts","contacts","cache","authorization_state","CacheManager","cacheKey","filesKey","contactsKey","onClientUpdate","clearDataUrls","addTdLibListener","removeTdLibListener","useTestDC","parameters","STORAGE_CACHE_TEST_KEY","STORAGE_CACHE_KEY","STORAGE_CONTACTS_TEST_KEY","STORAGE_CONTACTS_KEY","STORAGE_FILES_TEST_KEY","STORAGE_FILES_KEY","filtersKey","STORAGE_FILTERS_TEST_KEY","STORAGE_FILTERS_KEY","registerKey","STORAGE_REGISTER_TEST_KEY","STORAGE_REGISTER_KEY","saveInternal","leading","trailing","promises","load","catch","Promise","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","small","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","EventEmitter","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","openSupportChat","searchChat","getAuthorizationState","showClose","mainMenuControl","Menu","disableAutoFocusItem","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","openChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","chatListEquals","scrollToTop","loadFirstSlice","hiddenChats","delete","initDB","saveCache","onSaveCache","onUpdateChatPosition","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","stub","fistSliceLoaded","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","offsetChat","log","shift","replaceChats","getListRef","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","shortTitle","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","selected","tile","UserTile","SectionHeader","command","multiline","children","Search","blur","concatSearchResults","arr","j","searchText","sessionId","savedMessages","localPromise","latinText","latinLocalPromise","cyrillicText","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","substr","SEARCH_GLOBAL_TEXT_MIN","globalPromises","globalPromise","latinTrimmedText","USERNAME_LENGTH_MIN","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","savedMessagesPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","logOut","More","LogOut","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","loadChatContent","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","wrapperRef","searchRef","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","play","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","chat_filters","startIcon","Wallpaper","loaded","onClientUpdateDocumentThumbnailBlob","wallpaper","handleLoad","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","themeOptions","palette","disableEnforceFocus","aria-describedby","component","FormLabel","focused","RadioGroup","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","sendByCtrlEnterOption","SEND_BY_CTRL_ENTER_KEY","sendByCtrlEnter","Colorize","handleSetOption","inputProps","isMacOS","Language","languages","language_packs","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblockUser","unblockSender","senders","PrivacyCalls","prevAllowCalls","prevAllowP2PCalls","handleChangeAllowCalls","allowCallsValue","handleChangeAllowP2PCalls","allowP2PCallsValue","setSettings","allowCalls","allowP2PCalls","prevAllowCallsValue","rules","added","setting","prevAllowP2PCallsValue","PrivacySecurity","openActiveSessions","openBlockedUsers","openCalls","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","closeCalls","sessionsCount","usersCount","RemoveMember","Device","Settings","onUpdateChatPhoto","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","AddParticipants","newArray","selectedItems","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","handleSaveCache","prevShowArchive","showArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","archiveTitle","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","prevOpen","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","diff","onClientUpdateRecordStop","clearTimeout","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","altKey","ctrlKey","metaKey","code","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","link","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendText","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","chatSelectOptions","switchInline","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","reply_to_message_id","input_message_text","disable_web_page_preview","clear_draft","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","input_message_content","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","getTextAndCaretPosition","_range","cloneRange","selectNodeContents","endOffset","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","oncanplay","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","usernameOnly","searchResultUsernames","cancelDelayRunnable","searchPosition","lastText","lastUsernameOnly","resultStartPosition","resultLength","foundType","ch","lastPosition","closeHints","usersMap","usernameString","hasSpace","newResult","newResultsMap","object","isMeUser","isDeletedUser","showUsersResult","message_thread_id","notifyDataSetChanged","notify","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","onUpdateChatLastMessage","hasLastMessage","onUpdateChatIsBlocked","isBlocked","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","handleUnblock","handleStartBot","botStartMessage","botUserId","parameter","sendBotStartMessage","isBotChat","permissions","can_send_messages","SCALE_BIG","SCALE_SMALL","SCALE_BIG_MIN","SCALE_SMALL_MIN","FORM_BIG_MAX","FORM_SMALL_MAX","LIGHT_GRADIENT_SIZE","rotateZ","angle","originX","originY","X","Y","BlobDrawable","maxRadius","minRadius","cubicBezierK","N","L","tan","radius","radiusNext","angleNext","progress","speed","pointStart","pointEnd","generateBlob","angleDif","radDif","random","amplitude","speedScale","cX","cY","canvas","paint","getContext","ctx","beginPath","progressNext","r1","r2","angle1","angle2","l","mapPoints","moveTo","bezierCurveTo","closePath","points","result1","result2","LineBlobDrawable","bottom","pinnedTop","progressToPinned","lineTo","MUTE_BUTTON_STATE_UNMUTE","MUTE_BUTTON_STATE_MUTE","MUTE_BUTTON_STATE_CONNECTING","MUTE_BUTTON_STATE_MUTED_BY_ADMIN","WeavingState","stateId","shader","createGradient","fillStyle","getGradientFromType","dt","x0","y0","gradient","createLinearGradient","addColorStop","TopBar","handleDevicePixelRatioChanged","scale","devicePixelRatio","topBar","handleResize","resizeHandler","resizing","resizeCanvas","invokeDraw","handleBlur","raf","mounted","lbd","lbd1","lbd2","currentState","previousState","progressToState","newTime","lastUpdateTime","animateToAmplitude","animateAmplitudeDiff","amplitude2","animateAmplitudeDiff2","top1","top2","clearRect","alpha","paint1","globalAlpha","setCurrentState","animated","states","matchMedia","setAmplitude","GroupCallTopPanel","onClientUpdateGroupCallAmplitudeChange","amplitudes","topBarRef","onUpdateGroupCallParticipant","group_call_id","participant","getCallStatus","connected","switchButtonState","onClientUpdateGroupCall","onClientUpdateGroupCallConnectionState","saveMessagesScrollPosition","restoreMessagesScrollPosition","handleMicrophone","can_unmute_self","changeUserMuted","handleLeave","handleOpenGroupCall","openGroupCallPanel","elements","getElementsByClassName","openPanel","offsetHeightDiff","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","handleSwitchBlocked","getChatSender","requestBlockSender","handleStartGroupCall","showAlert","startGroupCall","handleStartP2PCall","p2pStartCall","openReportChat","handleCreateSecretChat","createSecretChat","voice_chat_group_call_id","secretChat","canCreateSecretChat","canClearHistory","hasOnePinnedMessage","switchBlocked","canSwitchBlocked","manageVoiceChats","reported","canBeReported","called","canBeCalled","p2pCallsEnabled","Broom","Block","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","timingFunction","animateOnMount","prevItem","AnimatedCounter","counter","reverse","counterStr","prevCounter","HeaderCommand","canBeDeleted","canBeForwarded","canReport","PinnedMessageBorder","drawRect","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","text1Element","text2Element","currentMessageId","currentPrevMessageId","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","clickedPinned","handleEditClick","prevMessage","prevContent","prevPropsChatId","Header","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","handlePinClick","getConnectionState","showProgressAnimation","HeaderProgress","PlaylistEdit","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","onMouseEnter","onMouseLeave","visibility","Slider","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","handlePlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","rate","Time","onClientUpdateMediaTime","currentTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","HeaderPlayer","handleSeekForward","videoRef","handleSeek","PLAYER_SEEK_STEP_BIG","handleSeekBackward","handleSeekTo","seekTime","paused","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","getCurrentTime","playing","srcSource","pause","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","setCurrentTime","handleLoadedMetadata","hasVoice","buffered","videoWidth","videoHeight","captureStream","mozCaptureStream","handleProgress","handleTimeUpdate","handleCanPlay","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","remote","unique_id","clearCurrentTime","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","disablePictureInPicture","onLoadedMetadata","onCanPlay","onPlay","onPause","onEnded","onTimeUpdate","onProgress","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","for_album","for_comment","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canSendMessages","canBePinned","isServiceMessage","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","Meta","ids","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","onDateClick","isOutgoing","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","isCall","isCallMessage","albumHistoryEquals","AlbumItem","getAlbumItem","inlineMeta","getWebPage","Photo","Video","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","DayMeta","onClientUpdateLanguage","getFullYear","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","end","sum","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","maxHeight","attempt","minLineHeight","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","round","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","lastHighlighted","oldEmojiMatches","emojiMatches","grouped","calculate","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","handleMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","GroupCallJoinPanelSubtitle","participantCount","participant_count","participantsOnly","GroupCallRecentParticipants","speakers","recent_speakers","updateSpeakers","PROFILE_PHOTO_PRELOAD_TIME_MS","lhs","rhs","is_speaking","speakersEquals","speaking","prevId","GroupCallJoinPanel","handleUpdateChatVoiceChat","handleUpdateGroupCall","handleClientUpdateGroupCall","isCurrent","is_joined","joinGroupCall","MessageContext","createContext","withMessage","MessageComponent","Consumer","handleCallbackQueryAnswer","via_bot_user_id","show_alert","showOpenGameAlert","is_verified","showOpenUrlAlert","tryTelegraph","payload","game_short_name","short_name","passwordState","has_password","showInputPasswordAlert","onError","forward_text","skip_confirm","showRequestUrlAlert","in_current_chat","inline","setText","openChatSelect","ArrowTopRight","ShareFilled","KeyboardRow","row","ReplyMarkup","markup","rows","Provider","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","totalLength","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","updateMessageContent","handleUpdateMessageContentAndEditedOnce","updateMessageEdited","newEmojiMatches","getEmojiMatches","startMessageEditing","stopMessageEditing","mouseDown","mouseOut","openReply","reply_markup","isMetaBubble","getMessageStyle","showMeta","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateStartMessageEditing","history","scrollBottomAfterEditing","onClientUpdateStopMessageEditing","scrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insert","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","supergroupId","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","types","handleScrollDownClick","lastReply","pop","separatorMessageId","scrollDownButtonRef","historyEquals","ignoreUnread","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getMonth","media_album_id","ttl","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","inputMessageContent","forward","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","handleInViewport","elementRect","contentRect","getBoundingClientRect","STICKER_SET","inViewportFunc","SelectChatPlaceholder","closeChatSelect","DialogDetails","onClientUpdateClearOpenChatOptions","chatOpenOptions","onClientUpdateChatSelect","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","ForwardTargetChat","ForwardDialog","getPublicMessageLink","getChatsPromise","publicMessageLink","getForwardPhotoSize","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","handleSearchKeyDown","handleSearchKeyUp","searchResults","globalSearchResults","chatsSource","hasSearchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","OvershootInterpolator","tension","mTension","DecelerateInterpolator","factor","mFactor","pow","AccelerateInterpolator","mDoubleFactor","createRadialGradient","RadialProgressView","setUseSelfAlpha","useSelfAlpha","setAlpha","setNoProgress","noProgress","setProgress","currentProgress","animatedProgress","progressAnimationStart","progressTime","updateAnimation","radOffset","rotationTime","circle","circleProgress","currentProgressTime","risingTime","risingCircleLength","currentCircleLength","accelerateInterpolator","getInterpolation","decelerateInterpolator","old","progressDiff","setSize","setStrokeWidth","lineWidth","updateProgressPaint","setProgressColor","progressColor","toCircle","circleRect","translate","radStart","drawingCircleLength","radLength","arc","progressPaint","restore","isCircle","lineCap","strokeStyle","Button","switchProgress","tinyWaveDrawable","buttonDefaultRadius","buttonRadius","bigWaveDrawable","canSwitchProgress","radialProgressView","invalidateColors","lightingColor","fillColors","colorsTmp","oldLight","newLight","blendARGB","currentLightColor","radialGradient","showWaves","showLighting","showWavesProgress","showLightingProgress","showWavesProgressInterpolated","overshootInterpolator","resetTransform","paintTmp","scaleLight","drawCircle","updateMuteButton","muteButtonState","updateMuteButtonState","radialPaint","generateInitBlob","colorsToSet","color1","color2","c1","c2","inverseRatio","g","strToHex","justifyContent","cursor","GroupCallMicButtonHint","GroupCallMicButton","buttonRef","is_muted","GroupCallPanelButtons","GroupCallParticipant","handleOpenProfile","handleSendMessage","handleUnmute","is_muted_for_all_users","is_muted_for_current_user","can_be_muted_for_all_users","can_be_unmuted_for_all_users","prevUserId","participants","GroupCallParticipants","participantsMap","updateParticipants","preloadContent","manageGroupCalls","AddMember","GroupCallSettingsButton","Tune","GroupCallPanel","GroupCall","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","videoInfo","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","thumb","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","active","InstantViewStore","getCurrent","oldUrl","scrollToHash","handleBack","instantViewerRef","articleRef","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","scrollIntoView","getInnerBlocks","IVContext","IV_PHOTO_SIZE","prevInstantView","MediaInfo","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","PipPlayer","onClientUpdateMediaShortcut","PLAYER_SEEK_STEP_SMALL","handleVolume","PLAYER_VOLUME_STEP","handleSeekProgress","PLAYER_PLAYBACKRATE_STEP","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","handleLoadedData","waiting","handlePause","handleVolumeChange","onVolumeChange","handleWaiting","startStopPlayer","handlePlayerMouseDown","pip","offsetX","offsetY","draggingTime","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","mouseOverTimeout","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","connectPlayer","disconnectPlayer","pipPlayer","onloadedmetadata","onloadeddata","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","bufferedTime","Player","getBufferedTime","bufferedValue","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","onMouseMove","onBlur","Hint","rail","onChangeCommitted","FullScreen","Progress","prevVideo","ProfileMediaViewerContent","onClientUpdateChatBlob","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateCallPanel","onClientUpdateGroupCallPanel","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/4.e64fd01d.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport { getFormattedText } from '../../Utils/Message';\nimport './AlertDialog.css';\n\nclass AlertDialog extends React.Component {\n\n    handleClose = result => {\n        const { onClose } = this.props;\n\n        onClose && onClose(result);\n    };\n\n    render() {\n        const { params, t } = this.props;\n        if (!params) return null;\n\n        let { title, message, ok, cancel } = params;\n\n        if (message['@type'] === 'formattedText') {\n            message = getFormattedText(message, t, {});\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {message}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    { cancel && (\n                        <Button onClick={() => this.handleClose(false)} color='primary'>\n                            {cancel}\n                        </Button>\n                    )}\n                    { ok && (\n                        <Button onClick={() => this.handleClose(true)} color='primary'>\n                            {ok}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nAlertDialog.propTypes = {\n    params: PropTypes.object\n};\n\nexport default withTranslation()(AlertDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport { getChatLocation, isChannelChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './BlockSenderDialog.css';\n\nclass BlockSenderDialog extends React.Component {\n    state = {\n        reportSpam: true,\n        deleteChat: true\n    };\n\n    handleReportSpamChange = () => {\n        const { reportSpam } = this.state;\n\n        this.setState({\n            reportSpam: !reportSpam\n        });\n    };\n\n    handleDeleteChatChange = () => {\n        const { deleteChat } = this.state;\n\n        this.setState({\n            deleteChat: !deleteChat\n        });\n    };\n\n    render() {\n        const { sender, onClose, t } = this.props;\n        if (!sender) return null;\n\n        const { reportSpam, deleteChat } = this.state;\n\n        let title = null;\n        let text = null;\n        const entities = [];\n        let reportText = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                const { user_id } = sender;\n\n                title = LStore.formatString('BlockUserTitle', getUserShortName(user_id, t));\n                text = LStore.formatString('BlockUserAlert', getUserShortName(user_id, t));\n                text = getSimpleMarkupEntities(text, entities);\n                reportText = LStore.getString('BlockContact');\n                break;\n            }\n            case 'messageSenderChat': {\n                const { chat_id } = sender;\n\n                const location = getChatLocation(chat_id);\n                if (location) {\n                    title = LStore.getString('ReportUnrelatedGroup');\n                    if (location.address) {\n                        text = LStore.formatString('ReportUnrelatedGroupText', location.address);\n                        text = getSimpleMarkupEntities(text, entities);\n                    } else {\n                        text = LStore.getString('ReportUnrelatedGroupTextNoAddress');\n                    }\n                } else {\n                    title = LStore.getString('ReportSpamTitle');\n                    if (isChannelChat(chat_id)) {\n                        text = LStore.getString('ReportSpamAlertChannel');\n                    } else {\n                        text = LStore.getString('ReportSpamAlertGroup');\n                    }\n                }\n                reportText = LStore.getString('ReportChat');\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {title}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {getFormattedText({ '@type': 'formattedText', text, entities })}\n                    </DialogContentText>\n                    { sender['@type'] === 'messageSenderUser' && (\n                        <div className='block-sender-params'>\n                            <FormControlLabel\n                                control={<Checkbox checked={reportSpam} onChange={this.handleReportSpamChange} color='primary' />}\n                                label={t('DeleteReportSpam')}\n                            />\n                            <FormControlLabel\n                                control={<Checkbox checked={deleteChat} onChange={this.handleDeleteChatChange} color='primary' />}\n                                label={t('DeleteThisChat')}\n                            />\n                        </div>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, sender && sender['@type'] === 'messageSenderUser' ? { reportSpam, deleteChat } : null)} color='secondary'>\n                        {reportText}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nBlockSenderDialog.propTypes = {\n    sender: PropTypes.object\n};\n\nexport default withTranslation()(BlockSenderDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\n\nclass ClearHistoryDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        const chat = ChatStore.get(chatId);\n\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\n\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <div>\n                            <DialogContentText id='delete-dialog-description'>\n                                Are you sure you want clear history?\n                            </DialogContentText>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all members'\n                                        }\n                                        style={{ marginLeft: 0 }}\n                                    />\n                                )\n                            }\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nexport function sprintf(t, key, ...args) {\n    return t(key, { postProcess: 'sprintf', sprintf: args });\n}\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { sprintf } from '../../Utils/Language';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass DeleteMessagesDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageIds } = props;\n        const { prevChatId, prevMessageIds } = state;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageIds,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, messageIds, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let confirm = count === 1 ? t('AreYouSureDeleteSingleMessage') : t('AreYouSureDeleteFewMessages');\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\n            confirm = count === 1 ? t('AreYouSureDeleteSingleMessageMega') : t('AreYouSureDeleteFewMessagesMega');\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('DeleteMessagesTitle', LStore.formatPluralString('messages', count))}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {confirm}\n                    </DialogContentText>\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\n                        <FormControlLabel\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\n                            label={\n                                isPrivateChat(chatId)\n                                    ? sprintf(t, 'DeleteForUser', getChatShortTitle(chatId, false, t))\n                                    : t('DeleteForAll')\n                            }\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDeleteMessagesDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(DeleteMessagesDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './InputPasswordDialog.css';\n\nclass InputPasswordDialog extends React.Component {\n\n    state = { };\n\n    handleChange = e => {\n        this.password = e.target.value;\n    };\n\n    handleClickShowPassword = () => {\n        const { showPassword } = this.state;\n\n        this.setState({ showPassword: !showPassword });\n    };\n\n    getErrorMessage = error => {\n        const { t } = this.props;\n\n        if (!error) return null;\n\n        if (error.message === 'PASSWORD_HASH_INVALID') {\n            return t('InvalidPassword');\n        } else if (error.message.startsWith('Too Many Requests: retry after ')) {\n            const str = error.message.replace('Too Many Requests: retry after ', '');\n            try {\n                const time = parseInt(str);\n                const timeString = time < 60\n                    ? LStore.formatPluralString('Seconds', time)\n                    : LStore.formatPluralString('Minutes', Math.floor(time / 60));\n\n                return LStore.formatString('FloodWaitTime', timeString);\n            } catch (e) {\n                return error.message;\n            }\n        }\n\n        return error.message;\n    }\n\n    render() {\n        const { state, error, onClose, t } = this.props;\n        if (!state) return null;\n\n        const { showPassword, loading } = this.state;\n        const { password_hint: passwordHint } = state;\n\n        const errorMessage = this.getErrorMessage(error);\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('TwoStepVerificationTitle')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {t('PleaseEnterCurrentPasswordTransfer')}\n                    </DialogContentText>\n                    <FormControl className='auth-input' fullWidth>\n                        <InputLabel htmlFor='adornment-password' error={Boolean(error)}>{t('LoginPassword')}</InputLabel>\n                        <Input\n                            fullWidth\n                            autoFocus\n                            autoComplete='off'\n                            id='adornment-password'\n                            type={showPassword ? 'text' : 'password'}\n                            disabled={loading}\n                            error={Boolean(error)}\n                            onChange={this.handleChange}\n                            endAdornment={\n                                <InputAdornment position='end'>\n                                    <IconButton\n                                        aria-label='Toggle password visibility'\n                                        onClick={this.handleClickShowPassword}\n                                        edge='end'>\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                        />\n                        {passwordHint && <FormHelperText id='password-hint-text'>{passwordHint}</FormHelperText>}\n                        <FormHelperText id='password-error-text' error>{errorMessage || ' '}</FormHelperText>\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, this.password)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nInputPasswordDialog.propTypes = {\n    state: PropTypes.object,\n    error: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(InputPasswordDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './LeaveVoiceChatDialog.css';\n\nclass LeaveVoiceChatDialog extends React.Component {\n    state = {\n        discard: false\n    };\n\n    handleDiscardChange = () => {\n        const { discard } = this.state;\n\n        this.setState({\n            discard: !discard\n        });\n    };\n\n    render() {\n        const { onClose, t } = this.props;\n        const { discard } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {LStore.getString('VoipGroupLeaveAlertTitle')}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.getString('VoipGroupLeaveAlertText')}\n                    </DialogContentText>\n                    <FormControlLabel\n                        control={<Checkbox checked={discard} onChange={this.handleDiscardChange} color='primary' />}\n                        label={t('VoipGroupEndChat')}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, { discard })} color='secondary'>\n                        {t('VoipGroupLeave')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nLeaveVoiceChatDialog.propTypes = {\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveVoiceChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { getUserFullName } from '../../Utils/User';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenGameDialog.css';\n\nclass OpenGameDialog extends React.Component {\n    render() {\n        const { game, params, onClose, t } = this.props;\n        if (!game) return null;\n\n        const { userId } = params;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.formatString('BotPermissionGameAlert', getUserFullName(userId))}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenGameDialog.propTypes = {\n    game: PropTypes.object,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenGameDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenUrlDialog.css';\n\nclass OpenUrlDialog extends React.Component {\n    render() {\n        const { url, onClose, t } = this.props;\n        if (!url) return null;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport './PinMessageDialog.css';\n\nclass PinMessageDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageId,\n                revoke: !isPrivateChat(chatId)\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { revoke } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        let text = '';\n        switch (chat.type['@type']) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                text = t('PinMessageAlertChat');\n                break;\n            }\n            case 'chatTypeBasicGroup': {\n                text = t('PinMessageAlert');\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                if (isChannelChat(chatId)) {\n                    text = t('PinMessageAlertChannel');\n                } else {\n                    text = t('PinMessageAlert');\n                }\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                    <>\n                        {\n                            isPrivateChat(chatId) && (\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\n                                />\n                            )\n                        }\n                    </>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(PinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { modalManager } from '../../Utils/Modal';\nimport './ReportChatDialog.css';\n\nclass ReportChatDialog extends React.Component {\n\n    handleReport = type => {\n        const { onClose } = this.props;\n\n        onClose && onClose(true, { '@type': type });\n    }\n\n    render() {\n        const { onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('ReportChat')}</DialogTitle>\n                <div className='report-chat-dialog-content'>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonSpam')}>\n                        <ListItemText primary={t('ReportChatSpam')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonFake')}>\n                        <ListItemText primary={t('ReportChatFakeAccount')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonViolence')}>\n                        <ListItemText primary={t('ReportChatViolence')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonPornography')}>\n                        <ListItemText primary={t('ReportChatPornography')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonChildAbuse')}>\n                        <ListItemText primary={t('ReportChatChild')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonCustom')}>\n                        <ListItemText primary={t('ReportChatOther')}/>\n                    </ListItem>\n                </div>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('ReportChat')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nReportChatDialog.propTypes = {\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ReportChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport { getUserFullName, getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './RequestUrlDialog.css';\n\nclass RequestUrlDialog extends React.Component {\n    state = {\n        value1: true,\n        value2: true\n    };\n\n    handleValue1Change = () => {\n        const { value1 } = this.state;\n\n        this.setState({ value1: !value1 });\n    };\n\n    handleValue2Change = () => {\n        const { value2 } = this.state;\n\n        this.setState({ value2: !value2 });\n    };\n\n    render() {\n        const { url, params, onClose, t } = this.props;\n        if (!url) return null;\n\n        const { value1, value2 } = this.state;\n\n        const { result } = params;\n        if (!result) return null;\n\n        const { domain, bot_user_id, request_write_access } = result;\n\n        let text1 = LStore.formatString('OpenUrlOption1', domain, getUserFullName(UserStore.getMyId()));\n        const entities1 = [];\n        text1 = getSimpleMarkupEntities(text1, entities1);\n        const option1 = (\n            <FormControlLabel\n                control={<Checkbox color='primary' checked={value1} onChange={this.handleValue1Change}/>}\n                label={getFormattedText({ '@type': 'formattedText', text: text1, entities: entities1 }, t)}\n            />\n        );\n\n        let option2 = null;\n        if (request_write_access) {\n            let text2 = LStore.formatString('OpenUrlOption2', getUserShortName(bot_user_id, t));\n            const entities2 = [];\n            text2 = getSimpleMarkupEntities(text2, entities2);\n            option2 = (\n                <FormControlLabel\n                    control={<Checkbox color='primary' checked={value2} onChange={this.handleValue2Change}/>}\n                    label={getFormattedText({ '@type': 'formattedText', text: text2, entities: entities2 }, t)}\n                />\n            );\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ display: 'flex', flexDirection: 'column', overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                    {option1}\n                    {option2}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true, { value1, value2 })} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nRequestUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(RequestUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport './UnpinMessageDialog.css';\n\nclass UnpinMessageDialog extends React.Component {\n\n    render() {\n        const { messageId, onClose, t } = this.props;\n\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nUnpinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(UnpinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AlertDialog from './Popup/AlertDialog';\nimport BlockSenderDialog from './Popup/BlockSenderDialog';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\nimport InputPasswordDialog from './Popup/InputPasswordDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport LeaveVoiceChatDialog from './Popup/LeaveVoiceChatDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport OpenGameDialog from './Popup/OpenGameDialog';\nimport OpenUrlDialog from './Popup/OpenUrlDialog';\nimport PinMessageDialog from './Popup/PinMessageDialog';\nimport ReportChatDialog from './Popup/ReportChatDialog';\nimport RequestUrlDialog from './Popup/RequestUrlDialog';\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\nimport { blockSender, pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\nimport { canDeleteChat, canPinMessages, getChatLocation, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\nimport { clearSelection, closePinned, showSnackbar } from '../Actions/Client';\nimport { openGameInBrowser } from '../Utils/Game';\nimport { reportChat } from '../Actions/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport CloseIcon from '../Assets/Icons/Close';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null,\n        deleteMessages: null,\n        pinMessage: null,\n        unpinMessage: null,\n        alert: null,\n        openUrlAlert: null,\n        openGameAlert: null,\n        requestUrlAlert: null,\n        inputPasswordAlert: null,\n        requestBlockSenderAlert: null,\n        leaveVoiceChatAlert: null,\n        reportChatAlert: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.on('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.on('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.on('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\n        AppStore.on('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.on('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.on('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.on('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n        AppStore.on('clientUpdateReportChat', this.onClientUpdateReportChat);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.off('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.off('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.off('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\n        AppStore.off('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.off('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.off('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.off('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n        AppStore.off('clientUpdateReportChat', this.onClientUpdateReportChat);\n    }\n\n    onClientUpdateReportChat = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({ reportChatAlert: { chatId, messageIds }});\n    };\n\n    onClientUpdateBlockSender = update => {\n        const { sender_id } = update;\n\n        this.setState({ requestBlockSenderAlert: { sender: sender_id }});\n    }\n\n    onClientUpdateInputPasswordAlert = update => {\n        const { state, onPassword } = update;\n\n        this.setState({ inputPasswordAlert: { state, onPassword } });\n    }\n\n    onClientUpdateLeaveVoiceChatAlert = update => {\n        const { params } = update;\n\n        this.setState({ leaveVoiceChatAlert: { params }});\n    }\n\n    onClientUpdateOpenGameAlert = update => {\n        const { game, params } = update;\n\n        if (params && params.isVerified) {\n            this.openGameAlert = { game, params };\n            this.handleOpenGameContinue(null, true);\n        } else {\n            this.setState({ openGameAlert: { game, params } });\n        }\n    }\n\n    onClientUpdateOpenUrlAlert = update => {\n        const { url, params } = update;\n\n        if (params && !params.ask) {\n            this.openUrlAlert = { url, params };\n            this.handleOpenUrlContinue(null, true);\n        } else {\n            this.setState({ openUrlAlert: { url, params } });\n        }\n    };\n\n    onClientUpdateRequestUrlAlert = update => {\n        const { url, params } = update;\n\n        this.setState({ requestUrlAlert: { url, params } });\n    }\n\n    onClientUpdateSnackbar = update => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n        const { message, action } = update;\n\n        enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: action(closeSnackbar)\n        });\n    };\n\n    onClientUpdateAlert = update => {\n        const { params } = update;\n\n        this.setState({ alert: { params } });\n    };\n\n    onClientUpdateUnpinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.unpinMessage = {\n                chatId,\n                messageId\n            };\n            this.handleUnpinMessageContinue(true, false);\n        } else {\n            this.setState({\n                unpinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdatePinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.pinMessage = {\n                chatId,\n                messageId\n            };\n            this.handlePinMessageContinue(true, false);\n        } else {\n            this.setState({\n                pinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({\n            deleteMessages: {\n                chatId,\n                messageIds\n            }\n        });\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = (result, revoke) => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false,\n            revoke\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = async (result, undo = true) => {\n        const { leaveChat } = this.state || this;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.leaveChat = null;\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        if (undo) {\n            this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n        } else {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n\n            }\n        }\n    };\n\n    handleDeleteMessagesContinue = (result, revoke) => {\n        const { deleteMessages } = this.state;\n        if (!deleteMessages) return;\n\n        const { chatId, messageIds } = deleteMessages;\n\n        clearSelection();\n        this.setState({ deleteMessages: null });\n\n        if (!result) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke\n        });\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t, enqueueSnackbar, closeSnackbar } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                closeSnackbar(snackKey);\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            closeSnackbar(snackKey);\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        AppStore.addScheduledAction(key, Number.MAX_VALUE, action, cancel);\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            AppStore.removeScheduledAction(key);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        AppStore.removeScheduledAction(key);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    handlePinMessageContinue = (result, revoke) => {\n        let { pinMessage } = this.state;\n        pinMessage = pinMessage || this.pinMessage;\n        if (!pinMessage) return;\n\n        const { chatId, messageId } = pinMessage;\n\n        clearSelection();\n        this.setState({ pinMessage: null });\n        this.pinMessage = null;\n\n        if (!result) return;\n\n        pinMessageAction(chatId, messageId, false, !revoke);\n    };\n\n    handleUnpinMessageContinue = async result => {\n        let { unpinMessage } = this.state;\n        unpinMessage = unpinMessage || this.unpinMessage;\n        if (!unpinMessage) return;\n\n        const { chatId, messageId } = unpinMessage;\n\n        clearSelection();\n        this.setState({ unpinMessage: null });\n        this.unpinMessage = null;\n\n        if (!result) return;\n\n        if (canPinMessages(chatId)) {\n            if (messageId) {\n                await unpinMessageAction(chatId, messageId);\n            } else {\n                closePinned();\n\n                await unpinAllMessages(chatId);\n            }\n        } else {\n            closePinned();\n\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId,\n                clientData: { ...data, ...{ unpinned: true } }\n            });\n        }\n    };\n\n    handleAlertContinue = result => {\n        const { alert } = this.state;\n        if (!alert) return;\n\n        const { params } = alert;\n        this.setState({ alert: null });\n\n        const { onResult } = params;\n        onResult && onResult(result);\n    };\n\n    handleOpenUrlContinue = (event, result) => {\n        const openUrlAlert = this.state.openUrlAlert || this.openUrlAlert;\n\n        this.setState({ openUrlAlert: null });\n        this.openUrlAlert = null;\n\n        if (!result) return;\n\n        const { url, onClick } = openUrlAlert;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            event && event.preventDefault();\n\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    handleOpenGameContinue = (event, result) => {\n        const openGameAlert = this.state.openGameAlert || this.openGameAlert;\n\n        this.setState({ openGameAlert: null });\n        this.openGameAlert = null;\n\n        if (!result) return;\n\n        const { game, params } = openGameAlert;\n        if (!game) return;\n        if (!params) return;\n\n        const { url, message } = params;\n        if (!url) return;\n        if (!message) return;\n\n        openGameInBrowser(url, message);\n    };\n\n    handleRequestUrlContinue = async (event, open, values) => {\n        const { requestUrlAlert } = this.state;\n        this.setState({ requestUrlAlert: null });\n\n        if (!open) return;\n\n        const { params } = requestUrlAlert;\n        if (!params) return;\n\n        const { result, chatId, messageId, buttonId } = params;\n        if (!result) return;\n\n        if (!values.value1) {\n            this.openUrlAlert = { url: result.url };\n            this.handleOpenUrlContinue(event, open);\n        } else {\n            const httpUrl = await TdLibController.send({\n                '@type': 'getLoginUrl',\n                chat_id: chatId,\n                message_id: messageId,\n                button_id: buttonId,\n                allow_write_access: result.request_write_access && values.value2\n            });\n\n            this.openUrlAlert = { url: httpUrl.url };\n            this.handleOpenUrlContinue(event, open);\n        }\n    };\n\n    handleInputPasswordContinue = (result, password) => {\n        const { inputPasswordAlert } = this.state;\n        const onCloseDialog = () => this.setState({ inputPasswordAlert: null });\n        const onError = error => this.setState({ inputPasswordAlert: { ...inputPasswordAlert, error } })\n\n        if (!result) {\n            onCloseDialog();\n            return;\n        }\n\n        const { onPassword } = inputPasswordAlert;\n        onPassword && onPassword(password, onCloseDialog, onError);\n    };\n\n    handleBlockSenderContinue = async (result, params) => {\n        const { requestBlockSenderAlert } = this.state;\n\n        this.setState({ requestBlockSenderAlert: null });\n\n        if (!result) {\n            return;\n        }\n\n        const { sender } = requestBlockSenderAlert;\n        if (!sender) return;\n\n        let chatId = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                blockSender(sender);\n                chatId = await TdLibController.send({ '@type': 'createPrivateChat', user_id: sender.user_id });\n                break;\n            }\n            case 'messageSenderChat': {\n                chatId = sender.chat_id;\n                break;\n            }\n        }\n\n        if (!params || params.reportSpam) {\n            const reason = getChatLocation(chatId)\n                ? { '@type': 'chatReportReasonUnrelatedLocation' }\n                : { '@type': 'chatReportReasonSpam' };\n\n            reportChat(chatId, reason);\n        }\n\n        if (!params || params.deleteChat) {\n            const deleteChat = canDeleteChat(chatId);\n            if (!deleteChat) return;\n\n            this.leaveChat = { chatId };\n            this.handleLeaveContinue(true, false);\n        }\n    };\n\n    handleLeaveVoiceChatContinue = (result, resultParams) => {\n        const { leaveVoiceChatAlert } = this.state;\n\n        this.setState({ leaveVoiceChatAlert: null });\n\n        const { params } = leaveVoiceChatAlert;\n        if (!params) return;\n\n        const { onResult } = params;\n\n        onResult && onResult(resultParams);\n    };\n\n    handleReportChatContinue = (result, params) => {\n        const { t } = this.props;\n        const { reportChatAlert } = this.state;\n\n        this.setState({ reportChatAlert: null });\n        if (!result) return;\n\n        const { chatId, messageIds } = reportChatAlert;\n\n        showSnackbar(t('ReportChatSent'), closeSnackbar => snackKey => {\n            return (\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => { closeSnackbar(snackKey); }}>\n                    <CloseIcon />\n                </IconButton>\n            )\n        });\n    };\n\n    render() {\n        const {\n            leaveChat,\n            clearHistory,\n            deleteMessages,\n            pinMessage,\n            unpinMessage,\n            alert,\n            openUrlAlert,\n            openGameAlert,\n            requestUrlAlert,\n            inputPasswordAlert,\n            requestBlockSenderAlert,\n            leaveVoiceChatAlert,\n            reportChatAlert\n        } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return (\n                <LeaveChatDialog\n                    chatId={chatId}\n                    onClose={this.handleLeaveContinue} />\n                );\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return (\n                <ClearHistoryDialog\n                    chatId={chatId}\n                    onClose={this.handleClearHistoryContinue} />\n                );\n        } else if (deleteMessages) {\n            const { chatId, messageIds } = deleteMessages;\n\n            return (\n                <DeleteMessagesDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleDeleteMessagesContinue} />\n                );\n        } else if (pinMessage) {\n            const { chatId, messageId } = pinMessage;\n\n            return (\n                <PinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handlePinMessageContinue} />\n            );\n        } else if (unpinMessage) {\n            const { chatId, messageId } = unpinMessage;\n\n            return (\n                <UnpinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handleUnpinMessageContinue} />\n            );\n        } else if (alert) {\n            const { params } = alert;\n\n            return (\n                <AlertDialog\n                    params={params}\n                    onClose={this.handleAlertContinue} />\n            );\n        } else if (openUrlAlert) {\n            const { url, params } = openUrlAlert;\n\n            return (\n                <OpenUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleOpenUrlContinue}/>\n            );\n        } else if (openGameAlert) {\n            const { game, params } = openGameAlert;\n\n            return (\n                <OpenGameDialog\n                    game={game}\n                    params={params}\n                    onClose={this.handleOpenGameContinue}/>\n            );\n        } else if (requestUrlAlert) {\n            const { url, params } = requestUrlAlert;\n\n            return (\n                <RequestUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleRequestUrlContinue}/>\n            );\n        } else if (inputPasswordAlert) {\n            const { state, error } = inputPasswordAlert;\n\n            return (\n                <InputPasswordDialog\n                    state={state}\n                    error={error}\n                    onClose={this.handleInputPasswordContinue}/>\n            );\n        } else if (requestBlockSenderAlert) {\n            const { sender } = requestBlockSenderAlert;\n\n            return (\n                <BlockSenderDialog\n                    sender={sender}\n                    onClose={this.handleBlockSenderContinue}/>\n            );\n        } else if (leaveVoiceChatAlert) {\n            const { params } = leaveVoiceChatAlert;\n\n            return (\n                <LeaveVoiceChatDialog\n                    params={params}\n                    onClose={this.handleLeaveVoiceChatContinue}/>\n            );\n        } else if (reportChatAlert) {\n            const { chatId, messageIds } = reportChatAlert;\n\n            return (\n                <ReportChatDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleReportChatContinue}/>\n            );\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function openGameInBrowser(url, message) {\n    let sharedPreferences = {};\n    try {\n        sharedPreferences = JSON.parse(localStorage.getItem('botshare')) || { };\n    } catch (e) { }\n\n    const existing = sharedPreferences['' + message.id];\n    let hash = existing ? existing : ''\n    let addHash = 'tgShareScoreUrl=' + encodeURIComponent('tg://share_game_score?hash=');\n    if (!existing) {\n        const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        const array = new Uint8Array(1);\n        for (let i = 0; i < 20; i++) {\n            window.crypto.getRandomValues(array)\n            hash += chars[array[0] % chars.length];\n        }\n\n        sharedPreferences['' + message.id] = hash;\n        localStorage.setItem('botshare', JSON.stringify(sharedPreferences));\n    }\n    addHash += hash;\n    const index = url.indexOf('#');\n    if (index < 0) {\n        url += '#' + addHash;\n    } else {\n        const curHash = url.substring(0, index + 1);\n        if (curHash.indexOf('=') >= 0 || curHash.indexOf('?') >= 0) {\n            url += '&' + addHash;\n        } else {\n            if (curHash.length > 0) {\n                url += '?' + addHash;\n            } else {\n                url += addHash;\n            }\n        }\n    }\n\n    const newWindow = window.open();\n    newWindow.opener = null;\n    newWindow.location = url;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,9C10.4,9 8.85,9.25 7.4,9.72V12.82C7.4,13.22 7.17,13.56 6.84,13.72C5.86,14.21 4.97,14.84 4.17,15.57C4,15.75 3.75,15.86 3.5,15.86C3.2,15.86 2.95,15.74 2.77,15.56L0.29,13.08C0.11,12.9 0,12.65 0,12.38C0,12.1 0.11,11.85 0.29,11.67C3.34,8.77 7.46,7 12,7C16.54,7 20.66,8.77 23.71,11.67C23.89,11.85 24,12.1 24,12.38C24,12.65 23.89,12.9 23.71,13.08L21.23,15.56C21.05,15.74 20.8,15.86 20.5,15.86C20.25,15.86 20,15.75 19.82,15.57C19.03,14.84 18.14,14.21 17.16,13.72C16.83,13.56 16.6,13.22 16.6,12.82V9.72C15.15,9.25 13.6,9 12,9Z' />,\n    'CallEnd'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './CallSettingsVideoPreview.css';\n\nclass CallSettingsVideoPreview extends React.Component {\n\n    componentDidMount() {\n        const { stream } = this.props;\n        if (stream) {\n            const video = document.getElementById('call-settings-video');\n            if (video) {\n                video.srcObject = stream;\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { stream } = this.props;\n        if (prevProps.stream !== stream) {\n            const video = document.getElementById('call-settings-video');\n            if (video) {\n                video.srcObject = stream;\n            }\n        }\n    }\n\n    componentWillUnmount() {\n    }\n\n    render() {\n\n        return (\n            <div>\n                <video id='call-settings-video' autoPlay={true} muted={true}/>\n            </div>\n        );\n    }\n\n}\n\nCallSettingsVideoPreview.propTypes = {\n    stream: PropTypes.object\n};\n\nexport default CallSettingsVideoPreview;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getAmplitude } from '../../Calls/Utils';\nimport './GroupCallMicAmplitude.css';\n\nclass GroupCallMicAmplitude extends React.Component {\n    constructor(props) {\n        super(props);\n        this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        this.timer = null;\n\n        this.state = {\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        const { stream } = this.props;\n        if (stream) {\n            this.addAnalyser(stream);\n        }\n    }\n\n    componentWillUnmount() {\n        const { stream } = this.props;\n        if (stream) {\n            this.removeAnalyser(stream);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { stream } = this.props;\n        if (prevProps.stream !== stream) {\n            this.removeAnalyser(prevProps.stream);\n            this.addAnalyser(stream);\n        }\n    }\n\n    addAnalyser(stream) {\n        if (!stream) return;\n\n        const { audioContext } = this;\n        if (!audioContext) return;\n\n        this.streamSource = audioContext.createMediaStreamSource(stream);\n        if (!this.analyser) {\n            const analyser = audioContext.createAnalyser();\n            analyser.minDecibels = -100;\n            analyser.maxDecibels = -30;\n            analyser.smoothingTimeConstant = 0.05;\n            analyser.fftSize = 1024;\n\n            this.analyser = analyser;\n        }\n        this.streamSource.connect(this.analyser);\n\n        this.timer = setInterval(() => this.analyse(), 100);\n    }\n\n    removeAnalyser(stream) {\n        if (!stream) return;\n\n        if (this.analyser && this.streamSource) {\n            this.streamSource.disconnect(this.analyser);\n        }\n\n        clearInterval(this.timer);\n    }\n\n    analyse() {\n        const { analyser } = this;\n        if (!analyser) return;\n\n        const array = new Uint8Array(analyser.frequencyBinCount);\n        analyser.getByteFrequencyData(array);\n        const value = getAmplitude(array, 1.5);\n\n        this.setState({\n            value\n        });\n    }\n\n    render() {\n        const { value } = this.state;\n\n        let d = '';\n        for (let i = 0; i < 35; i++) {\n            const x = i * 8 + 1.5;\n            d += `M${x},0v15Z`;\n        }\n\n        const bars = (\n            <svg className='group-call-mic-amplitude-bars' viewBox='0 0 275 15'>\n                <path d={d} fill='currentColor' strokeWidth={3}/>\n            </svg>\n        );\n\n        return (\n            <div className='group-call-mic-amplitude'>\n                {bars}\n                <div className='group-call-mic-amplitude-bars-accent' style={{ width: 275 * value }}>\n                    {bars}\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupCallMicAmplitude.propTypes = {\n    stream: PropTypes.object\n};\n\nexport default GroupCallMicAmplitude;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CallSettingsVideoPreview from './CallSettingsVideoPreview';\nimport GroupCallMicAmplitude from './GroupCallMicAmplitude';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport { copy } from '../../Utils/Text';\nimport { canManageVoiceChats, getChatUsername } from '../../Utils/Chat';\nimport { getStream } from '../../Calls/Utils';\nimport { showSnackbar } from '../../Actions/Client';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport './GroupCallSettings.css';\n\nclass GroupCallSettings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = { };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                const { openDeviceSelect } = this.state;\n                if (openDeviceSelect) {\n                    this.handleCloseDeviceSelect();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n\n                this.handleCancel();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId, callId } = props;\n        const { prevGroupCallId, prevCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            const { devices } = CallStore;\n\n            const outputDeviceId = CallStore.getOutputDeviceId();\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n            let muteSettings = { };\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                const {\n                    mute_new_participants: muteNewParticipants,\n                    allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\n                } = groupCall;\n\n                muteSettings = {\n                    muteNewParticipants,\n                    allowedChangeMuteNewParticipants\n                }\n            }\n\n            return {\n                prevGroupCallId: groupCallId,\n                devices,\n                outputDeviceId,\n                output,\n                inputAudioDeviceId,\n                inputAudio,\n                inputVideoDeviceId,\n                inputVideo,\n                ...muteSettings\n            };\n        } else if (prevCallId !== callId) {\n            const { devices } = CallStore;\n\n            const outputDeviceId = CallStore.getOutputDeviceId();\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n            return {\n                prevCallId: callId,\n                devices,\n                outputDeviceId,\n                output,\n                inputAudioDeviceId,\n                inputAudio,\n                inputVideoDeviceId,\n                inputVideo\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.handleSelectDevice('inputAudio', CallStore.getInputAudioDeviceId());\n        this.handleSelectDevice('inputVideo', CallStore.getInputVideoDeviceId());\n        navigator.mediaDevices.addEventListener('devicechange', this.onDeviceChange);\n        // navigator.permissions.addEventListener('onchange', this.onDeviceChange);\n        KeyboardManager.add(this.keyboardHandler);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        navigator.mediaDevices.removeEventListener('devicechange', this.onDeviceChange);\n        // navigator.permissions.removeEventListener('onchange', this.onDeviceChange);\n        KeyboardManager.remove(this.keyboardHandler);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n\n        this.closeStreams();\n    }\n\n    closeStreams() {\n        const { inputAudioStream, inputAudioDeviceId, inputVideoStream, inputVideoDeviceId } = this.state;\n        if (inputAudioStream) {\n            if (!CallStore.currentGroupCall && !CallStore.currentCall || inputAudioDeviceId === CallStore.getInputAudioDeviceId()) {\n                inputAudioStream.getAudioTracks().forEach(x => {\n                    x.stop();\n                });\n            }\n        }\n\n        if (inputVideoStream) {\n            if (!CallStore.currentGroupCall && !CallStore.currentCall || inputVideoDeviceId === CallStore.getInputVideoDeviceId()) {\n                inputVideoStream.getVideoTracks().forEach(x => {\n                    x.stop();\n                });\n            }\n        }\n    }\n\n    onUpdateGroupCall = update => {\n        const { groupCallId } = this.props;\n        const { group_call } = update;\n        if (!group_call) return;\n\n        const {\n            id,\n            mute_new_participants: muteNewParticipants,\n            allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\n        } = group_call;\n        if (id !== groupCallId) return;\n\n        this.setState({\n            muteNewParticipants,\n            allowedChangeMuteNewParticipants\n        });\n    };\n\n    onDeviceChange = async () => {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        CallStore.devices = devices;\n\n        const outputDeviceId = CallStore.getOutputDeviceId();\n        const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n        const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n        const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n        const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n        const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n        this.setState({\n            devices,\n            outputDeviceId,\n            output,\n            inputAudioDeviceId,\n            inputAudio,\n            inputVideoDeviceId,\n            inputVideo\n        });\n    };\n\n    handleOutputChange = event => {\n        const outputDeviceId = event.target.value;\n\n        this.setState({ outputDeviceId });\n    }\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { currentGroupCall } = CallStore;\n\n        const username = getChatUsername(currentGroupCall ? currentGroupCall.chatId : 0);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n        showSnackbar(t('LinkCopied'), closeSnackbar => snackKey => {\n            return (\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => { closeSnackbar(snackKey); }}>\n                    <CloseIcon />\n                </IconButton>\n            )\n        });\n    };\n\n    handleOpenDeviceSelect = async type => {\n        switch (type) {\n            case 'inputAudio': {\n                const { inputAudio } = this.state;\n                if (!inputAudio.length) {\n                    return;\n                }\n                break;\n            }\n            case 'output': {\n                const { output } = this.state;\n                if (!output.length) {\n                    return;\n                }\n                break;\n            }\n        }\n\n        this.setState({\n            openDeviceSelect: { type }\n        });\n    };\n\n    handleCloseDeviceSelect = () => {\n        this.setState({\n            openDeviceSelect: null\n        });\n    };\n\n    handleSelectDevice = async (type, deviceId) => {\n        this.handleCloseDeviceSelect();\n\n        switch (type) {\n            case 'output': {\n                CallStore.setOutputDeviceId(deviceId);\n                this.setState({\n                    outputDeviceId: deviceId\n                });\n                break;\n            }\n            case 'inputAudio': {\n                const { currentGroupCall, currentCall } = CallStore;\n                if (currentGroupCall) {\n                    const { streamManager } = currentGroupCall;\n                    if (!streamManager) return;\n\n                    const { inputAudioStream, inputAudioDeviceId } = this.state;\n                    if (inputAudioDeviceId === deviceId && inputAudioStream) return;\n\n                    if (inputAudioStream) {\n                        inputAudioStream.getAudioTracks().forEach(t => {\n                            t.stop()\n                        });\n                    }\n\n                    const stream = await getStream({\n                        audio: { deviceId: { exact: deviceId } },\n                        video: false\n                    });\n\n                    this.setState({\n                        inputAudioDeviceId: deviceId,\n                        inputAudioStream: stream\n                    });\n                } else if (currentCall) {\n                    const { inputAudioStream, inputAudioDeviceId } = this.state;\n                    if (inputAudioDeviceId === deviceId && inputAudioStream) return;\n\n                    if (inputAudioStream) {\n                        inputAudioStream.getAudioTracks().forEach(t => {\n                            t.stop()\n                        });\n                    }\n\n                    const stream = await getStream({\n                        audio: { deviceId: { exact: deviceId } },\n                        video: false\n                    });\n\n                    this.setState({\n                        inputAudioDeviceId: deviceId,\n                        inputAudioStream: stream\n                    });\n                }\n                break;\n            }\n            case 'inputVideo': {\n                const { currentCall } = CallStore;\n                if (!currentCall) return;\n\n                const { inputVideoStream, inputVideoDeviceId } = this.state;\n\n                if (inputVideoDeviceId === deviceId && inputVideoStream) return;\n\n                if (inputVideoStream) {\n                    inputVideoStream.getVideoTracks().forEach(t => {\n                        t.stop()\n                    });\n                }\n\n                const stream = await getStream({\n                    audio: false,\n                    video: { deviceId: { exact: deviceId } }\n                });\n\n                this.setState({\n                    inputVideoDeviceId: deviceId,\n                    inputVideoStream: stream\n                });\n                break;\n            }\n        }\n    };\n\n    handleEnd = () => {\n        const { currentGroupCall: call } = CallStore;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        CallStore.leaveGroupCall(chatId, groupCallId, true);\n    };\n\n    handleMuteNewParticipants = () => {\n        const { groupCallId } = this.props;\n        const { muteNewParticipants } = this.state;\n\n        this.setState({\n            muteNewParticipants: !muteNewParticipants\n        });\n\n        CallStore.toggleMuteNewParticipants(groupCallId, !muteNewParticipants);\n    };\n\n    handleDone = async () => {\n        const { onClose } = this.props;\n        const { inputAudioDeviceId, inputAudioStream, inputVideoDeviceId, inputVideoStream } = this.state;\n\n        if (inputAudioStream && inputAudioDeviceId !== CallStore.getInputAudioDeviceId()) {\n            await CallStore.setInputAudioDeviceId(inputAudioDeviceId, inputAudioStream);\n        }\n\n        if (inputVideoStream && inputVideoDeviceId !== CallStore.getInputVideoDeviceId()) {\n            await CallStore.setInputVideoDeviceId(inputVideoDeviceId, inputVideoStream);\n        }\n\n        onClose && onClose();\n    };\n\n    handleCancel = () => {\n        const { onClose } = this.props;\n\n        onClose && onClose();\n    };\n\n    render() {\n        const { callId, t } = this.props;\n        const {\n            inputAudioDeviceId,\n            inputAudioStream,\n            inputAudio,\n            inputVideoDeviceId,\n            inputVideoStream,\n            inputVideo,\n            outputDeviceId,\n            output,\n            openDeviceSelect,\n            muteNewParticipants,\n            allowedChangeMuteNewParticipants\n        } = this.state;\n\n\n        const outputDeviceInfo = output.find(x => x.deviceId === outputDeviceId || !outputDeviceId && x.deviceId === 'default');\n        const outputString = !outputDeviceInfo || outputDeviceInfo.deviceId === 'default' || !outputDeviceInfo.deviceId || !outputDeviceInfo.label ? t('Default') : outputDeviceInfo.label;\n\n        const inputAudioDeviceInfo = inputAudio.find(x => x.deviceId === inputAudioDeviceId || !inputAudioDeviceId && x.deviceId === 'default');\n        const inputAudioString = !inputAudioDeviceInfo || inputAudioDeviceInfo.deviceId === 'default' || !inputAudioDeviceInfo.deviceId || !inputAudioDeviceInfo.label ? t('Default') : inputAudioDeviceInfo.label;\n\n        const inputVideoDeviceInfo = inputVideo.find(x => x.deviceId === inputVideoDeviceId || !inputVideoDeviceId && x.deviceId === 'default');\n        const inputVideoString = !inputVideoDeviceInfo || inputVideoDeviceInfo.deviceId === 'default' || !inputVideoDeviceInfo.deviceId || !inputVideoDeviceInfo.label ? t('Default') : inputVideoDeviceInfo.label;\n\n        const { currentGroupCall } = CallStore;\n        const chatId = currentGroupCall ? currentGroupCall.chatId : 0;\n\n        const username = getChatUsername(chatId);\n\n        if (openDeviceSelect) {\n            const { type } = openDeviceSelect;\n            let items = [];\n            let deviceId = null;\n            switch (type) {\n                case 'output': {\n                    items = output;\n                    deviceId = outputDeviceId;\n                    break;\n                }\n                case 'inputAudio': {\n                    items = inputAudio;\n                    deviceId = inputAudioDeviceId;\n                    break;\n                }\n                case 'inputVideo': {\n                    items = inputVideo;\n                    deviceId = inputVideoDeviceId;\n                    break;\n                }\n            }\n\n            return (\n                <div className='group-call-settings-device-select'>\n                    <div className='group-call-settings-panel'>\n                        <div className='group-call-settings-panel-header'>\n                            <div className='group-call-panel-caption'>\n                                <div className='group-call-title'>{type === 'output' ? t('OutputDevice') : t('InputDevice')}</div>\n                            </div>\n                        </div>\n                        <div className='group-call-settings-panel-content'>\n                            {items.map(x => (\n                                <div key={x.deviceId} className='group-call-settings-panel-item' onClick={() => this.handleSelectDevice(type, x.deviceId)}>\n                                    <div className='group-call-settings-panel-item-title'>{x.label || t('Default')}</div>\n                                </div>\n                            ))}\n                        </div>\n                        <div className='group-call-settings-panel-buttons'>\n                            <div className='group-call-settings-panel-done' onClick={this.handleCloseDeviceSelect}>\n                                {t('OK')}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n\n\n        const canManage = canManageVoiceChats(chatId);\n        // console.log('[call][GroupCallSettings] render', muteNewParticipants, allowedChangeMuteNewParticipants);\n\n        return (\n            <div className='group-call-settings' onMouseDown={stopPropagation} onClick={this.handleCancel}>\n                <div className='group-call-settings-panel' onClick={stopPropagation}>\n                    <div className='group-call-settings-panel-header'>\n                        <div className='group-call-panel-caption'>\n                            <div className='group-call-title'>{t('Settings')}</div>\n                        </div>\n                    </div>\n                    <div className='group-call-settings-panel-content'>\n                        { canManage && allowedChangeMuteNewParticipants && (\n                            <div className='group-call-settings-panel-item' onClick={this.handleMuteNewParticipants}>\n                                <div className='group-call-settings-panel-item-title'>{t('VoipGroupOnlyAdminsCanSpeak')}</div>\n                                <Switch\n                                    disableRipple\n                                    classes={{\n                                        root: 'group-call-settings-panel-switch-root',\n                                        switchBase: 'group-call-settings-panel-switch-base',\n                                        colorSecondary: 'group-call-settings-panel-switch-color-secondary',\n                                        checked: 'group-call-settings-panel-switch-checked',\n                                        track: 'group-call-settings-panel-switch-track'\n                                    }}\n                                    checked={muteNewParticipants}\n                                    onChange={this.handleMuteNewParticipants}/>\n                            </div>\n                        )}\n\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('output')}>\n                            <div className='group-call-settings-panel-item-title'>{t('Speaker')}</div>\n                            <div className='group-call-settings-panel-item-subtitle'>{outputString}</div>\n                        </div>\n\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputAudio')}>\n                            <div className='group-call-settings-panel-item-title'>{t('Microphone')}</div>\n                            <div className='group-call-settings-panel-item-subtitle'>{inputAudioString}</div>\n                        </div>\n\n                        <GroupCallMicAmplitude stream={inputAudioStream}/>\n\n                        { callId && (\n                            <>\n                                <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputVideo')}>\n                                    <div className='group-call-settings-panel-item-title'>{t('Camera')}</div>\n                                    <div className='group-call-settings-panel-item-subtitle'>{inputVideoString}</div>\n                                </div>\n                                <CallSettingsVideoPreview stream={inputVideoStream}/>\n                                {/*<div>*/}\n                                {/*    <video id='call-settings-video' autoPlay={true} muted={true}/>*/}\n                                {/*</div>*/}\n                            </>\n                        )}\n                        { username && (\n                            <div className='group-call-settings-panel-item' onClick={this.handleCopyLink}>\n                                {t('VoipGroupCopyInviteLink')}\n                            </div>\n                        )}\n                        { canManage && (\n                            <div className='group-call-settings-panel-item group-call-settings-panel-item-secondary' onClick={this.handleEnd}>\n                                {t('VoipGroupEndChat')}\n                            </div>\n                        )}\n                    </div>\n                    <div className='group-call-settings-panel-buttons'>\n                        <div className='group-call-settings-panel-done' onClick={this.handleDone}>\n                            {t('Done')}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupCallSettings.propTypes = {\n    callId: PropTypes.number,\n    groupCallId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(GroupCallSettings);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,2A3,3 0 0,1 15,5V11A3,3 0 0,1 12,14A3,3 0 0,1 9,11V5A3,3 0 0,1 12,2M19,11C19,14.53 16.39,17.44 13,17.93V21H11V17.93C7.61,17.44 5,14.53 5,11H7A5,5 0 0,0 12,16A5,5 0 0,0 17,11H19Z' />,\n    'Mic'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,11C19,12.19 18.66,13.3 18.1,14.28L16.87,13.05C17.14,12.43 17.3,11.74 17.3,11H19M15,11.16L9,5.18V5A3,3 0 0,1 12,2A3,3 0 0,1 15,5V11L15,11.16M4.27,3L21,19.73L19.73,21L15.54,16.81C14.77,17.27 13.91,17.58 13,17.72V21H11V17.72C7.72,17.23 5,14.41 5,11H6.7C6.7,14 9.24,16.1 12,16.1C12.81,16.1 13.6,15.91 14.31,15.58L12.65,13.92L12,14A3,3 0 0,1 9,11V10.28L3,4.27L4.27,3Z' />,\n    'MicOff'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CallIcon from '@material-ui/icons/Call';\nimport VideocamIcon from '@material-ui/icons/VideocamOutlined';\nimport VideocamOffIcon from '@material-ui/icons/VideocamOffOutlined';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport GroupCallSettings from './GroupCallSettings';\nimport MenuIcon from '../../Assets/Icons/More';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport { closeCallPanel } from '../../Actions/Call';\nimport { isFirefox } from '../../Calls/P2P/P2PSdpBuilder';\nimport { p2pGetCallStatus, p2pIsCallReady } from '../../Calls/Utils';\nimport { getUserFullName } from '../../Utils/User';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './CallPanel.css';\n\nconst SUPPORTS_ROTATION = true;\n\nclass CallPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.callPanelRef = React.createRef();\n\n        const { callId } = props;\n\n        this.state = {\n            openSettings: false,\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            fullScreen: false,\n\n            inputMediaState: CallStore.p2pGetMediaState(callId, 'input'),\n            outputMediaState: CallStore.p2pGetMediaState(callId, 'output')\n        };\n    }\n\n    componentDidMount() {\n        const callPanel = this.callPanelRef.current;\n        if (callPanel) {\n            const prefixes = ['', 'moz', 'webkit', 'ms']\n            prefixes.forEach(x => {\n                callPanel.addEventListener(x + 'fullscreenchange', this.handleFullScreenChange);\n            });\n        }\n\n        CallStore.on('updateCall', this.handleUpdateCall);\n        CallStore.on('clientUpdateCallMediaState', this.onClientUpdateCallMediaState);\n    }\n\n    componentWillUnmount() {\n        const callPanel = this.callPanelRef.current;\n        if (callPanel) {\n            const prefixes = ['', 'moz', 'webkit', 'ms']\n            prefixes.forEach(x => {\n                callPanel.removeEventListener(x + 'fullscreenchange', this.handleFullScreenChange);\n            });\n        }\n\n        CallStore.off('updateCall', this.handleUpdateCall);\n        CallStore.off('clientUpdateCallMediaState', this.onClientUpdateCallMediaState);\n    }\n\n    onClientUpdateCallMediaState = update => {\n        const { callId: currentCallId } = this.props;\n        const { callId, mediaState, type } = update;\n        if (callId !== currentCallId) return;\n\n        if (type === 'input') {\n            this.setState({ inputMediaState: mediaState });\n        } else {\n            this.setState({ outputMediaState: mediaState });\n        }\n    };\n\n    handleUpdateCall = update => {\n        this.forceUpdate();\n    };\n\n    handleFullScreenChange = () => {\n        this.setState({\n            fullScreen: this.isFullScreen()\n        });\n    };\n\n    handleClick = () => {\n        this.handleClose();\n    }\n\n    handleAccept = async event => {\n        event.stopPropagation();\n\n        const { callId } = this.props;\n        if (!callId) return;\n\n        await CallStore.p2pAcceptCall(callId);\n    };\n\n    handleDiscard = async event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { callId } = this.props;\n        if (!callId) return;\n\n        closeCallPanel();\n        setTimeout(() => {\n            CallStore.p2pHangUp(callId, true);\n        }, 100);\n    };\n\n    handleOpenSettings = async event => {\n        this.handleCloseContextMenu();\n\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\n\n        this.setState({\n            openSettings: true\n        });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({\n            openSettings: false\n        });\n    };\n\n    handleClose = () => {\n        if (this.isFullScreen()) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.handleDiscard(null);\n    };\n\n    handleShareScreen = () => {\n        this.handleCloseContextMenu();\n\n        const { currentCall } = CallStore;\n        if (!currentCall) return;\n\n        const { screenStream } = currentCall;\n        if (screenStream) {\n            CallStore.p2pStopScreenSharing();\n        } else {\n            CallStore.p2pStartScreenSharing();\n        }\n    };\n\n    handleFullScreen = () => {\n        this.handleCloseContextMenu();\n\n        setTimeout(() => {\n            if (this.isFullScreen()) {\n                this.exitFullscreen();\n                return;\n            }\n\n            this.requestFullscreen();\n        }, 250);\n    }\n\n    isFullScreen() {\n        const callPanel = this.callPanelRef.current;\n        if (!callPanel) return false;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        return fullscreenElement === callPanel;\n    }\n\n    requestFullscreen() {\n        const callPanel = this.callPanelRef.current;\n        if (!callPanel) return false;\n\n        const method = callPanel.requestFullscreen || callPanel.mozRequestFullScreen || callPanel.webkitRequestFullscreen;\n\n        method && method.call(callPanel);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { currentTarget } = event;\n\n        const { userId } = this.props;\n        if (userId === UserStore.getMyId()) return;\n\n        const { anchorEl } = this.state;\n\n        if (anchorEl) {\n            this.setState({ anchorEl: null });\n        } else {\n            this.setState({\n                anchorEl: currentTarget\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleAudio = () => {\n        const { inputMediaState } = this.state;\n        if (!inputMediaState) return;\n\n        const { muted } = inputMediaState;\n\n        CallStore.p2pAudioEnabled(muted);\n    };\n\n    handleVideo = () => {\n        const { inputMediaState } = this.state;\n        if (!inputMediaState) return;\n\n        const muted = inputMediaState.videoState === 'inactive';\n\n        CallStore.p2pVideoEnabled(muted)\n    };\n\n    render() {\n        const { callId, t } = this.props;\n        const { openSettings, anchorEl, fullScreen, inputMediaState, outputMediaState } = this.state;\n        const { currentCall } = CallStore;\n\n        const call = CallStore.p2pGet(callId);\n        if (!call) return null;\n\n        const { user_id: userId, is_outgoing, state } = call;\n\n        let screenSharing = currentCall && Boolean(currentCall.screenStream);\n\n        let outputVideoStyle = null;\n        if (SUPPORTS_ROTATION && outputMediaState && isFirefox() && !is_outgoing) {\n            outputVideoStyle = {\n                transform: `rotate(${outputMediaState.videoRotation}deg)`\n            };\n        }\n\n        return (\n            <div className={classNames('group-call-panel', { 'full-screen': fullScreen })} ref={this.callPanelRef}>\n                <div className='group-call-panel-header'>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </div>\n                    <div className='group-call-panel-caption' onMouseDown={stopPropagation} onClick={stopPropagation}>\n                        <div className='group-call-title'>{getUserFullName(userId, null)}</div>\n                        <div className='group-call-join-panel-subtitle'>\n                            {p2pGetCallStatus(callId)}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleOpenContextMenu}>\n                        <MenuIcon />\n                    </div>\n                    <Popover\n                        container={this.callPanelRef.current}\n                        classes={{\n                            paper: 'group-call-participant-menu-root'\n                        }}\n                        anchorEl={anchorEl}\n                        open={Boolean(anchorEl)}\n                        onClose={this.handleCloseContextMenu}\n                        getContentAnchorEl={null}\n                        disableRestoreFocus={true}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleOpenSettings}>\n                                <ListItemText primary={t('Settings')} />\n                            </MenuItem>\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleFullScreen}>\n                                <ListItemText primary={fullScreen ? t('ExitFullScreen') : t('EnterFullScreen')} />\n                            </MenuItem>\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleShareScreen}>\n                                <ListItemText primary={screenSharing ? t('StopScreenSharing') : t('StartScreenSharing')} />\n                            </MenuItem>\n                        </MenuList>\n                    </Popover>\n                </div>\n                <div className='call-panel-content scrollbars-hidden' onDoubleClick={this.handleFullScreen}>\n                    <video id='call-output-video' style={outputVideoStyle} className={outputMediaState && outputMediaState.videoState === 'active' ? 'call-video-active' : 'call-video-inactive'} autoPlay={true} muted={false}/>\n                    <video id='call-input-video' className={inputMediaState && inputMediaState.videoState === 'active' ? 'call-video-active' : 'call-video-inactive'} autoPlay={true} muted={true}/>\n                </div>\n                { outputMediaState && outputMediaState.muted && (\n                    <div className='call-panel-microphone-hint'>\n                        <div className='call-panel-microphone-hint-wrapper'>\n                            <MicOffIcon/>\n                            <div className='call-panel-microphone-hint-text'>\n                                {LStore.formatString('VoipUserMicrophoneIsOff', getUserFullName(userId, null))}\n                            </div>\n                        </div>\n                    </div>\n                )}\n                <div className='group-call-panel-buttons'>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={this.handleVideo}>\n                            {inputMediaState && inputMediaState.videoState === 'active' ? <VideocamIcon/> : <VideocamOffIcon/>}\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {inputMediaState && inputMediaState.videoState === 'active' ? t('VoipStopVideo') : t('VoipStartVideo')}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleDiscard}>\n                            <CallEndIcon />\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {(p2pIsCallReady(callId) || is_outgoing) ? t('VoipEndCall') : t('VoipDeclineCall')}\n                        </div>\n                    </div>\n                    {!is_outgoing && state['@type'] === 'callStatePending' && (\n                        <div className='group-call-panel-button'>\n                            <div className='group-call-panel-button-answer' onMouseDown={stopPropagation} onClick={this.handleAccept}>\n                                <CallIcon />\n                            </div>\n                            <div className='group-call-panel-button-text'>\n                                {t('VoipAnswerCall')}\n                            </div>\n                        </div>\n                    )}\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={this.handleAudio}>\n                            {inputMediaState && !inputMediaState.muted ? <MicIcon/> : <MicOffIcon/>}\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {inputMediaState && !inputMediaState.muted ? t('Mute') : t('Unmute')}\n                        </div>\n                    </div>\n                </div>\n                {openSettings && <GroupCallSettings callId={callId} onClose={this.handleCloseSettings}/>}\n            </div>\n        );\n    }\n}\n\nCallPanel.propTypes = {\n    callId: PropTypes.number\n};\n\nexport default withTranslation()(CallPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CallPanel from './CallPanel';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { clamp } from '../../Utils/Common';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { modalManager } from '../../Utils/Modal';\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCall.css';\n\nclass Call extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = {\n            fullScreen: false\n        };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.setPosition();\n\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.add(this.keyboardHandler);\n        window.addEventListener('resize', this.onWindowResize);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.remove(this.keyboardHandler);\n        window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    onClientUpdateGroupCallFullScreen = update => {\n        const { fullscreen } = update;\n\n        this.setState({ fullscreen });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    handleMouseDown = event => {\n        if (event.nativeEvent.which !== 1) return;\n\n        const element = document.getElementById('call');\n        if (element) element.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        this.left = parseInt(element.style.left, 10);\n        this.top = parseInt(element.style.top, 10);\n        this.pageX = event.nativeEvent.pageX;\n        this.pageY = event.nativeEvent.pageY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.windowDragging = true;\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('call');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\n\n        const element = document.getElementById('call');\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.windowDragging = false;\n    };\n\n    setPosition() {\n        const element = document.getElementById('call');\n        let { pipParams } = CallStore;\n        if (!pipParams) {\n            pipParams = {\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\n            }\n        }\n\n        const { left: prevLeft, top: prevTop } = pipParams;\n\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\n\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    }\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('call');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        CallStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    render() {\n        const { callId } = this.props;\n        const { fullscreen } = this.state;\n\n        return (\n            <div\n                id='call'\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\n                onMouseDown={this.handleMouseDown}\n            >\n                <CallPanel callId={callId}/>\n            </div>\n        )\n    }\n}\n\nCall.propTypes = {\n    callId: PropTypes.number\n};\n\nexport default Call;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const membersFilter = this.filterRef.get('members');\n        if (selectedIndex === 0 && membersFilter) {\n            item = membersFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\n        if (selectedIndex === 6 && groupsInCommonFilter) {\n            item = groupsInCommonFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\n\n        const tabsCount =\n            (members.length > 0 ? 1 : 0) +\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0) +\n            (groupsInCommon.length > 0 ? 1 : 0);\n\n        const hasSharedMedia =\n            members.length > 0\n            || photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0\n            || groupsInCommon.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className={classNames('tabs', 'shared-media-tabs')}>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {members.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('members', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\n                            <span>{t('GroupMembers')}</span>\n                        </div>\n                    )}\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    {groupsInCommon.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\n                            <span>{t('SharedGroupsTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        const { prevPhoto } = state;\n        if (photo !== prevPhoto) {\n            return {\n                prevPhoto: photo,\n\n                contextMenu: false,\n                left: 0,\n                top: 0,\n\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo.minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { hasVideoNote } from '../../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedLinkTile.css';\n\nclass SharedLinkTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.file || thumbnail.photo;\n        if (!file) return;\n\n        if (update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\n                {hasSrc? (\n                    <img\n                        className={classNames(\n                            'shared-link-tile-photo',\n                            { 'shared-link-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                ) : (\n                    <span>{title}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedLinkTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default SharedLinkTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport SafeLink from '../../Additional/SafeLink';\nimport SharedLinkTile from './SharedLinkTile';\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\nimport { getFormattedText, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport { PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    static isValidEntity(entity) {\n        if (!entity) return false;\n\n        const { type } = entity;\n        if (!type) return false;\n\n        return (\n            type['@type'] === 'textEntityTypeUrl' ||\n            type['@type'] === 'textEntityTypeTextUrl' ||\n            type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let thumbnail = null;\n        let minithumbnail = null;\n        let content = null;\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\n            title: '',\n            description: {\n                '@type': 'formattedText',\n                text: '',\n                entities: []\n            },\n            photo: null,\n            animation: null,\n            audio: null,\n            document: null,\n            sticker: null,\n            video: null,\n            video_note: null,\n            url: ''\n        };\n\n        if (animation) {\n            minithumbnail = animation.minithumbnail;\n            thumbnail = animation.thumbnail;\n        } else if (audio) {\n            minithumbnail = audio.album_cover_minithumbnail;\n            thumbnail = audio.album_cover_thumbnail;\n        } else if (document) {\n            minithumbnail = document.minithumbnail;\n            thumbnail = document.thumbnail;\n        } else if (sticker) {\n            minithumbnail = sticker.minithumbnail;\n            thumbnail = sticker.thumbnail;\n        } else if (video) {\n            minithumbnail = video.minithumbnail;\n            thumbnail = video.thumbnail;\n        } else if (videoNote) {\n            minithumbnail = videoNote.minithumbnail;\n            thumbnail = videoNote.thumbnail;\n        }\n\n        if (!thumbnail && !minithumbnail && photo) {\n            minithumbnail = photo.minithumbnail;\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\n        }\n\n        let { text, caption } = message.content;\n        text = text || caption;\n        if (text) {\n            const { entities } = text;\n            if (entities && entities.length > 0) {\n                const longTextMaxLength = 40;\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\n\n                const nonEmptyUrlEntities = urlEntities\n                    .filter(x => {\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\n                        entityText = entityText.replace(/\\u200B/g,'');\n\n                        return entityText.length > 0;\n                    });\n\n                const links = nonEmptyUrlEntities.map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n\n                if (showLinks) {\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\n                            <div>{links}</div>\n                        </>);\n                } else {\n                    let d = description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && <div className='web-page-description'>{d}</div>}\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\n                        </>);\n                }\n\n                if (webPage) {\n                    title = title || this.getTitleFromUrl(url);\n                }\n            }\n        }\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <SharedLinkTile\n                        chatId={chatId}\n                        messageId={messageId}\n                        minithumbnail={minithumbnail}\n                        thumbnail={thumbnail}\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\n                    />\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor sender={sender_id} messageId={messageId} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../../Tile/User';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { openChat, openUser } from '../../../Actions/Client';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\nimport Chat from '../../Tile/Chat';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(item) {\n        if (!item) return undefined;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { content } = item;\n                switch (content['@type']) {\n                    case 'messagePhoto': {\n                        return undefined;\n                    }\n                    case 'messageVideo': {\n                        return undefined;\n                    }\n                    case 'messageDocument': {\n                        return 78;\n                    }\n                    case 'messageAudio': {\n                        return 94;\n                    }\n                    case 'messageVoiceNote': {\n                        return 74;\n                    }\n                    default: {\n                        return undefined;\n                    }\n                }\n            }\n            case 'chat': {\n                return 74;\n            }\n            case 'user': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return 74;\n            }\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n            case 6: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 0: {\n                const { user_id: id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`user_id=${id}`}\n                        className='groups-in-common-item'>\n                        <User userId={id} onSelect={onOpen}/>\n                    </ListItem>\n                );\n            }\n            case 1: {\n                const { chat_id, id, content } = item;\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={onOpen}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                const { chat_id, id } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 6: {\n                const { id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`chat_id=${id}`}\n                        className='groups-in-common-item'>\n                        <Chat chatId={id} onSelect={onOpen} />\n                    </ListItem>\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n            case 6: {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return null;\n            }\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n            case 6: {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 0: {\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\n            }\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n            case 6: {\n                return media.groupsInCommon || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        const { items, selectedIndex } = this.state;\n        if (!items.some(x => x.id === message_id)) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            switch (this.state.selectedIndex) {\n                case 0: {\n                    loadUsersContent(store, items.map(x => x.user_id));\n                    break;\n                }\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5: {\n                    loadMessageContents(store, items);\n                    break;\n                }\n                case 6: {\n                    loadChatsContent(store, items);\n                    break;\n                }\n            }\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        let source = [];\n        if (selectedIndex === 0) {\n            source = members;\n        } else if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        } else if (selectedIndex === 6) {\n            source = groupsInCommon;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (selectedIndex === 0) return;\n        if (selectedIndex === 6) return;\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    handleOpen = item => {\n        const { popup } = this.props;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { chat_id, id } = item;\n\n                openMedia(chat_id, id, false);\n                break;\n            }\n            case 'chat': {\n                const { id } = item;\n                openChat(id);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n                break;\n            }\n            case 'chatMember': {\n                const { user_id } = item;\n                openUser(user_id, true);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n            }\n        }\n    };\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        } = this.state;\n\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = members && members.length > 0\n            || photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0\n            || groupsInCommon && groupsInCommon.length > 0;\n        if (!hasItems) {\n            return (<div ref={this.listRef}/>);\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        let openChatTitle = t('SendMessage');\n        if (isChannelChat(chatId)) {\n            openChatTitle = t('OpenChannel');\n        } else if (isGroupChat(chatId)) {\n            openChatTitle = t('OpenGroup');\n        }\n\n        let chatUrl = ''\n        if (username) {\n            if (isPrivateChat(chatId)) {\n                chatUrl = username;\n            } else {\n                const tMeUrl = OptionStore.get('t_me_url')\n                    .value\n                    .toLowerCase()\n                    .replace('https://', '')\n                    .replace('http://', '');\n\n                chatUrl = tMeUrl + username;\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\n                    onScroll={this.handleScroll}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                        {!isMe && (\n                            <List className='chat-details-items'>\n                                {bio && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            secondary={isPrivateChat(chatId) ? t('Bio') : t('DescriptionPlaceholder')}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                {username && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {chatUrl}\n                                                </Typography>\n                                            }\n                                            secondary={isPrivateChat(chatId) ? t('Username') : t('InviteLink')}\n                                        />\n                                    </ListItem>\n                                )}\n                                {isPrivateChat(chatId) && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {phoneNumber ? formatPhoneNumber(phoneNumber) : t('PhoneHidden')}\n                                                </Typography>\n                                            }\n                                            secondary={t('Phone')}\n                                        />\n                                    </ListItem>\n                                )}\n                                <NotificationsListItem chatId={chatId} />\n                                {popup && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {openChatTitle.toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        )}\n                    </div>\n\n                    <div ref={this.dividerRef}/>\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender_id } = last_message;\n        if (sender_id.user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\n    }\n\n    onUpdateMessageSendAcknowledged = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.setState({ sendingState: null });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(DialogMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\n    </g>,\n    'PinOff'\n);\n\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <ListItem\n                button\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}\n                >\n                    <div className='dialog-wrapper'>\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline showGroupCall/>\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                                <DialogMeta chatId={chatId} />\n                            </div>\n                            <div className='tile-second-row'>\n                                <DialogContent chatId={chatId} />\n                                <DialogBadge chatId={chatId} chatList={chatList} />\n                            </div>\n                        </div>\n                    </div>\n                    <Popover\n                        open={contextMenu}\n                        onClose={this.handleCloseContextMenu}\n                        anchorReference='anchorPosition'\n                        anchorPosition={{ top, left }}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            {canToggleArchive && (\n                                <MenuItem onClick={this.handleArchive}>\n                                    {isArchived ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnarchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Unarchive')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <ArchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Archive')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            {canTogglePin && (\n                                <MenuItem onClick={this.handlePin}>\n                                    {isPinned ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnpinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('UnpinFromTop')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <PinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('PinToTop')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleViewInfo}>\n                                <ListItemIcon>\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                            </MenuItem>\n                            { canMute && (\n                                <MenuItem onClick={this.handleMute}>\n                                    {isMuted ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnmuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsUnmute')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <MuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsMute')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleRead}>\n                                {isUnread ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <MessageIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsRead')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnreadIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsUnread')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                            {/*{clearHistory && (*/}\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                            {/*        <ListItemIcon>*/}\n                            {/*            <BroomIcon />*/}\n                            {/*        </ListItemIcon>*/}\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                            {/*    </MenuItem>*/}\n                            {/*)}*/}\n                            {deleteChat && deleteChatTitle && (\n                                <MenuItem onClick={this.handleDeleteChat}>\n                                    <ListItemIcon>\n                                        <DeleteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={deleteChatTitle} />\n                                </MenuItem>\n                            )}\n                        </MenuList>\n                    </Popover>\n            </ListItem>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n    if (element.scrollTop === 0) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 50);\n    setTimeout(() => {\n        element.scrollTo({ top: 0, behavior });\n    }, 1);\n}\n\nexport function scrollBottom(element, behavior = 'smooth') {\n    if (!element) return;\n    if (element.scrollTop === element.scrollHeight - element.offsetHeight) return;\n\n    element.scrollTop = Math.max(element.scrollTop, element.scrollHeight - element.offsetHeight - 50);\n    setTimeout(() => {\n        element.scrollTo({ top: element.scrollHeight - element.offsetHeight, behavior });\n    }, 1);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport {\n    STORAGE_CACHE_KEY,\n    STORAGE_CACHE_TEST_KEY,\n    STORAGE_CONTACTS_KEY,\n    STORAGE_CONTACTS_TEST_KEY,\n    STORAGE_FILES_KEY,\n    STORAGE_FILES_TEST_KEY,\n    STORAGE_FILTERS_KEY,\n    STORAGE_FILTERS_TEST_KEY, STORAGE_REGISTER_KEY, STORAGE_REGISTER_TEST_KEY\n} from '../Constants';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        const { useTestDC } = TdLibController.parameters;\n        this.cacheKey = useTestDC ? STORAGE_CACHE_TEST_KEY : STORAGE_CACHE_KEY;\n        this.contactsKey = useTestDC ? STORAGE_CONTACTS_TEST_KEY : STORAGE_CONTACTS_KEY;\n        this.filesKey = useTestDC ? STORAGE_FILES_TEST_KEY : STORAGE_FILES_KEY;\n        this.filtersKey = useTestDC ? STORAGE_FILTERS_TEST_KEY : STORAGE_FILTERS_KEY;\n        this.registerKey = useTestDC ? STORAGE_REGISTER_TEST_KEY : STORAGE_REGISTER_KEY;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000, {\n            leading: false,\n            trailing: true\n        });\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove(this.cacheKey);\n                        CacheManager.remove(this.filesKey);\n                        if (this.cacheContacts) {\n                            CacheManager.remove(this.contactsKey);\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        const promises = [];\n        promises.push(CacheManager.load(this.cacheKey).catch(error => null));\n        promises.push(CacheManager.load(this.filesKey).catch(error => null));\n        promises.push(CacheManager.load(this.filtersKey).catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load(this.contactsKey).catch(error => null));\n        }\n        let [cache, files, filters, contacts] = await Promise.all(promises);\n        // console.log('[f] cache.load', files);\n\n        let dropCache = false;\n        if (cache && cache.chats) {\n            for (let i = 0; i < cache.chats.length; i++) {\n                const { last_message } = cache.chats[i];\n                if (last_message && last_message.sender_user_id) {\n                    dropCache = true;\n                    break;\n                }\n            }\n        }\n        if (dropCache) {\n            cache = null;\n        }\n\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[f] cache.parse', cache.files);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const chatMap = new Map(chats.map(x => [x.id, x]));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_id } = last_message;\n                switch (sender_id['@type']) {\n                    case 'messageSenderUser': {\n                        const user = UserStore.get(sender_id.user_id);\n                        if (user) {\n                            userMap.set(user.id, user);\n                        }\n                        break;\n                    }\n                    case 'messageSenderChat': {\n                        const chat = ChatStore.get(sender_id.chat_id);\n                        if (chat) {\n                            chatMap.set(chat.id, chat);\n                        }\n                        break;\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats: [...chatMap.values()],\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        // console.log('[cm] save');\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal');\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save(this.cacheKey, cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        const results = await Promise.all(promises);\n        await CacheManager.save(this.filesKey, results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save(this.contactsKey, contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save(this.filtersKey, this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove(this.cacheKey).catch(error => null));\n        promises.push(CacheManager.remove(this.filesKey).catch(error => null));\n        promises.push(CacheManager.remove(this.filtersKey).catch(error => null));\n        promises.push(CacheManager.remove(this.contactsKey).catch(error => null));\n        promises.push(CacheManager.remove(this.registerKey).catch(error => null));\n\n        Promise.all(promises);\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport { openSupportChat } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n\n        openSupportChat();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div className='search-input-wrapper'>\n                    {showIcon && <SearchIcon className='search-input-icon' />}\n                    <div\n                        id='search-inputbox'\n                        ref={inputRef}\n                        placeholder={hint || t('Search')}\n                        contentEditable\n                        suppressContentEditableWarning\n                        onKeyDown={this.handleKeyDown}\n                        onKeyUp={this.handleKeyUp}\n                        onPaste={this.handlePaste}\n                        onInput={this.handleInput}\n                        onFocus={onFocus}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport { openChatList } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListMain' });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListFilter', chat_filter_id: id });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div className='tabs'>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                    {filters.map(x => (\n                        <div\n                            key={x.id}\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\n                            title={isSmallWidth ? x.title : null}>\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                        </div>))}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        if (chatListEquals(this.state.chatList, chatList)) {\n            this.scrollToTop();\n        } else {\n            this.setState({\n                chatList,\n                params: {\n                    loading: false,\n                    completed: false\n                }\n            }, () => {\n                this.loadFirstSlice();\n            });\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error(`[vl] skip ${update['@type']}`, { id: chat_id, title: ChatStore.get(chat_id).title, chat: ChatStore.get(chat_id) });\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        // console.log('[vl] reorderChats', orderedChatIds);\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        return;\n\n        // console.log('[vl] onScroll');\n        if (this.stub) return;\n\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const list = current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        let offsetChat = null;\n        if (!replace && chats && chats.length > 0) {\n            offsetChat = ChatStore.get(chats[chats.length - 1]);\n            if (offsetChat) {\n                offsetOrder = getChatOrder(offsetChat.id, chatList);\n                offsetChatId = offsetChat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[vl] GETCHATS start', type, offsetOrder, offsetChatId, offsetChat);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            limit: 300\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        if (type === 'chatListMain') console.log('[vl] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source, stub = false) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        if (stub) {\n            return <DialogPlaceholder key={index} index={index} />\n        }\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        this.source = [];\n        this.stub = false;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                this.source = Array.from(Array(10));\n                this.stub = true;\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source, this.stub)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    cacheItems: PropTypes.array,\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    handleClick = () => {\n        const { innerListRef } = this.props;\n        if (!innerListRef) return;\n\n        const { current: list } = innerListRef;\n        if (!list) return;\n\n        list.scrollToTop();\n    };\n\n    render() {\n        const { t, innerListRef, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer' onClick={this.handleClick}>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline showGroupCall/>\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_id.user_id && chatSearch ? (\n                <UserTile userId={sender_id.user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, SEARCH_GLOBAL_TEXT_MIN, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= SEARCH_GLOBAL_TEXT_MIN) {\n                trimmedText = trimmedText.length === SEARCH_GLOBAL_TEXT_MIN ? trimmedText + '.' : trimmedText;\n\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_id.user_id) {\n                users.set(messages.messages[i].sender_id.user_id, messages.messages[i].sender_id.user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, message } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (message) {\n                const { sender_id } = message;\n                if (sender_id && sender_id.user_id) {\n                    users.set(sender_id.user_id, sender_id.user_id);\n                }\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_id.user_id) {\n                users.set(result.messages[i].sender_id.user_id, result.messages[i].sender_id.user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current.cropper;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputChatPhotoStatic', photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data } }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\nimport { scrollBottom } from '../../../Utils/DOM';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        scrollBottom(wrapPanel, 'auto');\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput wrapperRef={this.searchRef} inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let { type, primary } = { type: 'light', primary: { main: '#50A2E9' } };\n        try {\n            const themeOptions = JSON.parse(localStorage.getItem('themeOptions'));\n            type = themeOptions.type;\n            primary = themeOptions.primary;\n        } catch {}\n\n        this.state = {\n            open: false,\n            type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        const type = event.target.value;\n\n        this.setState({ type });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                disableEnforceFocus={true}\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Theme')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='default' control={<Radio color='primary' />} label='System Default' />\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport { isMacOS } from '../../../Utils/Common';\nimport { SEND_BY_CTRL_ENTER_KEY } from '../../../Constants';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const sendByCtrlEnterOption = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false,\n            sendByCtrlEnter: Boolean(sendByCtrlEnterOption && sendByCtrlEnterOption.value)\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    async handleSetOption(command) {\n        let value = false;\n        switch (command) {\n            case 'sendByCtrlEnter': {\n                value = true;\n                break;\n            }\n            case 'sendByEnter': {\n                value = false;\n                break;\n            }\n        }\n\n        await TdLibController.send({\n            '@type': 'setOption',\n            name: SEND_BY_CTRL_ENTER_KEY,\n            value: { '@type': 'optionValueBoolean', value }\n        });\n\n        this.setState({\n            sendByCtrlEnter: value\n        });\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground, sendByCtrlEnter } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Theme')} />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('Keyboard')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByEnter')}>\n                            <Radio\n                                color='primary'\n                                className='settings-item-control'\n                                checked={!sendByCtrlEnter}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('SendByEnter')}\n                                secondary={t('NewLineByShiftEnter')}\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByCtrlEnter')}>\n                            <Radio\n                                color='primary'\n                                className='settings-item-control'\n                                checked={sendByCtrlEnter}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={isMacOS() ? t('SendByCommandEnter') : t('SendByControlEnter')}\n                                secondary={t('NewLineByEnter')}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions, t } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport { unblockSender } from '../../../Actions/Message';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\n    }\n\n    handleUnblockUser = async userId => {\n        unblockSender({ '@type': 'messageSenderUser', user_id: userId });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.senders.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport SectionHeader from '../SectionHeader';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacyCalls.css';\n\nclass PrivacyCalls extends React.Component {\n    state = {\n        prevAllowCalls: null,\n        prevAllowP2PCalls: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { allowCalls, allowP2PCalls } = props;\n        const { prevAllowCalls, prevAllowP2PCalls } = state;\n        if (allowCalls !== prevAllowCalls || allowP2PCalls !== prevAllowP2PCalls) {\n            const allowCallsValue = allowCalls.rules.find(x =>\n                x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n                x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n                x['@type'] === 'userPrivacySettingRuleRestrictAll');\n\n            const allowP2PCallsValue = allowP2PCalls.rules.find(x =>\n                x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n                x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n                x['@type'] === 'userPrivacySettingRuleRestrictAll');\n\n            return {\n                prevAllowCalls: allowCalls,\n                prevAllowP2PCalls: allowP2PCalls,\n                allowCallsValue: allowCallsValue ? allowCallsValue['@type'] : 'userPrivacySettingRuleRestrictAll',\n                allowP2PCallsValue: allowP2PCallsValue ? allowP2PCallsValue['@type'] : 'userPrivacySettingRuleRestrictAll'\n            }\n        }\n\n        return null;\n    }\n\n    componentWillUnmount() {\n        this.setSettings();\n    }\n\n    setSettings() {\n        const { allowCalls, allowP2PCalls } = this.props;\n        const { allowCallsValue, allowP2PCallsValue } = this.state;\n\n        const prevAllowCallsValue = allowCalls.rules.find(x =>\n            x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n            x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n            x['@type'] === 'userPrivacySettingRuleRestrictAll');\n        if (!prevAllowCallsValue || allowCallsValue !== prevAllowCallsValue['@type']) {\n            let added = false;\n            const rules = {\n                '@type': 'userPrivacySettingRules',\n                rules: allowCalls.rules.map(x => {\n                    if (x['@type'] === prevAllowCallsValue['@type']) {\n                        added = true;\n                        return { '@type': allowCallsValue }\n                    } else {\n                        return x;\n                    }\n                })\n            }\n\n            if (!added) {\n                rules.rules.push({ '@type': allowCallsValue });\n            }\n\n            TdLibController.send({\n                '@type': 'setUserPrivacySettingRules',\n                setting: { '@type': 'userPrivacySettingAllowCalls' },\n                rules\n            });\n        }\n\n        const prevAllowP2PCallsValue = allowP2PCalls.rules.find(x =>\n            x['@type'] === 'userPrivacySettingRuleAllowAll' ||\n            x['@type'] === 'userPrivacySettingRuleAllowContacts' ||\n            x['@type'] === 'userPrivacySettingRuleRestrictAll');\n        if (!prevAllowP2PCallsValue || allowP2PCallsValue !== prevAllowP2PCallsValue['@type']) {\n            let added = false;\n            const rules = {\n                '@type': 'userPrivacySettingRules',\n                rules: allowP2PCalls.rules.map(x => {\n                    if (x['@type'] === prevAllowP2PCallsValue['@type']) {\n                        added = true;\n                        return { '@type': allowP2PCallsValue }\n                    } else {\n                        return x;\n                    }\n                })\n            }\n\n            if (!added) {\n                rules.rules.push({ '@type': allowP2PCallsValue });\n            }\n\n            TdLibController.send({\n                '@type': 'setUserPrivacySettingRules',\n                setting: { '@type': 'userPrivacySettingAllowPeerToPeerCalls' },\n                rules\n            });\n        }\n    }\n\n    handleChangeAllowCalls = event => {\n        this.setState({\n            allowCallsValue: event.currentTarget.value\n        });\n    };\n\n    handleChangeAllowP2PCalls = event => {\n        this.setState({\n            allowP2PCallsValue: event.currentTarget.value\n        });\n    };\n\n    render() {\n        const { onClose, t } = this.props;\n        const { allowCallsValue, allowP2PCallsValue } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Calls')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('WhoCanCallMe')}</SectionHeader>\n                        <RadioGroup aria-label='' name='' value={allowCallsValue} onChange={this.handleChangeAllowCalls}>\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowAll' control={<Radio color='primary'/>} label={t('P2PEverybody')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowContacts' control={<Radio color='primary'/>} label={t('P2PContacts')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleRestrictAll' control={<Radio color='primary'/>} label={t('P2PNobody')} />\n                        </RadioGroup>\n\n                        <SectionHeader>{t('PrivacyP2P')}</SectionHeader>\n                        <RadioGroup aria-label='' name='' value={allowP2PCallsValue} onChange={this.handleChangeAllowP2PCalls}>\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowAll' control={<Radio color='primary'/>} label={t('P2PEverybody')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleAllowContacts' control={<Radio color='primary'/>} label={t('P2PContacts')} />\n                            <FormControlLabel className='privacy-calls-item' value='userPrivacySettingRuleRestrictAll' control={<Radio color='primary'/>} label={t('P2PNobody')} />\n                        </RadioGroup>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nPrivacyCalls.propTypes = {\n    allowCalls: PropTypes.object.isRequired,\n    allowP2PCalls: PropTypes.object.isRequired,\n};\n\nexport default withTranslation()(PrivacyCalls);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CallOutlinedIcon from '@material-ui/icons/CallOutlined';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\nimport PrivacyCalls from './PrivacyCalls';\nimport { CallOutlined } from '@material-ui/icons';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        openActiveSessions: false,\n\n        users: null,\n        openBlockedUsers: false,\n\n        allowCalls: null,\n        allowP2PCalls: null,\n        openCalls: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, senders } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    senders: senders.filter(x => x.user_id !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).catch(() => null));\n        promises.push(TdLibController.send({\n            '@type': 'getBlockedMessageSenders',\n            offset: 0,\n            limit: 100\n        }).catch(() => null));\n        promises.push(TdLibController.send({\n            '@type': 'getUserPrivacySettingRules',\n            setting: { '@type': 'userPrivacySettingAllowCalls' }\n        }).catch(() => null));\n        promises.push(TdLibController.send({\n            '@type': 'getUserPrivacySettingRules',\n            setting: { '@type': 'userPrivacySettingAllowPeerToPeerCalls' }\n        }).catch(() => null));\n\n        const [ sessions, users, allowCalls, allowP2PCalls ] = await Promise.all(promises);\n\n        this.setState({\n            sessions,\n            users,\n            allowCalls,\n            allowP2PCalls\n        });\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    openCalls = () => {\n        const { allowCalls, allowP2PCalls } = this.state;\n        if (!allowCalls || !allowP2PCalls) return;\n\n        this.setState({\n            openCalls: true\n        });\n    };\n\n    closeCalls = () => {\n        this.setState({\n            openCalls: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const {\n            openBlockedUsers, users,\n            openActiveSessions, sessions,\n            openCalls, allowCalls, allowP2PCalls\n        } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openCalls}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <CallOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                className='settings-list-item-text'\n                                primary={t('Calls')}\n                                secondary={''}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n                <SidebarPage open={openCalls} onClose={this.closeCalls}>\n                    <PrivacyCalls allowCalls={allowCalls} allowP2PCalls={allowP2PCalls} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile || defaultPhoto) {\n            const photo = defaultPhotoFile\n                ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\n\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputChatPhotoStatic', photo }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\nimport { scrollBottom } from '../../Utils/DOM';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        scrollBottom(wrapPanel, 'auto');\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile || defaultPhoto) {\n                const photo = defaultPhotoFile\n                     ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                     : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\n\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputChatPhotoStatic', photo }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache && cache.chats ? cache.chats : null;\n        const archiveCacheItems = cache && cache.archiveChats ? cache.archiveChats : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        {/*<UpdatePanel />*/}\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    onClientUpdateBlob = update => {\n        const { chatId, messageId, thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\n        if (!thumbnail) return null;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(file);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile' onClick={onClick}>\n                {miniSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-mini-blurred': true }\n                        )}\n                        draggable={false}\n                        src={miniSrc}\n                        alt=''\n                    />\n                )}\n                {src && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\nimport { closePinned, openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        closePinned();\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {thumbnail && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            minithumbnail={minithumbnail}\n                            thumbnail={thumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Save') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, getChatFullInfo, isMeChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { isDeletedUser, isMeUser } from '../../Utils/User';\nimport { PHOTO_SIZE, SEND_BY_CTRL_ENTER_KEY, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('clientUpdateSendText', this.onClientUpdateSendText);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('clientUpdateSendText', this.onClientUpdateSendText);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n    };\n\n    onClientUpdateSendText = update => {\n        const { text } = update;\n\n        if (!text) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = text;\n        focusInput(element);\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const { chatSelectOptions } = AppStore;\n        if (chatSelectOptions && chatSelectOptions.switchInline) {\n            this.setFormattedText({ '@type': 'formattedText', text: chatSelectOptions.switchInline, entities: [] });\n            return;\n        }\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                const sendByCtrlEnter = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\n                if (sendByCtrlEnter && sendByCtrlEnter.value) {\n                    // enter+cmd, enter+ctrl, enter+shift\n                    if (!altKey && !ctrlKey && !metaKey && !repeat) {\n                        document.execCommand('insertLineBreak');\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                    // enter+cmd, enter+ctrl\n                    else if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                        this.handleSubmit(false);\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                } else {\n                    // enter+cmd, enter+ctrl, enter+shift\n                    if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                        document.execCommand('insertLineBreak');\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                    // enter\n                    else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                        this.handleSubmit(false);\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    async editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        return TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n\n        // const { text, position } = this.getTextAndCaretPosition();\n        // this.searchUsernameOrHashtag(text, position, [], false);\n    };\n\n    getTextAndCaretPosition = () => {\n        const { current: input } = this.newMessageRef;\n        if (!input) return;\n\n        input.focus()\n        let _range = document.getSelection().getRangeAt(0);\n        let range = _range.cloneRange();\n        range.selectNodeContents(input);\n        range.setEnd(_range.endContainer, _range.endOffset);\n\n        return { text: input.innerText, position: range.toString().length };\n    };\n\n    searchUsernameOrHashtag(text, position, messages, usernameOnly) {\n        const { chatId } = this.state;\n\n        const searchResultUsernames = [];\n\n        if (this.cancelDelayRunnable) {\n            clearTimeout(this.cancelDelayRunnable);\n            this.cancelDelayRunnable = null;\n        }\n\n        const info = getChatFullInfo(chatId);\n        const needUsernames = true;\n        const needBotContext = true;\n\n        const now = Date.now();\n        this.now = now;\n\n        let searchPosition = position;\n        if (text.length > 0) {\n            searchPosition--;\n        }\n\n        this.lastText = text;\n        this.lastUsernameOnly = usernameOnly;\n\n        let foundType = -1;\n        let result = '';\n        let resultStartPosition;\n        let resultLength;\n\n        let dogPosition = -1;\n        if (usernameOnly) {\n            result += text.substring(1);\n            resultStartPosition = 0;\n            resultLength = result.length;\n            foundType = 0;\n        } else {\n            for (let i = searchPosition; i >= 0; i--) {\n                if (i >= text.length){\n                    continue;\n                }\n                let ch = text[i];\n                if (i === 0 || text[i - 1] === ' ' || text[i - 1] === '\\n' || text[i - 1] === ':') {\n                    if (ch === '@') {\n                        if (needUsernames || needBotContext && i === 0){\n                            if (!info && i !== 0) {\n                                this.lastText = text;\n                                this.lastPosition = position;\n                                this.messages = messages;\n                                this.closeHints(now);\n                                return;\n                            }\n                            dogPosition = i;\n                            foundType = 0;\n                            resultStartPosition = i;\n                            resultLength = result.length + 1;\n                        }\n                    }\n                }\n\n                result = ch + result;\n            }\n        }\n\n        if (foundType === -1) {\n            this.closeHints(now);\n            return;\n        }\n\n        if (foundType === 0) {\n            const users = [];\n            const usersMap = new Map();\n            for (let i = 0; i < Math.min(100, messages.length); i++) {\n                const { sender } = messages[i];\n                if (sender && sender.user_id && !usersMap.has(sender.user_id)) {\n                    usersMap.set(sender.user_id, sender.user_id);\n                    users.push(sender.user_id);\n                }\n            }\n\n            let usernameString = result.substr(resultStartPosition, resultLength).toLowerCase();\n            const hasSpace = usernameString.indexOf(' ') >= 0;\n            const newResult = [];\n            const newResultsMap = new Map();\n            const newMap = new Map();\n\n            const inlineBots = [];\n            if (!usernameOnly && needBotContext && dogPosition === 0 && inlineBots.length > 0) {\n\n            }\n\n            const chat = ChatStore.get(chatId);\n            if (chat && info && info.members) {\n                for (let i = -1; i < info.members.length; i++) {\n                    let username;\n                    let firstName;\n                    let lastName;\n                    let object;\n                    let id;\n                    if (i === -1) {\n                        if (!usernameString.length) {\n                            newResult.push(chat);\n                            continue;\n                        }\n                        firstName = chat.title;\n                        lastName = '';\n                        username = chat.username;\n                        object = chat;\n                        id = -chat.id;\n                    } else {\n                        const { user_id } = info.members[i];\n                        const user = UserStore.get(user_id);\n                        if (!user || !usernameOnly && isMeUser(user_id) || newResultsMap.has(user_id)) {\n                            continue;\n                        }\n                        if (!usernameString.length) {\n                            if (!isDeletedUser(user_id)) {\n                                newResult.push(user);\n                                continue;\n                            }\n                        }\n                        firstName = user.first_name;\n                        lastName = user.last_name;\n                        username = user.username;\n                        object = user;\n                        id = user.id;\n                    }\n\n                    if (username.length > 0 && username.toLowerCase().startsWith(usernameString)\n                        || firstName.length > 0 && firstName.toLowerCase().startsWith(usernameString)\n                        || lastName.length > 0 && lastName.toLowerCase().startsWith(usernameString)\n                        || hasSpace && `${firstName} ${lastName}`.toLowerCase().startsWith(usernameString)) {\n                        newResult.push(object);\n                        newMap.set(id, object);\n                    }\n                }\n            }\n\n            if (isSupergroup(chatId) && usernameString.length > 0) {\n                if (newResult.length < 5) {\n                    this.cancelDelayRunnable = setTimeout(() => {\n                        this.cancelDelayRunnable = null;\n                        this.showUsersResult(now, newResult, newMap, true);\n                    }, 0);\n                } else {\n                    this.showUsersResult(now, newResult, newMap, true);\n                }\n\n                setTimeout(async () => {\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const result = await TdLibController.send({\n                        '@type': 'searchChatMembers',\n                        chat_id: chatId,\n                        query: usernameString,\n                        limit: 20,\n                        filter: { '@type': 'chatMembersFilterMention', message_thread_id: 0 }\n                    });\n\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const { members } = result;\n                    if (members.length > 0) {\n                        for (let i = 0; i < members.length; i++) {\n                            const { user_id } = members[i];\n                            if (isMeUser(user_id)) {\n                                continue;\n                            }\n                            const user = UserStore.get(user_id);\n                            if (!user) {\n                                continue;\n                            }\n\n                            searchResultUsernames.push(user);\n                        }\n\n                        this.notifyDataSetChanged(now, searchResultUsernames);\n                    }\n\n\n                }, 200);\n            } else {\n                this.showUsersResult(now, newResult, newMap, true);\n            }\n        }\n    }\n\n    notifyDataSetChanged(id, searchResultUsernames) {\n        console.log('[search] global', searchResultUsernames);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsGlobal',\n            id,\n            global: searchResultUsernames\n        });\n    }\n\n    showUsersResult(id, newResult, newMap, notify) {\n        console.log('[search] local', newResult);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsLocal',\n            id,\n            local: newResult\n        });\n    }\n\n    closeHints(id) {\n        console.log('[search] close');\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsClose',\n            id\n        });\n    }\n\n    openHints() {\n\n    }\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = async (caption, content) => {\n        if (content) {\n            const message = await this.editMessageMedia(content);\n            if (message) {\n                const { content: editContent } = message;\n                switch (editContent['@type']) {\n                    case 'messagePhoto': {\n                        const { photo: sendPhoto } = content;\n                        if (!sendPhoto) break;\n\n                        const { data: blob } = sendPhoto;\n                        if (!blob) break;\n\n                        const { photo } = editContent;\n                        if (!photo) break;\n\n                        const iSize = photo.sizes.find(x => x.type === 'i');\n                        if (!iSize) break;\n\n                        const { photo: file } = iSize;\n                        if (file) {\n                            FileStore.setBlob(file.id, blob);\n                        }\n                        break;\n                    }\n                }\n            }\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                            {command}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId, isBotChat } from '../../Utils/Chat';\nimport { sendBotStartMessage, unblockSender } from '../../Actions/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const { is_blocked, last_message } = chat;\n\n                return {\n                    prevChatId: chatId,\n\n                    isBlocked: is_blocked,\n                    hasLastMessage: Boolean(last_message)\n                };\n            }\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId, options } = this.props;\n        const { hasLastMessage, isBlocked, clearHistory } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.options !== options) {\n            return true;\n        }\n\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.hasLastMessage !== hasLastMessage) {\n            return true;\n        }\n\n        if (nextState.isBlocked !== isBlocked) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        this.setState({\n            clearHistory: update.inProgress\n        });\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chat_id, last_message } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            hasLastMessage: Boolean(last_message)\n        });\n    };\n\n    onUpdateChatIsBlocked = update => {\n        const { chat_id, is_blocked } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            isBlocked: is_blocked\n        });\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    handleUnblock = () => {\n        const { chatId } = this.props;\n\n        unblockSender({ '@type': 'messageSenderChat', chat_id: chatId });\n    };\n\n    handleStartBot = async () => {\n        const { chatId, options } = this.props;\n\n        await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n        if (options && options.botStartMessage) {\n            const { botUserId, parameter } = options.botStartMessage;\n\n            await sendBotStartMessage(chatId, botUserId, parameter);\n        } else {\n            await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: 0,\n                input_message_content: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: '/start',\n                        entities: []\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: true\n                }\n            });\n        }\n    };\n\n    render() {\n        const { chatId, options, t } = this.props;\n        const { hasLastMessage, clearHistory } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type, is_blocked } = chat;\n        if (!type) return null;\n\n        if (is_blocked) {\n            return <FooterCommand command={t('Unblock')} onCommand={this.handleUnblock} />;\n        }\n\n        if (options && options.botStartMessage) {\n            const isBot = isBotChat(chatId);\n            if (isBot) {\n                return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n            }\n        }\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypeSecret':\n            case 'chatTypePrivate': {\n                const isBot = isBotChat(chatId);\n                if (isBot && (!hasLastMessage || clearHistory)) {\n                    return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n                }\n\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const MAX_SPEED = 8.2;\nexport const MIN_SPEED = 0.8;\nexport const AMPLITUDE_SPEED = 0.33;\n\nexport const SCALE_BIG = 0.807;\nexport const SCALE_SMALL = 0.704;\n\nexport const SCALE_BIG_MIN = 0.878;\nexport const SCALE_SMALL_MIN = 0.926;\n\nexport const FORM_BIG_MAX = 0.6;\nexport const FORM_SMALL_MAX = 0.6;\n\nexport const GLOBAL_SCALE = 1;\n\nexport const FORM_BUTTON_MAX = 0;\n\nexport const GRADIENT_SPEED_MIN = 0.5;\nexport const GRADIENT_SPEED_MAX = 0.01;\n\nexport const LIGHT_GRADIENT_SIZE = 0.5;\n\nfunction rotateZ(x, y, angle, originX, originY) {\n    x -= originX;\n    y -= originY;\n\n    let X = x * Math.cos(angle) - y * Math.sin(angle);\n    let Y = y * Math.cos(angle) + x * Math.sin(angle);\n\n    x = X + originX;\n    y = Y + originY;\n\n    return [x, y];\n}\n\nexport default class BlobDrawable {\n    constructor(n) {\n        this.maxRadius = 10;\n        this.minRadius = 0;\n\n        this.cubicBezierK = 1.0;\n        this.N = n;\n        this.L = (4.0 / 3.0) * Math.tan(Math.PI / (2 * this.N));\n        this.radius = new Array(n);\n        this.angle = new Array(n);\n\n        this.radiusNext = new Array(n);\n        this.angleNext = new Array(n);\n        this.progress = new Array(n);\n        this.speed = new Array(n);\n\n        this.pointStart = new Array(4);\n        this.pointEnd = new Array(4);\n\n        for (let i = 0; i < this.N; i++) {\n            this.generateBlob(this.radius, this.angle, i);\n            this.generateBlob(this.radiusNext, this.angleNext, i);\n            this.progress[i] = 0;\n        }\n    }\n\n    generateBlob(radius, angle, i) {\n        const { maxRadius, minRadius, speed, N } = this;\n\n        const angleDif = 2 * Math.PI / N * 0.05;\n        const radDif = maxRadius - minRadius;\n        radius[i] = minRadius + Math.random() * radDif;\n        angle[i] = 2 * Math.PI / N * i + Math.random() * angleDif;\n        speed[i] = 0.017 + 0.003 * Math.random();\n    }\n\n    update(amplitude, speedScale) {\n        const { N, progress, speed, radius, radiusNext, angle, angleNext } = this;\n        for (let i = 0; i < N; i++) {\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\n            if (progress[i] >= 1.0) {\n                progress[i] = 0.0;\n                radius[i] = radiusNext[i];\n                angle[i] = angleNext[i];\n                this.generateBlob(radiusNext, angleNext, i);\n            }\n        }\n    }\n\n    draw(cX, cY, canvas, paint) {\n        // console.log('[bd] draw', cX, cY, canvas, paint);\n        if (canvas.getContext) {\n            const ctx = canvas.getContext('2d');\n            // ctx.globalAlpha = 0.5;\n            // ctx.lineWidth = 1;\n\n            ctx.beginPath();\n\n            const { radius, radiusNext, angle, angleNext, N, L, cubicBezierK, pointStart, pointEnd } = this;\n\n            for (let i = 0; i < N; i++) {\n                const progress = this.progress[i];\n                const nextIndex = i + 1 < N ? i + 1 : 0;\n                const progressNext = this.progress[nextIndex];\n                const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\n                const r2 = radius[nextIndex] * (1.0 - progressNext) + radiusNext[nextIndex] * progressNext;\n                const angle1 = angle[i] * (1.0 - progress) + angleNext[i] * progress;\n                const angle2 = angle[nextIndex] * (1.0 - progressNext) + angleNext[nextIndex] * progressNext;\n                const l = L * (Math.min(r1, r2) + (Math.max(r1, r2) - Math.min(r1, r2)) / 2) * cubicBezierK;\n\n                pointStart[0] = cX;\n                pointStart[1] = cY - r1;\n                pointStart[2] = cX + l;\n                pointStart[3] = cY - r1;\n\n                this.mapPoints(pointStart, cX, cY, angle1);\n\n                pointEnd[0] = cX;\n                pointEnd[1] = cY - r2;\n                pointEnd[2] = cX - l;\n                pointEnd[3] = cY - r2;\n\n                this.mapPoints(pointEnd, cX, cY, angle2);\n\n                if (i === 0) {\n                    // console.log('[bd] moveTo', pointStart[0], pointStart[1]);\n                    ctx.moveTo(pointStart[0], pointStart[1]);\n                }\n                // console.log('[bd] bezierCurveTo', pointEnd[0], pointEnd[1]);\n                ctx.bezierCurveTo(\n                    pointStart[2], pointStart[3],\n                    pointEnd[2], pointEnd[3],\n                    pointEnd[0], pointEnd[1]\n                );\n            }\n\n            // ctx.scale(1.0, 1.0);\n            // this.fillStyleFunc(ctx);\n            paint(ctx);\n            ctx.fill();\n            ctx.closePath();\n        }\n    }\n\n    mapPoints(points, cX, cY, angle) {\n        const result1 = rotateZ(points[0], points[1], angle, cX, cY);\n        const result2 = rotateZ(points[2], points[3], angle, cX, cY);\n\n        points[0] = result1[0];\n        points[1] = result1[1];\n        points[2] = result2[0];\n        points[3] = result2[1];\n    }\n\n    generateInitBlob() {\n        const { radius, radiusNext, angle, angleNext, progress, N } = this;\n\n        for (let i = 0; i < N; i++) {\n            this.generateBlob(radius, angle, i);\n            this.generateBlob(radiusNext, angleNext, i);\n            progress[i] = 0;\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// const MIN_SPEED = 0.8;\n// const MAX_SPEED = 8.2;\n\nimport { MIN_SPEED, MAX_SPEED } from './BlobDrawable';\n\nexport default class LineBlobDrawable {\n    constructor(n) {\n        this.maxRadius = 10;\n        this.minRadius = 0;\n\n        this.N = n;\n        this.radius = new Array(n + 1);\n\n        this.radiusNext = new Array(n + 1);\n        this.progress = new Array(n + 1);\n        this.speed = new Array(n + 1);\n\n        for (let i = 0; i <= n; i++) {\n            this.generateBlob(this.radius, i);\n            this.generateBlob(this.radiusNext, i);\n            this.progress[i] = 0;\n        }\n    }\n\n    generateBlob(radius, i) {\n        const { maxRadius, minRadius, speed } = this;\n\n        const radDif = maxRadius - minRadius;\n        radius[i] = minRadius + Math.random() * radDif;\n        speed[i] = 0.017 + 0.003 * Math.random();\n    }\n\n    generateNextBlob() {\n        const { radius, radiusNext, progress, N } = this;\n        for (let i = 0; i < N; i++) {\n            this.generateBlob(radius, i);\n            this.generateBlob(radiusNext, i);\n            progress[i] = 0.0;\n        }\n    }\n\n    update(amplitude, speedScale) {\n        const { N, progress, speed, radius, radiusNext } = this;\n        for (let i = 0; i <= N; i++) {\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\n            if (progress[i] >= 1.0) {\n                progress[i] = 0.0;\n                radius[i] = radiusNext[i];\n                this.generateBlob(radiusNext, i);\n            }\n        }\n    }\n\n    draw(left, top, right, bottom, canvas, paint, pinnedTop, progressToPinned) {\n        if (canvas.getContext) {\n            const ctx = canvas.getContext('2d');\n            // ctx.globalAlpha = 0.5;\n            // ctx.lineWidth = 1;\n\n            ctx.beginPath();\n            ctx.moveTo(right, bottom);\n            ctx.lineTo(left, bottom);\n\n            const { radius, radiusNext, N } = this;\n            for (let i = 0; i <= N; i++) {\n                if (i === 0) {\n                    const progress = this.progress[i];\n                    const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\n                    const y = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    ctx.lineTo(left, y);\n                } else {\n                    const progress = this.progress[i - 1];\n                    const r1 = radius[i - 1] * (1.0 - progress) + radiusNext[i - 1] * progress;\n                    const progressNext = this.progress[i];\n                    const r2 = radius[i] * (1.0 - progressNext) + radiusNext[i] * progressNext;\n                    const x1 = (right - left) / N * (i - 1);\n                    const x2 = (right - left) / N * i;\n                    const cx = x1 + (x2 - x1) / 2;\n\n                    const y1 = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    const y2 = (top - r2) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    ctx.bezierCurveTo(\n                        cx, y1,\n                        cx, y2,\n                        x2, y2\n                    );\n                    if (i === N) {\n                        ctx.lineTo(right, bottom);\n                    }\n                }\n            }\n\n            // ctx.scale(1.0, 1.0);\n            paint(ctx);\n            ctx.fill();\n            ctx.closePath();\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LineBlobDrawable from './LineBlobDrawable';\n\nexport const MUTE_BUTTON_STATE_UNMUTE = 0;\nexport const MUTE_BUTTON_STATE_MUTE = 1;\nexport const MUTE_BUTTON_STATE_CONNECTING = 2;\nexport const MUTE_BUTTON_STATE_MUTED_BY_ADMIN = 3;\n\nexport class WeavingState {\n    constructor(stateId) {\n        this.stateId = stateId;\n        this.shader = (ctx, left, top, right, bottom) => { };\n        this.createGradient(stateId);\n    }\n\n    createGradient(stateId) {\n        this.shader = (ctx, left, top, right, bottom) => {\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\n        };\n    }\n\n    // Android colors\n    static getGradientFromType(ctx, type, x0, y0, x1, y1) {\n        const gradient = ctx.createLinearGradient(x0, y0, x1, y1);\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            gradient.addColorStop(0, '#57A4FE');\n            gradient.addColorStop(.6, '#766EE9');\n            gradient.addColorStop(1, '#F05459');\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\n            gradient.addColorStop(0, '#00B1C0');\n            gradient.addColorStop(1, '#52CE5D');\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\n            gradient.addColorStop(0, '#2BCEFF');\n            gradient.addColorStop(1, '#0976E3');\n        } else {\n            gradient.addColorStop(0, '#8599aa');\n            gradient.addColorStop(1, '#8599aa');\n        }\n\n        return gradient;\n    }\n\n    update(height, width, dt, amplitude) {\n        // TODO: move gradient here\n    }\n}\n\nclass TopBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.focused = true;\n        this.resizing = false;\n        this.lastUpdateTime = new Date();\n        this.amplitude = 0.0;\n        this.amplitude2 = 0.0;\n\n        this.states = [\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\n        ];\n        this.prevState = null;\n        this.currentState = this.states[MUTE_BUTTON_STATE_CONNECTING];\n        this.progressToState = 1.0;\n\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 20 * this.scale;\n        this.right = 1260 * this.scale;\n        this.bottom = 63 * this.scale;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        window.addEventListener('blur', this.handleBlur);\n        window.addEventListener('focus', this.handleFocus);\n        window.addEventListener('resize', this.handleResize);\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n\n        const topBar = document.getElementById('top-bar');\n        this.right = topBar.offsetWidth * this.scale;\n        this.forceUpdate();\n\n        this.canvas = document.getElementById('canvas');\n        this.lbd = new LineBlobDrawable(3);\n        this.lbd1 = new LineBlobDrawable(7);\n        this.lbd2 = new LineBlobDrawable(8);\n        this.setAmplitude(this.amplitude);\n\n        this.draw();\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        window.removeEventListener('blur', this.handleBlur);\n        window.removeEventListener('focus', this.handleFocus);\n        window.removeEventListener('resize', this.handleResize);\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n    }\n\n    handleDevicePixelRatioChanged = e => {\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 20 * this.scale;\n        this.bottom = 63 * this.scale;\n\n        const topBar = document.getElementById('top-bar');\n        if (!topBar) return;\n\n        this.right = topBar.offsetWidth * this.scale;\n        this.forceUpdate();\n    }\n\n    handleResize = () => {\n        if (this.resizeHandler) {\n            clearTimeout(this.resizeHandler);\n            this.resizeHandler = null;\n        }\n\n        this.resizing = true;\n        this.resizeCanvas();\n        this.resizeHandler = setTimeout(() => {\n            this.resizing = false;\n            this.invokeDraw();\n        }, 250);\n    }\n\n    resizeCanvas() {\n        const topBar = document.getElementById('top-bar');\n\n        this.scale = window.devicePixelRatio;\n        this.right = topBar.offsetWidth * this.scale;\n\n        this.forceUpdate();\n        this.invokeDraw();\n    }\n\n    handleFocus = () => {\n        this.focused = true;\n        this.invokeDraw();\n    }\n\n    handleBlur = () => {\n        this.focused = false;\n    }\n\n    invokeDraw = () => {\n        if (this.raf) return;\n\n        this.draw();\n    }\n\n    draw = (force = false) => {\n        this.raf = null;\n        if (!this.mounted) {\n            return;\n        }\n        const { lbd, lbd1, lbd2, scale, left, top, right, bottom, currentState, previousState, focused, resizing } = this;\n        if (!focused && !resizing && this.progressToState >= 1.0) {\n            return;\n        }\n\n        // console.log('[top] draw', [focused, resizing, this.mounted]);\n\n        const newTime = new Date();\n        let dt = (newTime - this.lastUpdateTime);\n        if (dt > 20) {\n            dt = 17;\n        }\n\n        // console.log('draw start', this.amplitude, this.animateToAmplitude);\n        if (this.animateToAmplitude !== this.amplitude) {\n            this.amplitude += this.animateAmplitudeDiff * dt;\n            if (this.animateAmplitudeDiff > 0) {\n                if (this.amplitude > this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude < this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            }\n        }\n\n        if (this.animateToAmplitude !== this.amplitude2) {\n            this.amplitude2 += this.animateAmplitudeDiff2 * dt;\n            if (this.animateAmplitudeDiff2 > 0) {\n                if (this.amplitude2 > this.animateToAmplitude) {\n                    this.amplitude2 = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude2 < this.animateToAmplitude) {\n                    this.amplitude2 = this.animateToAmplitude;\n                }\n            }\n        }\n\n        if (previousState) {\n            this.progressToState += dt / 250;\n            if (this.progressToState > 1) {\n                this.progressToState = 1;\n                this.previousState = null;\n            }\n        }\n\n        const top1 = 6 * this.amplitude2 * scale;\n        const top2 = 6 * this.amplitude2 * scale;\n\n        const ctx = this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n        lbd.minRadius = 0;\n        lbd.maxRadius = (2 + 2 * this.amplitude) * scale;\n        lbd1.minRadius = 0;\n        lbd1.maxRadius = (3 + 9 * this.amplitude) * scale;\n        lbd2.minRadius = 0;\n        lbd2.maxRadius = (3 + 9 * this.amplitude) * scale;\n\n        lbd.update(this.amplitude, 0.3);\n        lbd1.update(this.amplitude, 0.7);\n        lbd2.update(this.amplitude, 0.7);\n\n        for (let i = 0; i < 2; i++) {\n            if (i === 0 && !previousState) {\n                continue;\n            }\n\n            let alpha = 1;\n            let state = null;\n            if (i === 0) {\n                alpha = 1 - this.progressToState;\n                state = previousState;\n                // previousState.setToPaint(paint);\n            } else {\n                alpha = previousState ? this.progressToState : 1;\n                currentState.update(bottom - top, right - left, dt, this.amplitude);\n                state = currentState;\n                // currentState.setToPaint(paint);\n            }\n\n            const paint1 = ctx => {\n                ctx.globalAlpha = 0.3 * alpha;\n                state.shader(ctx, left, top, right, bottom);\n            };\n            const paint = ctx => {\n                ctx.globalAlpha = i === 0? 1 : alpha;\n                state.shader(ctx, left, top, right, bottom);\n            };\n\n            lbd1.draw(left, top - top1, right, bottom, this.canvas, paint1,  top, 1.0);\n            lbd2.draw(left, top - top2, right, bottom, this.canvas, paint1,  top, 1.0);\n            lbd.draw(left, top, right, bottom, this.canvas, paint, top, 1.0);\n        }\n\n        if (!force) {\n            this.raf = requestAnimationFrame(() => this.draw());\n        }\n    };\n\n    setCurrentState = (stateId, animated) => {\n        const { currentState, states } = this;\n\n        if (currentState && currentState.id === stateId) {\n            return;\n        }\n\n        this.previousState = animated ? currentState : null;\n        this.currentState = states[stateId];\n        this.progressToState = this.previousState ? 0.0 : 1.0;\n    };\n\n    setAmplitude(value) {\n        this.animateToAmplitude = value;\n        this.animateAmplitudeDiff = (value - this.amplitude) / 250;\n        this.animateAmplitudeDiff2 = (value - this.amplitude) / 120;\n    }\n\n    render() {\n        const { left, right, top, bottom, scale } = this;\n\n        return(\n            <div id='top-bar' className='top-bar'>\n                <canvas id='canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\n            </div>\n        );\n    }\n}\n\nTopBar.propTypes = {};\n\nexport default TopBar;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport TopBar, { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\nimport { getChatTitle } from '../../Utils/Chat';\nimport { getCallStatus } from '../../Calls/Utils';\nimport { openGroupCallPanel } from '../../Actions/Call';\nimport { showSnackbar } from '../../Actions/Client';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallTopPanel.css';\n\nclass GroupCallTopPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.topBarRef = React.createRef();\n\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected,\n            animated: CallStore.animated\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { call, status, connected, animated } = this.state;\n\n        if (nextState.call !== call) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.connected !== connected) {\n            return true;\n        }\n\n        if (nextState.animated !== animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.switchButtonState(false);\n\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    switchButtonState(animated = true) {\n        const { connected, status } = this.state;\n\n        let stateId = MUTE_BUTTON_STATE_MUTE;\n        if (!connected) {\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\n        } else {\n            if (status === 'forceMuted') {\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\n            } else if (status === 'unmuted') {\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\n            } else if (status === 'muted') {\n                stateId = MUTE_BUTTON_STATE_MUTE;\n            }\n        }\n\n        this.topBarRef.current && this.topBarRef.current.setCurrentState(stateId, animated);\n    }\n\n    onClientUpdateGroupCallAmplitudeChange = update => {\n        const { amplitudes, type } = update;\n        if (!amplitudes.length) return;\n\n        let max = 0;\n        for (let i = 0; i < amplitudes.length; i++) {\n            const { type, value } = amplitudes[i];\n            max = value > max ? value : max;\n        }\n\n        if (type !== 'input') {\n            this.topBarRef.current && this.topBarRef.current.setAmplitude(max);\n        }\n    };\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id } = participant;\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status\n        }, () => {\n            this.switchButtonState(true);\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.saveMessagesScrollPosition();\n        this.setState({\n            call,\n            status,\n            connected\n        }, () => {\n            this.restoreMessagesScrollPosition(Boolean(call));\n            this.switchButtonState(true);\n        });\n    };\n\n    saveMessagesScrollPosition() {\n        const elements = document.getElementsByClassName('messages-list-wrapper');\n        if (!elements.length) return;\n\n        [...elements].forEach(x => {\n            const list = x;\n            if (!list) return;\n\n            const prevOffsetHeight = list.offsetHeight;\n            const prevScrollTop = list.scrollTop;\n\n            list.prevOffsetHeight = prevOffsetHeight;\n            list.prevScrollTop = prevScrollTop;\n        });\n    }\n\n    restoreMessagesScrollPosition(openPanel = true) {\n        const elements = document.getElementsByClassName('messages-list-wrapper');\n        if (!elements.length) return;\n\n        [...elements].forEach(x => {\n            const list = x;\n            if (!list) return;\n\n            const { prevScrollTop, prevOffsetHeight } = list;\n            if (list.scrollTop === prevScrollTop) {\n                const offsetHeightDiff = Math.abs(prevOffsetHeight - list.offsetHeight);\n                list.scrollTop += openPanel ? offsetHeightDiff : - offsetHeightDiff;\n            }\n        });\n    }\n\n    handleMicrophone = async event => {\n        event.stopPropagation();\n\n        const { call, status } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId, stream } = call;\n\n        const groupCall = CallStore.get(groupCallId);\n        if (!groupCall) return;\n\n        if (!groupCall.can_unmute_self) {\n            showSnackbar(LStore.getString('VoipMutedByAdminInfo'), closeSnackbar => snackKey => {\n                return (\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => { closeSnackbar(snackKey); }}>\n                        <CloseIcon />\n                    </IconButton>\n                )\n            });\n        } else {\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\n        }\n    };\n\n    handleLeave = async event => {\n        event.stopPropagation();\n\n        const { call } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        await CallStore.leaveGroupCall(chatId, groupCallId);\n    };\n\n    handleOpenGroupCall = () => {\n        const { call } = this.state;\n        if (!call) return;\n\n        openGroupCallPanel();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { call, status, connected, animated } = this.state;\n        if (!call) return null;\n\n        const { chatId } = call;\n        const title = connected ? getChatTitle(chatId).toUpperCase() : t('Connecting');\n\n        return (\n            <div className='group-call-top-panel-wrapper'>\n                { animated ? (\n                    <TopBar ref={this.topBarRef}/>\n                    ) : (\n                    <div className={classNames('group-call-top-panel',\n                        {\n                            'group-call-top-panel-muted-by-admin ': connected && status === 'forceMuted',\n                            'group-call-top-panel-unmuted': connected && status === 'unmuted',\n                            'group-call-top-panel-connecting': !connected,\n\n                        })}\n                    />\n                )}\n                <div className='group-call-top-panel-buttons' onClick={this.handleOpenGroupCall}>\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleMicrophone}>\n                        {status === 'unmuted' ? <MicIcon fontSize='small'/> : <MicOffIcon fontSize='small' />}\n                    </IconButton>\n                    <div className='group-call-top-panel-title'>\n                        {title}\n                    </div>\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleLeave}>\n                        <CallEndIcon fontSize='small' />\n                    </IconButton>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nGroupCallTopPanel.propTypes = {};\n\nexport default withTranslation()(GroupCallTopPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\n    'PlaylistEdit'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z' />,\n    'Block'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6.62,10.79C8.06,13.62 10.38,15.94 13.21,17.38L15.41,15.18C15.69,14.9 16.08,14.82 16.43,14.93C17.55,15.3 18.75,15.5 20,15.5A1,1 0 0,1 21,16.5V20A1,1 0 0,1 20,21A17,17 0 0,1 3,4A1,1 0 0,1 4,3H7.5A1,1 0 0,1 8.5,4C8.5,5.25 8.7,6.45 9.07,7.57C9.18,7.92 9.1,8.31 8.82,8.59L6.62,10.79Z' />,\n    'Phone'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\nimport CallOutlinedIcon from '@material-ui/icons/CallOutlined';\nimport BlockIcon from '../../Assets/Icons/Block';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport PhoneIcon from '../../Assets/Icons/Phone';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport UserIcon from '../../Assets/Icons/User';\nimport DataIcon from '../../Assets/Icons/Device';\nimport {\n    canClearHistory,\n    canDeleteChat,\n    canCreateSecretChat,\n    getViewInfoTitle,\n    isPrivateChat,\n    getDeleteChatTitle,\n    hasOnePinnedMessage,\n    canSwitchBlocked,\n    getChatSender,\n    canManageVoiceChats,\n    canBeReported, getChatUserId, canBeCalled\n} from '../../Utils/Chat';\nimport { clearHistory, leaveChat, openReportChat, createSecretChat } from '../../Actions/Chat';\nimport { requestBlockSender, unblockSender } from '../../Actions/Message';\nimport { requestUnpinMessage, showAlert } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CallStore from '../../Stores/CallStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null\n        };\n    }\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return false;\n\n        const { pinned } = media;\n        if (!pinned) return false;\n        if (pinned.length !== 1) return false;\n\n        requestUnpinMessage(chatId, pinned[0].id);\n    };\n\n    handleSwitchBlocked = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const sender = getChatSender(chatId);\n        const { is_blocked } = chat;\n        if (is_blocked) {\n            unblockSender(sender);\n        } else {\n            requestBlockSender(sender);\n        }\n    };\n\n    handleStartGroupCall = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        showAlert({\n            title: LStore.getString('StartVoipChatTitle'),\n            message: LStore.getString('StartVoipChatAlertText'),\n            ok: LStore.getString('Start'),\n            cancel: LStore.getString('Cancel'),\n            onResult: async result => {\n                if (result){\n                    await CallStore.startGroupCall(chatId);\n                }\n            }\n        })\n    };\n\n    handleStartP2PCall = () => {\n        this.handleMenuClose();\n\n        const userId = getChatUserId(AppStore.getChatId());\n\n        CallStore.p2pStartCall(userId, false);\n    };\n\n    handleReport = () => {\n        this.handleMenuClose();\n\n        const { chatId } = this.props; // @durof: undefined variable\n\n        openReportChat(chatId, []);\n    };\n\n    handleCreateSecretChat = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n\n        createSecretChat(chatId);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_blocked, voice_chat_group_call_id } = chat;\n\n        const secretChat = canCreateSecretChat(chatId);\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = hasOnePinnedMessage(chatId);\n        const switchBlocked = canSwitchBlocked(chatId);\n        const manageVoiceChats = canManageVoiceChats(chatId);\n        const reported = canBeReported(chatId);\n        const called = canBeCalled(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    { CallStore.p2pCallsEnabled && called && (\n                        <MenuItem onClick={this.handleStartP2PCall}>\n                            <ListItemIcon>\n                                <CallOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Call')} />\n                        </MenuItem>\n                    )}\n                    { !Boolean(voice_chat_group_call_id) && manageVoiceChats && (\n                        <MenuItem onClick={this.handleStartGroupCall}>\n                            <ListItemIcon>\n                                <PhoneIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('StartVoipChat')} />\n                        </MenuItem>\n                    )}\n\n                    {secretChat && (\n                        <MenuItem onClick={this.handleCreateSecretChat}>\n                            <ListItemIcon>\n                                <DataIcon />\n                            </ListItemIcon>\n                            <ListItemText primary='Secret Chat' />\n                        </MenuItem>\n                    )}\n                    \n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    \n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                    {switchBlocked && (\n                        <MenuItem onClick={this.handleSwitchBlocked}>\n                            <ListItemIcon>\n                                <BlockIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={is_blocked ? t('Unblock') : t('BlockContact')} />\n                        </MenuItem>\n                    )}\n                    {reported && (\n                        <MenuItem onClick={this.handleReport}>\n                            <ListItemIcon>\n                                <ReportOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ReportChat')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './AnimatedItem.css';\n\nclass AnimatedItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.containerRef = React.createRef();\n        this.item1Ref = React.createRef();\n        this.item2Ref = React.createRef();\n\n        this.state = { };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return nextProps.item !== this.props.item;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { item } = props;\n        const { to, prevItem } = state;\n\n        if (item !== prevItem) {\n            return {\n                prevItem: item,\n                from: to,\n                to: item,\n                scrollDown: item > to\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { scrollDown, animateOnMount } = this.props;\n        const { to } = this.state;\n\n        this.animate('', to, scrollDown, animateOnMount);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { item, scrollDown } = this.props;\n        const { from, to } = this.state;\n\n        if (prevProps.item !== item) {\n            this.animate(from, to, scrollDown);\n        }\n    }\n\n    animate = (from, to, scrollDown, animate = true) => {\n        const { height } = this.props;\n\n        const container = this.containerRef.current;\n        const item1 = this.item1Ref.current;\n        const item2 = this.item2Ref.current;\n\n        if (!container || !item1 || !item2) return;\n\n        const duration = !animate ? '0ms' : '250ms';\n        const timingFunction = 'ease-in-out';\n\n        if (scrollDown) {\n            container.style.cssText = `transform: translateY(-${height}px)`;\n            item1.style.cssText = 'opacity: 0';\n            item2.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        } else {\n            container.style.cssText = 'transform: translateY(0px)';\n            item1.style.cssText = 'opacity: 1';\n            item2.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        }\n    };\n\n    render() {\n        const { scrollDown, height, getItemTemplate } = this.props;\n        const { from, to } = this.state;\n\n        return (\n            <div className='animated-item' style={{ height }}>\n                <div className='animated-item-placeholder'>{getItemTemplate(to)}</div>\n                <div ref={this.containerRef} className='animated-item-wrapper'>\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? getItemTemplate(to) : getItemTemplate(from) }</div>\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? getItemTemplate(from) : getItemTemplate(to) }</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAnimatedItem.propTypes = {\n    item: PropTypes.string,\n    getItemTemplate: PropTypes.func,\n    scrollDown: PropTypes.bool,\n    height: PropTypes.number,\n    animateOnMount: PropTypes.bool\n};\n\nAnimatedItem.defaultProps = {\n    item: null,\n    getItemTemplate: x => x,\n    scrollDown: true,\n    height: 21,\n    animateOnMount: true\n}\n\nexport default AnimatedItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AnimatedItem from './AnimatedItem';\nimport './AnimatedCounter.css';\n\nclass AnimatedCounter extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { counter } = props;\n        const { prevCounter } = state;\n\n        if (counter !== prevCounter) {\n            return {\n                prevCounter: counter,\n\n                scrollDown: counter > prevCounter\n            };\n        }\n\n        return null;\n    }\n\n    render() {\n        const { counter, height, reverse } = this.props;\n        const { scrollDown } = this.state;\n        if (!counter) return null;\n\n        const counterStr = counter + '';\n\n        return (\n            <div className='animated-counter' style={{ height }}>\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\n            </div>\n        );\n    }\n}\n\nAnimatedCounter.propTypes = {\n    counter: PropTypes.number,\n    height: PropTypes.number,\n    reverse: PropTypes.bool\n};\n\nAnimatedCounter.defaultProps = {\n    counter: 0,\n    height: 21,\n    reverse: false\n}\n\nexport default AnimatedCounter;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport { canBeReported } from '../../Utils/Chat';\nimport { openReportChat } from '../../Actions/Chat';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        forwardMessages(id, messageIds);\n    };\n\n    handleReport = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        openReportChat(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const items = Array.from(MessageStore.selectedItems.values());\n        const canReport = canBeReported(items.length > 0 ? items[0].chatId : 0);\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {t('Forward')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {t('Delete')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canReport && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleReport}>\n                        {t('ReportChat')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './PinnedMessageBorder.css';\n\nclass PinnedMessageBorder extends React.Component {\n\n    drawRect = (x, y, width, height, radius) => {\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\n    };\n\n    getClipPath = (id, barHeight, count) => {\n        const radius = 1;\n\n        let d = '';\n        if (count === 3) {\n            d = this.drawRect(0, 0, 2, barHeight, radius)\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\n                + this.drawRect(0, 23, 2, barHeight, radius);\n        } else {\n            for (let i = 0; i < count; i++) {\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\n            }\n        }\n\n        return (\n            <clipPath id={id}>\n                <path d={d}/>\n            </clipPath>\n        );\n    };\n\n    getBarHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = index === 1 ? 10 : 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkTranslateY = (index, barHeight, count) => {\n        if (count === 1) {\n            return 0;\n        } else if (count === 2) {\n            return index === 0 ? 0 : barHeight + 2;\n        }\n\n        if (count === 3) {\n            if (index === 0) {\n                return 0;\n            } else if (index === 1) {\n                return 11;\n            }\n\n            return 23;\n        } else {\n            return (barHeight + 2) * index;\n        }\n    };\n\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\n        if (count <= 4) {\n            return 0;\n        }\n\n        if (index <= 1) {\n            return 0;\n        } else if (index >= count - 2) {\n            return trackHeight - 32;\n        }\n\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\n    };\n\n    getTrackHeight = (count, barHeight) => {\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\n    };\n\n    render() {\n        const { count, index } = this.props;\n        if (count === 1) {\n            return (\n                <div className='pinned-message-border'>\n                    <div className='pinned-message-border-wrapper-1'/>\n                </div>);\n        }\n\n        const barHeight = this.getBarHeight(count, index);\n        const markHeight = this.getMarkHeight(count, index);\n        const trackHeight = this.getTrackHeight(count, barHeight);\n\n        const clipPathId = `clipPath_${count}`;\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\n\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\n\n        return (\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\n                    <svg height='0' width='0'>\n                        <defs>{clipPath}</defs>\n                    </svg>\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPinnedMessageBorder.propTypes = {\n    count: PropTypes.number,\n    index: PropTypes.number\n};\n\nexport default PinnedMessageBorder;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ReplyTile from '../Tile/ReplyTile';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport PinnedMessageBorder from './PinnedMessageBorder';\n\nclass PinnedMessage extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const media = MessageStore.getMedia(chatId);\n\n            const pinned = media ? media.pinned : [];\n\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\n            const thumbnail = getReplyThumbnail(chatId, messageId);\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                pinned,\n                prevMessageId: 0,\n                messageId,\n                minithumbnail,\n                thumbnail,\n                lastPhoto: {\n                    messageId,\n                    minithumbnail,\n                    thumbnail\n                }\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { clientData, pinned, messageId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.pinned !== pinned) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        const { prevMessageId, messageId } = this.state;\n\n        if (prevProps.chatId !== chatId) {\n            this.animateText(messageId, prevMessageId, 0);\n        }\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onClientUpdateCurrentPinnedMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chatId) {\n            return;\n        }\n\n        this.scrollToMessageId(update.messageId);\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n        if (!message.is_pinned) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, is_permanent, message_ids } = update;\n        const messageIds = new Map(message_ids.map(x => [x, x]));\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => messageIds.has(x.id))) {\n            return;\n        }\n        if (!is_permanent) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, message_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => x.id === message_id)) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    animateText = (messageId, prevMessageId, duration = 250) => {\n        const textElement = document.getElementById('pinned-message-animated-text');\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\n        if (!textElement || !text1Element || !text2Element) return;\n\n        const timingFunction = 'ease-in-out';\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n        if (scrollDown) {\n            textElement.style.cssText = 'transform: translateY(-19px)';\n            text1Element.style.cssText = 'opacity: 0';\n            text2Element.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        } else {\n            textElement.style.cssText = 'transform: translateY(0px)';\n            text1Element.style.cssText = 'opacity: 1';\n            text2Element.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        }\n    };\n\n    setPinnedState = () => {\n        const { chatId } = this.props;\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\n\n        const clientData = ChatStore.getClientData(chatId);\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\n        if (!messageId && pinned.length > 0) {\n            messageId = pinned[0].id;\n        }\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\n\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            clientData,\n            pinned,\n            prevMessageId,\n            messageId,\n            thumbnail,\n            minithumbnail,\n            lastPhoto: {\n                messageId,\n                thumbnail,\n                minithumbnail\n            }\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (currentMessageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    scrollToMessageId = nextMessageId => {\n        const { chatId } = this.props;\n        const { messageId, thumbnail, minithumbnail } = this.state;\n\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\n\n        const lastPhoto = nextThumbnail ? {\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail\n        } : {\n            messageId,\n            thumbnail,\n            minithumbnail\n        }\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            prevMessageId: messageId,\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail,\n            lastPhoto\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (messageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { pinned, messageId } = this.state;\n        if (!pinned.length) return;\n\n        if (!messageId) return;\n        if (event.nativeEvent.which !== 1) return;\n\n        MessageStore.clickedPinned = { chatId, id: messageId };\n\n        openChat(chatId, messageId);\n\n        const index = pinned.findIndex(x => x.id === messageId);\n        if (index === -1) return;\n\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\n\n        this.scrollToMessageId(pinned[nextIndex].id);\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handleEditClick = event => {\n        const { chatId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\n\n        if (!chatId) return null;\n\n        if (clientData) {\n            const { unpinned } = clientData;\n            if (unpinned) return null;\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\n        if (isDeletedMessage(prevMessage)) {\n            content = t('DeletedMessage');\n        }\n\n        let index = 0;\n        let caption = t('PinnedMessage');\n        if (pinned && pinned.length > 1) {\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\n            if (pinned.length === 2) {\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\n            } else {\n                caption = (\n                    <>\n                        {t('PinnedMessage')}\n                        {index > 0 && (\n                            <>\n                                {' #'}\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\n                            </>)\n                        }\n                    </>);\n            }\n        }\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n\n        return (\n            <>\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\n                    <CSSTransition\n                        in={!!thumbnail}\n                        classNames='pinned-message-tile'\n                        timeout={250}\n                        mountOnEnter={true}\n                        unmountOnExit={true}>\n                        <div>\n                            <ReplyTile\n                                chatId={chatId}\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\n                            />\n                        </div>\n                    </CSSTransition>\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{caption}</div>\n                        <div className='pinned-message-subtitle'>\n                            <div id='pinned-message-animated-text'>\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\n                            </div>\n                        </div>\n                    </div>\n                </ListItem>\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle\n} from '../../Utils/Chat';\nimport { openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        const chatId = AppStore.getChatId();\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.state = {\n            chatId,\n            pinned,\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState()\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    setPinnedState() {\n        const { chatId } = this.state;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.setState({ pinned });\n    }\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        const chatId = AppStore.getChatId();\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.setState({\n            chatId,\n            pinned\n        });\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const { chatId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const { chatId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handlePinClick = () => {\n        const { chatId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            pinned,\n            authorizationState,\n            connectionState,\n            selectionCount,\n        } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectionCount} />\n                    <div className='header-details-row'>\n                        {showProgressAnimation ? (\n                            <div\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                                onClick={this.openChatDetails}>\n                                <span className='header-status-content'>{title}</span>\n                                <HeaderProgress />\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                                    {subtitle}\n                                </span>\n                                <span className='header-status-tail' />\n                            </div>\n                        ) : (\n                            <HeaderChat\n                                className={classNames('grow', 'cursor-pointer')}\n                                chatId={chatId}\n                                onClick={this.openChatDetails}\n                            />\n                        )}\n                        <PinnedMessage chatId={chatId} />\n                        {chat && (\n                            <div className='header-right-buttons'>\n                                { pinned.length > 1 && (\n                                    <IconButton\n                                        aria-label='Pins'\n                                        onClick={this.handlePinClick}\n                                        onMouseDown={this.handleMouseDown}>\n                                        <PlaylistEditIcon />\n                                    </IconButton>\n                                )}\n                                <IconButton\n                                    aria-label='Search'\n                                    onClick={this.handleSearchChat}>\n                                    <SearchIcon />\n                                </IconButton>\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatSender, getChatUserId } from '../../Utils/Chat';\nimport { requestBlockSender } from '../../Actions/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarInviteMembers': {\n                break;\n            }\n        }\n        if (!content) {\n            return null;\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\nimport { saveBlob } from '../../Utils/File';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false,\n            for_comment: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            requestUnpinMessage(chatId, messageId);\n        } else {\n            requestPinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n        onClose(event);\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\n        const canBePinned = canPinMessages(chatId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        const hasItems =\n            canBeUnvoted || canBeClosed || canBeReplied || canBePinned || canBeForwarded || canBeDeleted || canBeEdited || canBeSelected || canCopyLink || canCopyPublicMessageLink;\n        if (!hasItems) {\n            return null;\n        }\n\n        return (\n            <>\n                <Popover\n                    open={true}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinMessage')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinMessage')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\n    'PinFilled'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport PinIcon from '../../Assets/Icons/PinFilled';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { albumHistoryEquals } from '../../Utils/Common';\nimport { getDate, getDateHint, getViews, isCallMessage } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, messageIds } = props;\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\n\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n            const id = ids[ids.length - 1];\n\n            const message = MessageStore.get(chatId, id);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                prevMessageIds: messageIds,\n\n                message,\n                date,\n                editDate,\n                interactionInfo,\n                isOutgoing,\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId, messageIds } = this.props;\n\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n\n        if (chat_id !== chatId) return;\n        if (!ids.some(x => x === message_id)) return;\n\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ editDate });\n    };\n\n    onUpdateMessageInteractionInfo = update => {\n        const { chat_id, message_id, interaction_info } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ interactionInfo: interaction_info });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\n\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        const isCall = isCallMessage(chatId, messageId);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {isPinned && (\n                    <>\n                        <PinIcon className='meta-pin-icon' />\n                        <span>&nbsp;</span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && !isCall && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    messageIds: PropTypes.arrayOf(PropTypes.number),\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Audio from '../Media/Audio';\nimport Document from '../Media/Document';\nimport MessageMenu from '../MessageMenu';\nimport Meta from '../Meta';\nimport Photo from '../Media/Photo';\nimport Video from '../Media/Video';\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\nimport { selectMessage } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './AlbumItem.css';\n\nclass AlbumItem extends React.Component {\n\n    state = {\n        contextMenu: false\n    };\n\n    getAlbumItem = (message, displaySize) => {\n        const { chat_id, id, content } = message;\n\n        switch (content['@type']) {\n            case 'messageAudio': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Audio\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            audio={content.audio}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n            case 'messagePhoto': {\n                return (\n                    <Photo\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                    );\n            }\n            case 'messageVideo': {\n                return (\n                    <Video\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        video={content.video}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                );\n            }\n            case 'messageDocument': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Document\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            document={content.document}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { message } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    openMedia = event => {\n        if (MessageStore.selectedItems.size > 0) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { message } = this.props;\n        if (!message) return;\n\n        const { chat_id, id } = message;\n\n        openMedia(chat_id, id);\n    };\n\n    handleSelection = event => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        if (MessageStore.selectedItems.size === 0) return;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { message, position, displaySize, source } = this.props;\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\n\n        const { chat_id, id } = message;\n\n        let style = {};\n        let className = 'album-document-item';\n        if (position) {\n            style = { width: position.width, height: position.height * displaySize };\n            className = 'album-item'\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\n                    onClick={this.handleSelection}\n                    onContextMenu={this.handleOpenContextMenu}\n                    style={style}>\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\n                    {(selected || highlighted) && (\n                        <div className='album-item-selection'>\n                            <div className='album-item-selection-mark'>\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chat_id}\n                    messageId={id}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </>\n        );\n    }\n}\n\nAlbumItem.propTypes = {\n    message: PropTypes.object,\n    position: PropTypes.object,\n    displaySize: PropTypes.number\n};\n\nexport default AlbumItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000).getFullYear() !== new Date().getFullYear();\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\n\nconst POSITION_FLAG_LEFT = 1;\nconst POSITION_FLAG_RIGHT = 2;\nconst POSITION_FLAG_TOP = 4;\nconst POSITION_FLAG_BOTTOM = 8;\n\nclass MessageGroupedLayoutAttempt {\n    constructor(lineCounts, heights) {\n        this.lineCounts = lineCounts;\n        this.heights = heights;\n    }\n}\n\nclass GroupedMessagePosition {\n    aspectRatio;\n    isEdge;\n    flags;\n    isLast;\n    leftSpanOffset;\n    minX;\n    maxX;\n    minY;\n    maxY;\n    height;\n    width;\n    siblingHeights;\n    spanSize;\n\n    set(minX, maxX, minY, maxY, w, h, flags) {\n        this.minX = minX;\n        this.maxX = maxX;\n        this.minY = minY;\n        this.maxY = maxY;\n        this.spanSize = w;\n        this.width = w;\n        this.height = h;\n        this.flags = flags;\n    }\n\n    getInfo() {\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\n    }\n}\n\nclass GroupedMessages {\n\n    constructor() {\n        this.posArray = [];\n        this.positions = new Map();\n        this.maxSizeWidth = 800;\n        this.hasSibling = false;\n        this.scale = 1.0;\n    }\n\n    multiHeight(array, start, end) {\n        let sum = 0.0;\n        for (let i = start; i < end; i++) {\n            sum += array[i];\n        }\n\n        return 800.0 * this.scale / sum;\n    }\n\n    calculate(messages, desiredWidth) {\n        this.posArray = [];\n        this.positions = new Map();\n        this.messages = messages;\n\n        if (!messages) return;\n        const { length } = messages;\n        if (length <= 1) {\n            return;\n        }\n\n        this.totalWidth = 0;\n        this.totalHeight = 0.0;\n\n        this.scale = desiredWidth / this.maxSizeWidth;\n        this.maxSizeWidth = desiredWidth;\n\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\n        const minHeight = Math.trunc(120 * this.scale);\n        const minWidth = Math.trunc(96 * this.scale);\n        const paddingsWidth = Math.trunc(32 * this.scale);\n        const maxSizeHeight = 814.0 * this.scale;\n        let averageAspectRatio = 1.0;\n        let proportions = '';\n        const isOut = false;\n        let maxX = 0;\n        let forceCalc = false;\n\n        for (let i = 0; i < length; i++) {\n            const message = messages[i];\n            const { w, h } = GroupedMessages.getWidthHeight(message);\n\n            const position = new GroupedMessagePosition();\n            position.isLast = i === messages.length - 1;\n            position.aspectRatio = w / h;\n            if (position.aspectRatio > 1.2) {\n                proportions += 'w';\n            } else if (position.aspectRatio < 0.8) {\n                proportions += 'n';\n            } else {\n                proportions += 'q';\n            }\n\n            averageAspectRatio += position.aspectRatio;\n            if (position.aspectRatio > 2.0) {\n                forceCalc = true;\n            }\n\n            this.positions.set(message, position);\n            this.posArray.push(position);\n        }\n\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\n        averageAspectRatio = averageAspectRatio / length;\n\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\n            switch (length) {\n                case 2: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = height * 2;\n                    } else if (proportions === 'ww' || proportions === 'qq') {\n                        const width = this.maxSizeWidth / 2;\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = width + width;\n                        this.totalHeight = height;\n                    } else {\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\n                        let firstWidth = this.maxSizeWidth - secondWidth;\n                        if (firstWidth < minWidth) {\n                            const diff = minWidth - firstWidth;\n                            firstWidth = minWidth;\n                            secondWidth -= diff;\n                        }\n\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = firstWidth + secondWidth;\n                        this.totalHeight = height;\n                    }\n\n                    break;\n                }\n                case 3: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    if (proportions[0] === 'n')\n                    {\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\n                        const secondHeight = maxSizeHeight - thirdHeight;\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\n\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position3.spanSize = this.maxSizeWidth;\n\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\n                            position3.leftSpanOffset = leftWidth;\n                        }\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = leftWidth + rightWidth;\n                        this.totalHeight = 1.0;\n                    }\n                    else\n                    {\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        const width = this.maxSizeWidth / 2;\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 1;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = firstHeight + secondHeight;\n                    }\n\n                    break;\n                }\n                case 4: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    const position4 = this.posArray[3];\n                    if (proportions[0] === 'w') {\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\n                        const w1 = this.maxSizeWidth - w0 - w2;\n                        h = Math.min(maxSizeHeight - h0, h);\n                        h /= maxSizeHeight;\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 2;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = h0 + h;\n                    } else {\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\n                        const h2 = 1.0 - h0 - h1;\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\n\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\n                        position3.spanSize = this.maxSizeWidth;\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position4.spanSize = this.maxSizeWidth;\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - w;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - w0;\n                            position3.leftSpanOffset = w0;\n                            position4.leftSpanOffset = w0;\n                        }\n                        position1.siblingHeights = [ h0, h1, h2 ];\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = w + w0;\n                        this.totalHeight = h0 + h1 + h2;\n                    }\n                    break;\n                }\n            }\n        } else {\n            const croppedRatios = new Array(this.posArray.length);\n            for (let i = 0; i < length; i++) {\n                if (averageAspectRatio > 1.1) {\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\n                } else {\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\n                }\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\n            }\n\n            let firstLine;\n            let secondLine;\n            let thirdLine;\n            let fourthLine;\n            const attempts = [];\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\n                secondLine = croppedRatios.length - firstLine;\n                if (firstLine > 3 || secondLine > 3) {\n                    continue;\n                }\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\n                        continue;\n                    }\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\n                }\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\n                            continue;\n                        }\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\n                    }\n                }\n            }\n\n            let optimal = null;\n            let optimalDiff = 0.0;\n            let maxHeight = this.maxSizeWidth / 3 * 4;\n            for (let i = 0; i < attempts.length; i++) {\n                const attempt = attempts[i];\n                let height = 0;\n                let minLineHeight = Number.MAX_VALUE;\n                for (let j = 0; j < attempt.heights.length; j++) {\n                    height += attempt.heights[j];\n                    if (attempt.heights[j] < minLineHeight) {\n                        minLineHeight = attempt.heights[j];\n                    }\n                }\n\n                let diff = Math.abs(height - maxHeight);\n                if (attempt.lineCounts.length > 1) {\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\n                        diff *= 1.5;\n                    }\n                }\n\n                if (minLineHeight < minWidth) {\n                    diff *= 1.5;\n                }\n\n                if (optimal === null || diff < optimalDiff) {\n                    optimal = attempt;\n                    optimalDiff = diff;\n                }\n            }\n\n            if (optimal === null) {\n                return;\n            }\n\n            let index = 0;\n            let y = 0.0;\n\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\n                let c = optimal.lineCounts[i];\n                let lineHeight = optimal.heights[i];\n                let spanLeft = this.maxSizeWidth;\n                let posToFix = null;\n                maxX = Math.max(maxX, c - 1);\n                for (let j = 0; j < c; j++) {\n                    let ratio = croppedRatios[index];\n                    let width = Math.trunc(ratio * lineHeight);\n                    spanLeft -= width;\n                    let pos = this.posArray[index];\n                    let flags = 0;\n                    if (i === 0) {\n                        flags |= POSITION_FLAG_TOP;\n                    }\n                    if (i === optimal.lineCounts.length - 1) {\n                        flags |= POSITION_FLAG_BOTTOM;\n                    }\n                    if (j === 0) {\n                        flags |= POSITION_FLAG_LEFT;\n                        if (isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    if (j === c - 1) {\n                        flags |= POSITION_FLAG_RIGHT;\n                        if (!isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\n                    index++;\n                }\n                posToFix.width += spanLeft;\n                posToFix.spanSize += spanLeft;\n                y += lineHeight;\n            }\n\n            this.totalWidth = this.maxSizeWidth;\n            this.totalHeight = y / maxSizeHeight;\n        }\n    }\n\n    static getWidthHeight(message) {\n        let w = 0;\n        let h = 0;\n        let sizes = [];\n        switch (message.content['@type']){\n            case 'messagePhoto': {\n                const { photo, minithumbnail } = message.content;\n                if (photo) {\n                    sizes = photo.sizes;\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                }\n\n                break;\n            }\n            case 'messageVideo': {\n                const { video, thumbnail, minithumbnail } = message.content;\n                if (video) {\n                    const { width, height } = video;\n                    sizes.push({ width, height });\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                }\n\n                break;\n            }\n            case 'messageDocument': {\n                const { thumbnail, minithumbnail } = message.content;\n                if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                } else {\n                    sizes.push({ width: 90, height: 90 });\n                }\n\n                break;\n            }\n        }\n\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\n        if (photoSize) {\n            w = photoSize.width;\n            h = photoSize.height;\n        }\n\n        return { w, h };\n    }\n\n    static getPhotoSize(sizes, side, byMinSize) {\n        if (!sizes || !sizes.length) return null;\n\n        let lastSide = 0;\n        let lastSize = null;\n        for (let i = 0; i < sizes.length; i++) {\n            const { width: w, height: h } = sizes[i];\n\n            if (byMinSize) {\n                const currentSide = h >= w ? w : h;\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n\n            } else {\n                const currentSide = w >= h ? w : h;\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n            }\n        }\n\n        return lastSize;\n    }\n}\n\nexport default GroupedMessages;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport GroupedMessages from './GroupedMessages';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Album.css';\n\nclass Album extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n            const grouped = new GroupedMessages();\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n            return {\n                grouped,\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const grouped = new GroupedMessages();\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches, grouped });\n        } else {\n            this.setState({ grouped });\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n        const { grouped } = this.state;\n        if (!grouped) {\n            return null;\n        }\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': !hasCaption\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender_id.user_id) {\n                tile = <UserTile small userId={sender_id.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = { width: grouped.totalWidth - 2 - 2 };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = grouped.messages.map(x => (\n            <AlbumItem\n                key={x.id}\n                message={x}\n                position={grouped.positions.get(x)}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender_id} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    { 'album-caption': hasCaption },\n                                    { 'album-title': hasTitle }\n                                    )}>\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\n                                        {items}\n                                    </div>\n                                </div>\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default Album;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './DocumentAlbum.css';\n\nclass DocumentAlbum extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.lastSelected !== lastSelected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.lastHighlighted !== lastHighlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n\n            return {\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\n            });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        this.setState({ selected: false, lastSelected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            lastSelected,\n            highlighted,\n            lastHighlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': false\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = {  };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\n            <AlbumItem\n                key={m.id}\n                message={m}\n                position={null}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', 'message-document-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-album-last-selected': lastSelected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-album-last-highlighted': lastHighlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    'document-album',\n                                    { 'album-caption': false },\n                                    { 'album-title': hasTitle }\n                                )}>\n                                    <div className='album-wrapper'>\n                                        {items}\n                                    </div>\n                                </div>\n                                {/*<div*/}\n                                {/*    className={classNames('message-text', {*/}\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\n                                {/*    })}>*/}\n                                {/*    {text}*/}\n                                {/*</div>*/}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocumentAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nDocumentAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default DocumentAlbum;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport './GroupCallJoinPanelSubtitle.css';\n\nclass GroupCallJoinPanelSubtitle extends React.Component {\n    state = {\n        participantCount: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participantCount } = this.state;\n\n        if (nextState.participantCount !== participantCount) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            let participantCount = 0;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                const { participant_count } = groupCall;\n                participantCount = participant_count;\n            }\n\n            return {\n                prevGroupCallId: groupCallId,\n                participantCount\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCall = update => {\n        const { groupCallId } = this.props;\n        const { group_call } = update;\n\n        if (group_call && group_call.id !== groupCallId) return;\n\n        let participantCount = 0;\n        const groupCall = CallStore.get(groupCallId);\n        if (groupCall) {\n            const { participant_count } = groupCall;\n            participantCount = participant_count;\n        }\n\n        this.setState({ participantCount });\n    };\n\n    render() {\n        const { t, participantsOnly } = this.props;\n        const { participantCount } = this.state;\n        // console.log('[call][GroupCallPanelSubtitle] render');\n\n        return (\n            <div className='group-call-join-panel-subtitle'>\n                {participantCount === 0 && !participantsOnly? t('MembersTalkingNobody') : LStore.formatPluralString('Participants', participantCount)}\n            </div>\n        );\n    }\n\n}\n\nGroupCallJoinPanelSubtitle.propTypes = {\n    groupCallId: PropTypes.number,\n    participantsOnly: PropTypes.bool\n};\n\nGroupCallJoinPanelSubtitle.defaultProps = {\n    participantsOnly: false\n}\n\nexport default withTranslation()(GroupCallJoinPanelSubtitle);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from '../Tile/UserTile';\nimport { loadUsersContent } from '../../Utils/File';\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport FileStore from '../../Stores/FileStore';\nimport './GroupCallRecentParticipants.css';\n\nfunction speakersEquals(lhs, rhs) {\n    if (lhs.length !== rhs.length) return false;\n\n    for (let i = 0; i < lhs.length; i++) {\n        if (lhs[i].user_id !== rhs[i].user_id) return false;\n        if (lhs[i].is_speaking !== rhs[i].is_speaking) return false;\n    }\n\n    return true;\n}\n\nclass GroupCallRecentParticipants extends React.Component {\n    state = {\n        speakers: []\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { speakers } = this.state;\n\n        if (!speakersEquals(nextState.speakers, speakers)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { id } = props;\n        const { prevId } = state;\n\n        if (prevId !== id) {\n            let speakers = [];\n            const groupCall = CallStore.get(id);\n            if (groupCall) {\n                const { recent_speakers } = groupCall;\n                speakers = recent_speakers;\n            }\n\n            return {\n                prevId: id,\n                speakers\n            };\n        }\n\n        return null;\n    }\n\n    loadContent(speakers) {\n        const store = FileStore.getStore();\n        loadUsersContent(store, speakers.map(x => x.user_id));\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.speakers);\n\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCall = update => {\n        const { id } = this.props;\n        const { group_call } = update;\n\n        if (group_call && group_call.id !== id) return;\n\n        let speakers = [];\n        const groupCall = CallStore.get(id);\n        if (groupCall) {\n            const { recent_speakers } = groupCall;\n            speakers = recent_speakers;\n        }\n\n        clearTimeout(this.timeout);\n        if (!speakers.length) {\n            this.setState({ speakers: [] });\n        } else {\n            this.loadContent(speakers);\n\n            this.timeout = setTimeout(() => {\n                this.updateSpeakers();\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\n        }\n    };\n\n    updateSpeakers() {\n        const { id } = this.props;\n\n        let speakers = [];\n        const groupCall = CallStore.get(id);\n        if (groupCall) {\n            const { recent_speakers } = groupCall;\n            speakers = recent_speakers;\n        }\n\n        this.setState({ speakers });\n    }\n\n    render() {\n        const { speakers } = this.state;\n        if (!speakers) return null;\n        if (!speakers.length) return null;\n\n        return (\n            <div className='group-call-recent-participants'>\n                {[...speakers].reverse().map(x => <UserTile key={x.user_id} userId={x.user_id} small speaking={x.is_speaking}/>)}\n            </div>\n        );\n    }\n}\n\nGroupCallRecentParticipants.propTypes = {\n    id: PropTypes.number\n};\n\nexport default GroupCallRecentParticipants;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport GroupCallJoinPanelSubtitle from './GroupCallJoinPanelSubtitle';\nimport GroupCallRecentParticipants from './GroupCallRecentParticipants';\nimport CallStore from '../../Stores/CallStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './GroupCallJoinPanel.css';\n\nclass GroupCallJoinPanel extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n\n            let groupCallId = 0;\n            if (chat) {\n                const { voice_chat_group_call_id } = chat;\n                groupCallId = voice_chat_group_call_id;\n            }\n\n            const { currentGroupCall } = CallStore;\n            const isCurrent = Boolean(currentGroupCall && currentGroupCall.chatId === chatId);\n\n            return {\n                prevChatId: chatId,\n                groupCallId,\n                isCurrent\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { isCurrent, groupCallId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.groupCallId !== groupCallId) {\n            return true;\n        }\n\n        if (nextState.isCurrent !== isCurrent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\n        CallStore.on('updateGroupCall', this.handleUpdateGroupCall);\n        ChatStore.on('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\n        CallStore.off('updateGroupCall', this.handleUpdateGroupCall);\n        ChatStore.off('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\n    }\n\n    handleUpdateChatVoiceChat = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if ( chatId !== chat_id) return;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { voice_chat_group_call_id } = chat;\n\n        this.setState({\n            groupCallId: voice_chat_group_call_id\n        });\n    }\n\n    handleUpdateGroupCall = update => {\n        const { group_call } = update;\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { voice_chat_group_call_id } = chat;\n        if (group_call && group_call.id !== voice_chat_group_call_id) return;\n\n        this.setState({\n            groupCallId: group_call ? group_call.id : 0\n        });\n    };\n\n    handleClientUpdateGroupCall = update => {\n        const { chatId } = this.props;\n\n        const { currentGroupCall } = CallStore;\n        const isCurrent = currentGroupCall && currentGroupCall.chatId === chatId;\n\n        this.setState({ isCurrent });\n    };\n\n    handleJoin = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { voice_chat_group_call_id } = chat;\n        const groupCall = CallStore.get(voice_chat_group_call_id);\n        console.log('[call] handleJoin', groupCall);\n        if (groupCall && groupCall.is_joined) return;\n\n        const muted = true;\n        await CallStore.joinGroupCall(chatId, voice_chat_group_call_id, muted);\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const { groupCallId, isCurrent } = this.state;\n        if (!groupCallId) return null;\n        if (isCurrent) return null;\n\n        return (\n            <div className='group-call-join-panel' onClick={this.handleJoin}>\n                <div className='group-call-join-panel-content'>\n                    <div className='group-call-join-panel-title'>{t('VoipGroupVoiceChat')}</div>\n                    <GroupCallJoinPanelSubtitle groupCallId={groupCallId}/>\n                </div>\n                <GroupCallRecentParticipants id={groupCallId}/>\n                <Button className='group-call-join-panel-button' variant='contained' color='primary' disableElevation>\n                    {t('VoipChatJoin')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nGroupCallJoinPanel.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallJoinPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst MessageContext = React.createContext({\n    chatId: 0,\n    messageId: 0\n});\n\nexport default MessageContext;\n\nexport function withMessage(Component) {\n    class MessageComponent extends React.Component {\n        render() {\n            return <MessageContext.Consumer>{value => <Component chatId={value ? value.chatId : 0} messageId={value? value.messageId: 0} {...this.props} />}</MessageContext.Consumer>;\n        }\n    }\n    MessageComponent.displayName = `WithMessage(${getDisplayName(Component)})`;\n\n    return MessageComponent;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem } from '@material-ui/core';\nimport User from '../Tile/User';\nimport ChatStore from '../../Stores/ChatStore';\nimport './InputBoxHints.css'\n\nclass InputBoxHints extends React.Component {\n    state = {\n        local: [],\n        global: [],\n        id: null\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { local, global, id } = this.state;\n\n        if (nextState.local !== local) {\n            return true;\n        }\n\n        if (nextState.global !== global) {\n            return true;\n        }\n\n        if (nextState.id !== id) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.on('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.on('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.off('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.off('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    onClientUpdateHintsClose = update => {\n        this.setState({\n            id: null,\n            local: [],\n            global: []\n        });\n    };\n\n    onClientUpdateHintsGlobal = update => {\n        const { id, global } = update;\n        if (this.state.id !== id) return;\n\n        this.setState({\n            id,\n            global\n        });\n    };\n\n    onClientUpdateHintsLocal = update => {\n        const { id, local } = update;\n\n        this.setState({\n            id,\n            local,\n            global: []\n        });\n    };\n\n    render() {\n        const { local, global } = this.state;\n\n        const results = (local || []).concat(global || []);\n\n        // console.log('[hints] render', local, global, results);\n        if (!results.length) return null;\n\n        const controls = results.map(x => <ListItem key={x.id} button style={{ padding: 6}}><User userId={x.id} showUsername={true}/></ListItem>);\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n            </div>\n        );\n    }\n\n}\n\nInputBoxHints.propTypes = {};\n\nexport default InputBoxHints;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8.5,18.31L5.69,15.5L12.06,9.12H7.11V5.69H18.31V16.89H14.89V11.94L8.5,18.31Z' />,\n    'ArrowTopRight'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M21,12L14,5V9C7,10 4,15 3,20C5.5,16.5 9,14.9 14,14.9V19L21,12Z' />,\n    'ShareFilled'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withMessage } from '../MessageContext';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowTopRightIcon from '../../../Assets/Icons/ArrowTopRight';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PendingIcon from '../../../Assets/Icons/Pending';\nimport ShareFilledIcon from '../../../Assets/Icons/ShareFilled';\nimport { getUserFullName } from '../../../Utils/User';\nimport { getChatTitle } from '../../../Utils/Chat';\nimport { setText, showAlert, showInputPasswordAlert, showOpenGameAlert, showOpenUrlAlert, showRequestUrlAlert, showSnackbar } from '../../../Actions/Client';\nimport { openChatSelect } from '../../../Actions/Message';\nimport LStore from '../../../Stores/LocalizationStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './KeyboardButton.css';\n\nclass KeyboardButton extends React.Component {\n    state = {\n        loading: false\n    }\n\n    handleCallbackQueryAnswer = (type, result, message) => {\n        const { chatId } = this.props;\n        const { sender_id, content, via_bot_user_id } = message;\n        const { text, show_alert, url } = result;\n        const { game } = content;\n\n        let title = '';\n        if (message) {\n            if (via_bot_user_id) {\n                title = getUserFullName(via_bot_user_id, null);\n            } else {\n                title = getChatTitle(chatId, false);\n            }\n        }\n        title = title || LStore.getString('Bot');\n\n        if (text) {\n            if (show_alert) {\n                showAlert({\n                    title,\n                    message: text,\n                    ok: LStore.getString('OK')\n                });\n            } else {\n                showSnackbar(text, closeSnackbar => snackKey => {\n                    return (\n                        <IconButton\n                            key='close'\n                            aria-label='Close'\n                            color='inherit'\n                            className='notification-close-button'\n                            onClick={() => { closeSnackbar(snackKey); }}>\n                            <CloseIcon />\n                        </IconButton>\n                    )\n                });\n            }\n        } else if (url) {\n            if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                const userId = via_bot_user_id ? via_bot_user_id : sender_id.user_id;\n                const user = UserStore.get(userId);\n\n                showOpenGameAlert(game, { message, url, userId, isVerified: user && user.is_verified });\n            } else {\n                showOpenUrlAlert(url, { punycode: false, ask: false, tryTelegraph: true });\n            }\n        }\n    };\n\n    handleClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId, type } = this.props;\n\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                showAlert({\n                    title: LStore.getString('AppName'),\n                    message: LStore.getString('PaymentsNotSupported'),\n                    ok: LStore.getString('OK')\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                /// gamee, querty_bot\n\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender_id, content, via_bot_user_id } = message;\n                if (!content) break;\n\n                let payload = null;\n                let game = null;\n                if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                    game = content.game;\n                    if (!game) break;\n\n                    payload = { '@type': 'callbackQueryPayloadGame', game_short_name: game.short_name };\n                } else {\n                    payload = { '@type': 'callbackQueryPayloadData', data };\n                }\n\n                this.setState({ loading: true });\n                const result = await TdLibController.send({\n                    '@type': 'getCallbackQueryAnswer',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    payload\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                this.handleCallbackQueryAnswer(type, result, message);\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                /// BotFather + transfer bot\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                this.setState({ loading: true });\n                const passwordState = await TdLibController.send({\n                    '@type': 'getPasswordState'\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                const { has_password } = passwordState;\n                if (!has_password) break;\n\n                showInputPasswordAlert(passwordState, async (password, onCloseDialog, onError) => {\n                    console.log('[pwd] onPassword', password);\n                    this.setState({ loading: true });\n                    let error = null;\n                    const result = await TdLibController.send({\n                        '@type': 'getCallbackQueryAnswer',\n                        chat_id: chatId,\n                        message_id: messageId,\n                        payload: { '@type': 'callbackQueryPayloadDataWithPassword', data, password }\n                    }).catch(e => {\n                        error = e;\n                    }).finally(() => {\n                        this.setState({ loading: false });\n                    });\n\n                    if (error) {\n                        console.log('[pwd] onPassword error', error);\n                        onError && onError(error);\n                    } else if (result) {\n                        console.log('[pwd] onPassword result', result);\n                        onCloseDialog && onCloseDialog();\n                        this.handleCallbackQueryAnswer(type, result, message);\n                    }\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                const { url, id, forward_text } = type;\n\n                this.setState({ loading: true });\n                let hasError = false;\n                const result = await TdLibController.send({\n                    '@type': 'getLoginUrlInfo',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    button_id: id\n                }).catch(e => {\n                    hasError = true;\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                if (hasError) {\n                    showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                } else {\n                    switch (result['@type']) {\n                        case 'loginUrlInfoOpen': {\n                            const { url, skip_confirm } = result;\n\n                            showOpenUrlAlert(url, { punycode: false, ask: !skip_confirm, tryTelegraph: true });\n                            break;\n                        }\n                        case 'loginUrlInfoRequestConfirmation': {\n                            const { url } = result;\n\n\n                            console.log('[login] result', result);\n                            showRequestUrlAlert(url, { result, chatId, messageId, buttonId: id });\n                            break;\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                /// youtube\n                const { in_current_chat, query } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender_id, via_bot_user_id } = message;\n                let userId = sender_id.user_id;\n                if (via_bot_user_id !== 0) {\n                    userId = via_bot_user_id;\n                }\n\n                const user = UserStore.get(userId);\n                if (!user) break;\n\n                const inline = `@${user.username} ${query}`;\n\n                if (in_current_chat){\n                    setText(inline);\n                } else {\n                    openChatSelect({ switchInline: inline });\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                /// qwerty_bot\n                const { url } = type;\n\n                showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                break;\n            }\n        }\n    };\n\n    getIcon(type) {\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                const { in_current_chat } = type;\n\n                return !in_current_chat && <ShareFilledIcon className='keyboard-button-icon'/>;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n        }\n    }\n\n    render() {\n        const { text, type } = this.props;\n        const { loading } = this.state;\n\n        const icon = this.getIcon(type);\n\n        return (\n            <ListItem className='keyboard-button' button onClick={this.handleClick}>\n                {text}\n                {icon}\n                {loading && (\n                    <PendingIcon\n                        className='keyboard-button-progress'\n                        viewBox='0 0 14 14'\n                    />\n                )}\n            </ListItem>\n        );\n    }\n\n}\n\nKeyboardButton.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    text: PropTypes.string,\n    type: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default withMessage(KeyboardButton);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardButton from './KeyboardButton';\nimport './KeyboardRow.css';\n\nclass KeyboardRow extends React.Component {\n    render() {\n        const { row } = this.props;\n        if (!row) return null;\n        if (!row.length) return null;\n\n        return (\n            <div className='keyboard-row'>\n                {row.map((x, i) => (<KeyboardButton key={i} text={x.text} type={x.type}/>))}\n            </div>\n        );\n    }\n}\n\nKeyboardRow.propTypes = {\n    row: PropTypes.array\n};\n\nexport default KeyboardRow;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardRow from './KeyboardRow';\nimport MessageContext from '../MessageContext';\nimport './ReplyMarkup.css';\n\nclass ReplyMarkup extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId, prevMessageId } = state;\n        const { chatId, messageId } = props;\n\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                message: {\n                    chatId,\n                    messageId\n                }\n            }\n        }\n\n        return null;\n    }\n\n    render() {\n        const { markup } = this.props;\n        const { message } = this.state;\n\n        if (!markup) return null;\n        if (markup['@type'] !== 'replyMarkupInlineKeyboard') return null;\n\n        const { rows } = markup;\n        if (!rows.length) return null;\n\n        return (\n            <div className='reply-markup'>\n                <MessageContext.Provider value={message}>\n                    {rows.map((x, i) => (<KeyboardRow key={i} row={x}/>))}\n                </MessageContext.Provider>\n            </div>\n        );\n    }\n}\n\nReplyMarkup.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    markup: PropTypes.object\n};\n\nexport default ReplyMarkup;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_SIZE );\n            let totalLength = 0;\n            if (site_name) {\n                totalLength += site_name.length;\n            }\n            if (title) {\n                totalLength += title.length;\n            }\n            if (description) {\n                totalLength += description.text.length;\n            }\n\n            const extraSmallPhoto = smallPhoto && totalLength < 50;\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport ReplyMarkup from './Markup/ReplyMarkup';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { startMessageEditing, stopMessageEditing } from '../../Actions/Message';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle,\n    isEmptySelection\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isGroupChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageContent = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageEdited = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    handleUpdateMessageContentAndEditedOnce = () => {\n        const { updateMessageContent, updateMessageEdited } = this;\n        this.updateMessageContent = null;\n        this.updateMessageEdited = null;\n\n        if (!updateMessageContent && !updateMessageEdited) return;\n\n        const { chatId, messageId } = this.props;\n\n        let handled = false;\n        if (updateMessageContent) {\n            const { emojiMatches } = this.state;\n            const newEmojiMatches = getEmojiMatches(chatId, messageId);\n            if (newEmojiMatches !== emojiMatches) {\n                handled = true;\n                this.setState({ emojiMatches: newEmojiMatches });\n            }\n        }\n\n        if (handled) return;\n\n        startMessageEditing(chatId, messageId);\n        this.forceUpdate(() => {\n            stopMessageEditing(chatId, messageId);\n        });\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender_id, reply_markup } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t, { chatId, messageId });\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing) || (isGroupChat(chatId) && isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender_id.user_id) {\n                tile = <UserTile small userId={sender_id.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded =\n            !hasCaption  && (\n                content['@type'] === 'messageAnimation' ||\n                content['@type'] === 'messageVideo' ||\n                content['@type'] === 'messagePhoto' ||\n                content['@type'] === 'messageInvoice' && content.photo) || reply_markup && reply_markup['@type'] === 'replyMarkupInlineKeyboard';\n        const showMeta = withBubble && content['@type'] !== 'messageCall';\n\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div>\n                                <div\n                                    className={classNames('message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                    style={style}>\n                                    {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                        <div className='message-title'>\n                                            {showTitle && !showForward && (\n                                                <MessageAuthor sender={sender_id} forwardInfo={forward_info} openChat openUser/>\n                                            )}\n                                            {showForward && <Forward forwardInfo={forward_info} />}\n                                        </div>\n                                    )}\n                                    {showReply && (\n                                        <Reply\n                                            chatId={chatId}\n                                            messageId={reply_to_message_id}\n                                            onClick={this.handleReplyClick}\n                                        />\n                                    )}\n                                    {media}\n                                    <div\n                                        className={classNames('message-text', {\n                                            'message-text-1emoji': emojiMatches === 1,\n                                            'message-text-2emoji': emojiMatches === 2,\n                                            'message-text-3emoji': emojiMatches === 3\n                                        })}>\n                                        {text}\n                                    </div>\n                                    {webPage && (\n                                        <WebPage\n                                            chatId={chatId}\n                                            messageId={messageId}\n                                            openMedia={this.openMedia}\n                                            meta={inlineMeta}\n                                        />\n                                    )}\n                                    {showMeta && meta}\n                                </div>\n                                {reply_markup && (\n                                    <ReplyMarkup\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        markup={reply_markup}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </div>\n        );\n    }\n}\n\nMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n}\n\nMessage.defaultProps = {\n    sendingState: null,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showDate: false\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\nimport MessageMenu from './MessageMenu';\n\nconst chatPhotoStyle = {\n    width: 96,\n    height: 96,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false,\n            contextMenu: false,\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, t } = this.props;\n        const { highlighted, contextMenu } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted, contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n        if (content['@type'] === 'messageChatUpgradeTo') return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={96}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={null}\n                    source={'chat'}\n                />\n            </div>\n        );\n    }\n}\n\nServiceMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showUnreadSeparator: PropTypes.bool\n}\n\nServiceMessage.defaultProps = {\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport Album from '../Message/Album/Album';\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\nimport FilesDropTarget from './FilesDropTarget';\nimport GroupCallJoinPanel from '../Calls/GroupCallJoinPanel';\nimport InputBoxHints from './InputBoxHints';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, canSendMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isGroupChat, isMeChat } from '../../Utils/Chat';\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { sendBotStartMessage } from '../../Actions/Message';\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lastRequests = new Map();\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId, messageId } = this.props;\n        this.handleSelectChat(chatId, null, messageId, null);\n\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.on('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.off('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateStartMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { history } = this.state;\n        if (!history.length) return;\n\n        const { current: list } = this.listRef;\n        if (list.offsetHeight + list.scrollTop < list.scrollHeight){\n            return;\n        }\n\n        if (!history.some(x => x.chat_id === chatId && x.id === messageId)) return;\n\n        this.scrollBottomAfterEditing = {\n            chatId,\n            messageId\n        };\n    };\n\n    onClientUpdateStopMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { scrollBottomAfterEditing } = this;\n        if (!scrollBottomAfterEditing) return;\n\n        if (chatId !== scrollBottomAfterEditing.chatId) return;\n        if (messageId !== scrollBottomAfterEditing.messageId) return;\n\n        const { current: list } = this.listRef;\n        list.scrollTop = list.scrollHeight - list.offsetHeight;\n        this.scrollBottomAfterEditing = null;\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id, is_pinned } = update;\n        const { chatId, filter } = this.props;\n        if (chatId !== chat_id) return;\n        if (!filter) return;\n\n        if (is_pinned) {\n            const message = MessageStore.get(chat_id, message_id);\n\n            const list = this.listRef.current;\n\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            }\n\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n            const history = [message];\n            this.scrollBehaviorNone = true;\n            this.insert(history, newState, () => {\n                this.scrollBehaviorNone = false;\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, history);\n            this.viewMessages(history);\n        } else {\n            this.deleteHistory([message_id]);\n\n            const media = MessageStore.getMedia(chatId);\n            if (media && !media.pinned.length) {\n                closePinned();\n            }\n        }\n    };\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        const { prevScrollTop, prevOffsetHeight } = this;\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop -= Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(history, newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId, ignoreUnread = false) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n        const { sessionId } = this;\n\n        this.prevScrollTop = null;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            if (previousChatId !== chatId && !this.props.filter) {\n                TdLibController.send({\n                    '@type': 'openChat',\n                    chat_id: chatId\n                });\n            }\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (!ignoreUnread && unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            sessionId.loading = true;\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\n            .catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                sessionId.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.cancelUpdatePinnedMessage = true;\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n                requestAnimationFrame(() => {\n                    this.cancelUpdatePinnedMessage = false;\n                });\n\n                this.loadIncompleteHistory(result, limit);\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            if (previousChatId !== chatId && !this.props.filter) {\n                // getChatFullInfo(chatId);\n                getChatMedia(chatId);\n                if (this.props.options) {\n                    const { botStartMessage } = this.props.options;\n                    if (botStartMessage && canSendMessages(chatId) && isGroupChat(chatId)) {\n                        const { botUserId, parameter } = botStartMessage;\n\n                        await sendBotStartMessage(chatId, botUserId, parameter);\n                    }\n                }\n            }\n        } else {\n            sessionId.loading = true;\n            this.replace(0, [], () => {\n                sessionId.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId && !this.props.filter) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async (result, limit) => {\n        const MAX_ITERATIONS = 5;\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\n            result = await this.onLoadNext();\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n        }\n    };\n\n    isCompleteHistory = (result, limit) => {\n        if (!result) return false;\n        if (!result.messages.length) return true;   // end of the history\n\n        return result.messages.length >= limit;\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n        if (sessionId.loading) return;\n\n        if (sessionId.loadMigratedHistory) {\n            return await this.onLoadMigratedHistory();\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        let result = null;\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\n        if (this.lastRequests.has(lastRequestKey)) {\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\n        } else {\n            sessionId.loading = true;\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\n                .finally(() => {\n                    sessionId.loading = false;\n                });\n        }\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (!result.messages.length) {\n            this.lastRequests.set(lastRequestKey, result);\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                        });\n                    }\n                }, 100);\n            }\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        let fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) {\n            fullInfo = await getChatFullInfo(chatId);\n        }\n        if (!fullInfo.upgraded_from_basic_group_id) {\n            return;\n        }\n\n        sessionId.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n        if (sessionId.loading) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\n        .finally(() => {\n            sessionId.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n\n            this.loadIncompleteHistory(result, limit);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (sessionId.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\n            .finally(() => {\n                sessionId.loading = false;\n            });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(result.messages, {}, () => {\n            this.scrollBehaviorNone = false;\n            if (result.messages.length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        let history = [...this.state.history];\n        const index = history.findIndex(x => x.id === oldMessageId);\n        if (index !== -1) {\n            history.splice(index, 1, message);\n        } else {\n            history = this.state.history;\n        }\n\n        this.setState({ history }, callback);\n    }\n\n    insert(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history).sort((a, b) => {\n                if (a.id < b.id) {\n                    return -1;\n                } else if (a.id > b.id) {\n                    return 1;\n                }\n\n                return 0;\n            })\n        }, callback);\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    updateItemsInView = () => {\n        if (!this.messages) return null;\n\n        const messages = [];\n        const messagesMap = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    const key = `${chatId}_${messageId}`;\n                    messagesMap.set(key, key);\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        const key = `${chatId}_${messageIds[j]}`;\n                        messagesMap.set(key, key);\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!mapEquals(this.inViewMap, messagesMap)) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\n\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\n            this.inViewMap = messagesMap;\n\n            return messages;\n        }\n\n        return null;\n    };\n\n    updatePinnedMessage = scrollToNext => {\n        const { chatId, filter } = this.props;\n        if (filter) return;\n\n        const { prevScrollTop } = this;\n        if (prevScrollTop === null) {\n            // console.log('[pin] handleScroll 3.1');\n            return;\n        }\n        // const { prevScrollTop } = this;\n        // if (prevScrollTop === null) return;\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return;\n        if (!media.pinned) return;\n        if (media.pinned.length <= 1) return;\n\n        const messages = [];\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!messages) return;\n        if (messages.length <= 1) return;\n\n        const minId = messages[0].messageId;\n        const maxId = messages[messages.length - 1].messageId;\n\n        let id = 0;\n        for (let i = 0; i < media.pinned.length; i++) {\n            const pinned = media.pinned[i];\n            if (pinned.id >= minId && pinned.id <= maxId) {\n                id = pinned.id;\n                break;\n            }\n        }\n\n        if (!id) {\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\n            const pinnedMaxId = media.pinned[0].id\n\n            if (pinnedMaxId < minId) {\n                id = pinnedMaxId;\n            } else if (pinnedMinId > maxId) {\n                id = pinnedMinId;\n            }\n        }\n\n        const { clickedPinned, currentPinned } = MessageStore;\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\n\n\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\n                // console.log('[pin] handleScroll 3.2');\n                return;\n            }\n\n            // console.log('[pin] handleScroll 4', { chatId, id });\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\n        } else {\n            // console.log('[pin] handleScroll 3.3');\n        }\n    };\n\n    updateScrollDownVisibility = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevHistory = history;\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\n\n        this.updateItemsInView();\n\n        if (!this.cancelUpdatePinnedMessage) {\n            this.updatePinnedMessage(scrollToNext);\n        }\n\n        this.updateScrollDownVisibility();\n\n        if (this.prevScrollTop !== null) {\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\n                this.onLoadNext();\n            }\n\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\n                this.onLoadPrevious();\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    getRequest = (chatId, fromMessageId, offset, limit) => {\n        const { filter } = this.props;\n\n        if (filter) {\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\n                const media = MessageStore.getMedia(chatId);\n                if (media && media.pinned && media.pinned.length > 0) {\n                    return Promise.resolve({\n                        '@type': 'messages',\n                        messages: [...media.pinned]\n                    });\n                }\n            }\n\n            return TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                from_message_id: fromMessageId,\n                offset,\n                limit,\n                filter,\n                sender_user_id: null,\n                query: null\n            });\n        }\n\n        return TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset,\n            limit\n        });\n    };\n\n    scrollToStart = async () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const hasLastMessage = history.some(x => x.chat_id === chatId && chat && chat.last_message && chat.last_message.id === x.id);\n        if (hasLastMessage) {\n            this.scrollToBottom();\n        } else {\n            this.handleSelectChat(chatId, chatId, 0, messageId, true);\n        }\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        if (!event.dataTransfer) return;\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            dataTransfer: event.dataTransfer\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender_id, content, forward_info } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isFirstUnread) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                !senderEquals(sender_id, prevMessage.sender_id) ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId, filter } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        this.itemsMap.clear();\n\n        if (clearHistory) {\n            this.messages = null;\n        } else {\n            this.messages = [];\n            for (let i = 0; i < history.length; i++) {\n                const message = history[i];\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\n                let albumAdded = false;\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender_id, nextMessage.sender_id)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <Album\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender_id, nextMessage.sender_id)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <DocumentAlbum\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                }\n\n                if (!albumAdded) {\n                    /// history[4] id=5 prev\n                    /// history[5] id=6 current\n                    /// history[6] id=7 next\n                    /// ...\n                    /// history[9] id=10\n\n                    const x = message;\n                    const prevMessage = i > 0 ? history[i - 1] : null;\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                    let m = null;\n                    if (isServiceMessage(x)) {\n                        m = (\n                            <ServiceMessage\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    } else {\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender_id, nextMessage.sender_id)\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        m = (\n                            <Message\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                sendingState={x.sending_state}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    }\n\n                    this.messages.push(m);\n                }\n            }\n        }\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <div className='messages-list-top-panel'>\n                    <GroupCallJoinPanel chatId={chatId}/>\n                    <ActionBar chatId={chatId} />\n                </div>\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n                {/*<InputBoxHints />*/}\n            </div>\n        );\n    }\n}\n\nMessagesList.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    options: PropTypes.object,\n    filter: PropTypes.object\n};\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport HeaderCommand from './HeaderCommand';\nimport { clearSelection, closePinned } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessagesHeader.css'\n\nclass PinnedMessagesHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const media = MessageStore.getMedia(props.chatId);\n\n        this.state = {\n            selectedCount: MessageStore.selectedItems.size,\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { selectedCount, pinnedCount } = this.state;\n\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n\n        if (nextState.pinnedCount !== pinnedCount) {\n            return true;\n        }\n\n        return true;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({\n            selectedCount: MessageStore.selectedItems.size\n        });\n    }\n\n    handleClose = () => {\n        const { selectedCount } = this.state;\n        if (selectedCount > 0) {\n            clearSelection();\n        }\n\n        closePinned();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedCount, pinnedCount } = this.state;\n\n        let title = t('PinnedMessages');\n        if (pinnedCount === 1) {\n            title = t('PinnedMessage');\n        } else if (pinnedCount > 1) {\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\n                <IconButton\n                    className='header-left-button main-menu-button'\n                    onClick={this.handleClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectedCount}/>\n                    <div className={classNames('header-status', 'grow')}>\n                        <span className='header-status-content'>{title}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nPinnedMessagesHeader.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(PinnedMessagesHeader);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport MessagesList from './MessagesList';\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { canPinMessages } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessages.css';\n\nclass PinnedMessages extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId } = state;\n        const { chatId } = props;\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                opened: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    onClientUpdateOpenPinned = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n\n        if (currentChatId !== chatId) return;\n\n        this.setState({\n            opened: true\n        });\n    };\n\n    onClientUpdateClosePinned = update => {\n        this.setState({\n            opened: false\n        });\n    };\n\n    handleUnpinAll = async () => {\n        const { chatId } = this.props;\n\n        requestUnpinMessage(chatId, null);\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const { opened } = this.state;\n        if (!opened) return null;\n\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\n\n        return (\n            <div className='pinned-messages'>\n                <div className='pinned-messages-wrapper'>\n                    <div className='dialog-background'/>\n                    <div className='dialog-details-wrapper'>\n                        <PinnedMessagesHeader chatId={chatId} />\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\n                    </div>\n                </div>\n            </div>\n        );\n\n        // return (\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\n        //\n        //     </SidebarPage>\n        // );\n    }\n}\n\nPinnedMessages.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessages);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='sticker-set-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { closeChatSelect } from '../../Actions/Message';\nimport './SelectChatPlaceholder.css';\n\nclass SelectChatPlaceholder extends React.Component {\n\n    handleClick = () => {\n        closeChatSelect();\n    }\n\n    render() {\n        const { t } = this.props;\n\n        return (\n            <div className='switch-inline-placeholder' onClick={this.handleClick}>\n                <div className='switch-inline-text'>{t('SelectChat') + '...'}</div>\n            </div>\n        );\n    }\n\n}\n\nSelectChatPlaceholder.propTypes = {};\n\nexport default withTranslation()(SelectChatPlaceholder);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport GroupCallTopPanel from '../Calls/GroupCallTopPanel';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessages from './PinnedMessages';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport SelectChatPlaceholder from './SelectChatPlaceholder';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null,\n            chatSelectOptions: null,\n            chatOpenOptions: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper, chatSelectOptions, chatOpenOptions } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n        if (nextState.chatSelectOptions !== chatSelectOptions) {\n            return true;\n        }\n        if (nextState.chatOpenOptions !== chatOpenOptions) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.on('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.off('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateClearOpenChatOptions = update => {\n        this.setState({\n            chatOpenOptions: null\n        });\n    }\n\n    onClientUpdateChatSelect = update => {\n        const { options } = update;\n\n        this.setState({\n            chatSelectOptions: options\n        });\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatSelectOptions } = this.state;\n        const { nextChatId: chatId, nextMessageId: messageId, options: chatOpenOptions } = update;\n\n        this.setState({\n            chatId,\n            messageId,\n            chatOpenOptions,\n            chatSelectOptions: chatOpenOptions && chatOpenOptions.closeChatSelect ? null: chatSelectOptions\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, chatOpenOptions, wallpaper, chatSelectOptions } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <div className='dialog-details-wrapper'>\n                    <GroupCallTopPanel/>\n                    <HeaderPlayer />\n                    <Header chatId={chatId} />\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} options={chatOpenOptions} />\n                    <Footer chatId={chatId} options={chatOpenOptions}/>\n                </div>\n                {chatSelectOptions && <SelectChatPlaceholder/>}\n                <PinnedMessages chatId={chatId}/>\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\nimport AppStore from '../../Stores/ApplicationStore';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false,\n            for_comment: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        messageIds.sort();\n\n        this.targetChats.forEach(async targetChatId => {\n            if (inputMessageContent) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport BlobDrawable, {\n    AMPLITUDE_SPEED,\n    FORM_BIG_MAX,\n    FORM_SMALL_MAX, LIGHT_GRADIENT_SIZE,\n    SCALE_BIG,\n    SCALE_BIG_MIN,\n    SCALE_SMALL,\n    SCALE_SMALL_MIN\n} from './BlobDrawable';\nimport {\n    MUTE_BUTTON_STATE_CONNECTING,\n    MUTE_BUTTON_STATE_MUTE,\n    MUTE_BUTTON_STATE_MUTED_BY_ADMIN,\n    MUTE_BUTTON_STATE_UNMUTE\n} from './TopBar';\nimport { stopPropagation } from '../../Utils/Message';\n\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/OvershootInterpolator.java\nclass OvershootInterpolator {\n    constructor(tension) {\n        this.mTension = tension;\n    }\n\n    getInterpolation(t) {\n        // _o(t) = t * t * ((tension + 1) * t + tension)\n        // o(t) = _o(t - 1) + 1\n        t -= 1.0;\n        return t * t * ((this.mTension + 1) * t + this.mTension) + 1.0;\n    }\n}\n\n// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/DecelerateInterpolator.java\nclass DecelerateInterpolator {\n    constructor(factor) {\n        this.mFactor = factor || 1.0;\n    }\n\n    getInterpolation(input) {\n        let result;\n        if (this.mFactor === 1.0) {\n            result = 1.0 - (1.0 - input) * (1.0 - input);\n        } else {\n            result = 1.0 - Math.pow((1.0 - input), 2 * this.mFactor);\n        }\n        return result;\n    }\n}\n\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/AccelerateInterpolator.java\nclass AccelerateInterpolator {\n    constructor(factor) {\n        this.mFactor = factor || 1.0;\n        this.mDoubleFactor = 2 * this.mFactor;\n    }\n\n    getInterpolation(input) {\n        if (this.mFactor === 1.0) {\n            return input * input;\n        }\n\n        return Math.pow(input, this.mDoubleFactor);\n    }\n}\n\nclass WeavingState {\n    constructor(stateId) {\n        this.stateId = stateId;\n        this.shader = (ctx, left, top, right, bottom) => { };\n        this.createGradient(stateId);\n    }\n\n    createGradient(stateId) {\n        this.shader = (ctx, left, top, right, bottom) => {\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\n        };\n    }\n\n    update(top, left, size, dt) {\n        // TODO: move gradient here\n    }\n\n    // Android colors\n    static getGradientFromType(ctx, type, left, top, right, bottom) {\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            const gradient = ctx.createLinearGradient(0, 100, 100, 0);\n\n            gradient.addColorStop(0, '#57A4FE');\n            gradient.addColorStop(.3, '#766EE9');\n            gradient.addColorStop(1, '#F05459');\n\n            return gradient;\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\n            const gradient=ctx.createRadialGradient(0,50,0,0,50,200);\n\n            gradient.addColorStop(0, '#77E55C');\n            gradient.addColorStop(1, '#56C7FE');\n\n            return gradient;\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\n            const gradient = ctx.createRadialGradient(0,50,0,0,50,200);\n\n            gradient.addColorStop(0, '#66D4FB');\n            gradient.addColorStop(1, '#539EF8');\n\n            return gradient;\n        } else {\n            const gradient = ctx.createLinearGradient(0, 400, 400, 0);\n\n            gradient.addColorStop(0, '#2B333E');\n            gradient.addColorStop(1, '#2B333E');\n\n            return gradient;\n        }\n    }\n}\n\nclass RadialProgressView {\n    constructor() {\n        this.decelerateInterpolator = new DecelerateInterpolator();\n        this.accelerateInterpolator = new AccelerateInterpolator();\n\n        this.lineCap = 'round';\n        this.lineWidth = 3;\n        this.progressColor = '#1C93E3';\n        this.updateProgressPaint();\n\n        this.lastUpdateTime = 0;\n        this.radOffset = 0;\n        this.currentCircleLength = 0;\n        this.risingCircleLength = false;\n        this.currentProgressTime = 0;\n        this.useSelfAlpha = false;\n        this.drawingCircleLength = 0;\n\n        this.rotationTime = 2000;\n        this.risingTime = 500;\n        this.size = 0;\n\n        this.currentProgress = 0;\n        this.progressAnimationStart = 0;\n        this.progressTime = 0;\n        this.animatedProgress = 0;\n        this.circle = false;\n        this.circleProgress = 0;\n        this.noProgress = true;\n    }\n\n    setUseSelfAlpha = value => {\n        this.useSelfAlpha = value;\n    };\n\n    setAlpha = alpha => {\n        console.log('[rpv] setAlpha', alpha);\n    };\n\n    setNoProgress = value => {\n        this.noProgress = value;\n    };\n\n    setProgress = value => {\n        this.currentProgress = value;\n        if (this.animatedProgress > value) {\n            this.animatedProgress = value;\n        }\n\n        this.progressAnimationStart = this.animatedProgress;\n        this.progressTime = 0;\n    };\n\n    updateAnimation = () => {\n        const newTime = new Date();\n        let dt = newTime - this.lastUpdateTime;\n        if (dt > 17) {\n            dt = 17;\n        }\n        this.lastUpdateTime = newTime;\n\n        this.radOffset += 360 * dt / this.rotationTime;\n        let count = Math.trunc(this.radOffset / 360);\n        this.radOffset -= count * 360;\n\n        if (this.circle && this.circleProgress !== 1.0) {\n            this.circleProgress += 16 / 220;\n            if (this.circleProgress > 1.0) {\n                this.circleProgress = 1.0;\n            }\n        } else if (!this.circle && this.circleProgress !== 0.0) {\n            this.circleProgress -= 16 / 400;\n            if (this.circleProgress < 0) {\n                this.circleProgress = 0;\n            }\n        }\n\n        if (this.noProgress) {\n            if (this.circleProgress === 0) {\n                this.currentProgressTime += dt;\n                if (this.currentProgressTime >= this.risingTime) {\n                    this.currentProgressTime = this.risingTime;\n                }\n                if (this.risingCircleLength) {\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\n                } else {\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\n                }\n\n                if (this.currentProgressTime === this.risingTime) {\n                    if (this.risingCircleLength) {\n                        this.radOffset += 270;\n                        this.currentCircleLength = -266;\n                    }\n\n                    this.risingCircleLength = !this.risingCircleLength;\n                    this.currentProgressTime = 0;\n                }\n            } else {\n                if (this.risingCircleLength) {\n                    const old = this.currentCircleLength;\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\n                    this.currentCircleLength += 360 * this.circleProgress;\n                    const dx = old - this.currentCircleLength;\n                    if (dx > 0) {\n                        this.radOffset += old - this.currentCircleLength;\n                    }\n                } else {\n                    const old = this.currentCircleLength;\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\n                    this.currentCircleLength -= 364 * this.circleProgress;\n                    const dx = old - this.currentCircleLength;\n                    if (dx > 0) {\n                        this.radOffset += old - this.currentCircleLength;\n                    }\n                }\n            }\n        }\n        else {\n            let progressDiff = this.currentProgress - this.progressAnimationStart;\n            if (progressDiff > 0) {\n                progressDiff += dt;\n                if (this.progressTime >= 200) {\n                    this.animatedProgress = this.progressAnimationStart = this.currentProgress;\n                    this.progressTime = 0;\n                } else {\n                    this.animatedProgress = this.progressAnimationStart + progressDiff * this.decelerateInterpolator.getInterpolation(this.progressTime / 200);\n                }\n            }\n            this.currentCircleLength = Math.max(4, 360 * this.animatedProgress);\n        }\n    };\n\n    setSize = size => {\n        this.size = size;\n    };\n\n    setStrokeWidth = value => {\n        this.lineWidth = value;\n        this.updateProgressPaint();\n    };\n\n    setProgressColor = color => {\n        this.progressColor = color;\n        this.updateProgressPaint();\n    };\n\n    updateProgressPaint() {\n        this.progressPaint = ctx => {\n            if (this.lineCap) {\n                ctx.lineCap = this.lineCap;\n            }\n            if (this.lineWidth) {\n                ctx.lineWidth = this.lineWidth;\n            }\n            if (this.progressColor) {\n                ctx.strokeStyle = this.progressColor;\n            }\n        };\n    }\n\n    toCircle = (toCircle, animated) => {\n        this.circle = toCircle;\n        if (!animated) {\n            this.circleProgress = this.circle ? 1.0 : 0.0;\n        }\n    }\n\n    draw = (canvas, cx, cy, scale = 1) => {\n        this.circleRect = { x0: cx - this.size / 2, y0: cy - this.size / 2, x1: cx + this.size / 2, y1: cy + this.size / 2 };\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(cx, cy);\n            ctx.scale(scale, scale);\n            ctx.beginPath();\n            if (!this.risingCircleLength) {\n                if ((this.radOffset + this.currentCircleLength) > this.radOffset) {\n                    this.currentCircleLength = 0;\n                }\n            }\n\n            const radStart = this.radOffset * Math.PI / 180;\n            this.drawingCircleLength = this.currentCircleLength;\n            const radLength = this.drawingCircleLength * Math.PI / 180;\n\n\n            ctx.arc(0, 0, this.size / 2, radStart, radStart + radLength, !this.risingCircleLength);\n            this.progressPaint(ctx);\n            ctx.stroke();\n            ctx.restore();\n\n            this.updateAnimation();\n        }\n    }\n\n    isCircle = () => {\n        return Math.abs(this.drawingCircleLength) >= 360;\n    }\n}\n\nclass Button extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.focused = true;\n        this.radialPaint = ctx => { };\n        this.paint = ctx => { };\n        this.paintTmp = ctx => { };\n        this.lastUpdateTime = new Date();\n        this.amplitude = 0.0;\n\n        this.states = [\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\n        ];\n        this.switchProgress = 1.0;\n        this.muteButtonState = MUTE_BUTTON_STATE_MUTE;\n        this.prevState = null;\n        this.currentState = this.states[this.muteButtonState];\n        this.progressToState = 1.0;\n\n        this.showLightingProgress = 1.0;\n        this.showWavesProgress = 1.0;\n        this.overshootInterpolator = new OvershootInterpolator(1.5);\n        this.colorsTmp = new Array(3);\n\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 0 * this.scale;\n        this.right = 380 * this.scale;\n        this.bottom = (220 + 28) * this.scale;\n        this.cx = 190 * this.scale;\n        this.cy = (110 + 28) * this.scale;\n\n        this.buttonDefaultRadius = 57;\n        this.buttonRadius = 52;\n        this.strokeWidth = 4;\n        this.invalidateColors = true;\n        this.radialProgressView = new RadialProgressView();\n        this.radialProgressView.setSize(this.buttonRadius * 2 - this.strokeWidth);\n        this.radialProgressView.setStrokeWidth(this.strokeWidth);\n        this.radialProgressView.setProgressColor('#28BAFF');\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        window.addEventListener('blur', this.handleBlur);\n        window.addEventListener('focus', this.handleFocus);\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n\n\n        this.canvas = document.getElementById('button-canvas');\n        this.tinyWaveDrawable = new BlobDrawable(9);\n        this.bigWaveDrawable = new BlobDrawable(12);\n\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.maxRadius = Math.trunc(72 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.generateInitBlob();\n\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.maxRadius = Math.trunc(75 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.generateInitBlob();\n\n        const color = '#66D4FB';\n        this.radialGradient = ctx => {\n            const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 160);\n            gradient.addColorStop(0, color + '32');\n            gradient.addColorStop(1, color + '00');\n\n            ctx.fillStyle = gradient;\n        };\n        this.radialPaint = this.radialGradient;\n\n        this.setAmplitude(this.amplitude);\n\n        // console.log('[button] componentDidMount draw');\n        this.draw();\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        window.removeEventListener('blur', this.handleBlur);\n        window.removeEventListener('focus', this.handleFocus);\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n    }\n\n    handleFocus = () => {\n        this.focused = true;\n        this.invokeDraw();\n    }\n\n    handleBlur = () => {\n        this.focused = false;\n    }\n\n    invokeDraw = () => {\n        if (this.raf) return;\n\n        this.draw();\n    }\n\n    handleDevicePixelRatioChanged = e => {\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 0 * this.scale;\n        this.right = 380 * this.scale;\n        this.bottom = (220 + 28) * this.scale;\n        this.cx = 190 * this.scale;\n        this.cy = (110 + 28) * this.scale;\n        this.forceUpdate();\n    }\n\n    fillColors(stateId, colorsToSet) {\n        if (stateId === MUTE_BUTTON_STATE_UNMUTE) {\n            colorsToSet[0] = '#66D4FB';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else if (stateId === MUTE_BUTTON_STATE_MUTE) {\n            colorsToSet[0] = '#7DDCAA';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else if (stateId === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            colorsToSet[0] = '#766EE9';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else {\n            colorsToSet[0] = '#1C2229';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        }\n    }\n\n    strToHex(n) {\n        let s = n.toString(16);\n        if (s.length === 1) {\n            s = '0' + s;\n        }\n        return s;\n    }\n\n    blendARGB(color1, color2, ratio) {\n        if (color1.length <= 7) {\n            color1 += 'FF';\n        }\n        if (color2.length <= 7) {\n            color2 += 'FF';\n        }\n        const c1 = {\n            r: parseInt(color1.substr(1, 2), 16),\n            g: parseInt(color1.substr(3, 2), 16),\n            b: parseInt(color1.substr(5, 2), 16),\n            a: parseInt(color1.substr(7, 2), 16),\n        };\n        const c2 = {\n            r: parseInt(color2.substr(1, 2), 16),\n            g: parseInt(color2.substr(3, 2), 16),\n            b: parseInt(color2.substr(5, 2), 16),\n            a: parseInt(color2.substr(7, 2), 16),\n        };\n\n        const inverseRatio = 1 - ratio;\n        const a = Math.trunc(c1.a * inverseRatio + c2.a * ratio) % 256;\n        const r = Math.trunc(c1.r * inverseRatio + c2.r * ratio) % 256;\n        const g = Math.trunc(c1.g * inverseRatio + c2.g * ratio) % 256;\n        const b = Math.trunc(c1.b * inverseRatio + c2.b * ratio) % 256;\n\n        return `#${this.strToHex(r)}${this.strToHex(g)}${this.strToHex(b)}`;\n    }\n\n    draw = (force = false) => {\n        this.raf = null;\n        if (!this.mounted) {\n            return;\n        }\n        if (!this.focused && this.switchProgress >= 1.0) {\n            return;\n        }\n        // console.log('[button] draw', [this.focused, this.mounted]);\n        const { currentState, prevState, left, top, right, bottom } = this;\n\n        const newTime = new Date();\n        let dt = (newTime - this.lastUpdateTime);\n        if (dt > 20) {\n            dt = 17;\n        }\n\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.maxRadius = Math.trunc((62 + 20 * FORM_SMALL_MAX) / this.buttonDefaultRadius * this.buttonRadius);\n\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.maxRadius = Math.trunc((65 + 20 * FORM_BIG_MAX) / this.buttonDefaultRadius * this.buttonRadius);\n\n        if (this.animateToAmplitude !== this.amplitude) {\n            this.amplitude = this.amplitude + this.animateAmplitudeDiff * dt;\n            if (this.animateAmplitudeDiff > 0) {\n                if (this.amplitude > this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude < this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            }\n        }\n\n        let canSwitchProgress = true;\n        if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n            this.radialProgressView.toCircle(true, true);\n            if (!this.radialProgressView.isCircle()) {\n                canSwitchProgress = false;\n            }\n        } else if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n            this.radialProgressView.toCircle(true, false);\n        }\n\n        if (canSwitchProgress) {\n            if (this.switchProgress !== 1) {\n                if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                    this.switchProgress += dt / 100;\n                } else {\n                    this.switchProgress += dt / 180;\n                }\n\n                if (this.switchProgress >= 1.0) {\n                    this.switchProgress = 1.0;\n                    this.prevState = null;\n                    if (currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        this.radialProgressView.toCircle(false, true);\n                    }\n                }\n                this.invalidateColors = true;\n            }\n\n            if (this.invalidateColors && currentState) {\n                this.invalidateColors = false;\n                let lightingColor;\n                if (prevState) {\n                    this.fillColors(prevState.stateId, this.colorsTmp);\n                    const oldLight = this.colorsTmp[0];\n                    this.fillColors(currentState.stateId, this.colorsTmp);\n                    const newLight = this.colorsTmp[0];\n                    lightingColor = this.blendARGB(oldLight, newLight, this.switchProgress);\n                } else {\n                    this.fillColors(currentState.stateId, this.colorsTmp);\n                    lightingColor = this.colorsTmp[0];\n                }\n                if (this.currentLightColor !== lightingColor) {\n                    this.radialGradient = ctx => {\n                        const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 100);\n\n                        gradient.addColorStop(0, lightingColor + '3C');\n                        gradient.addColorStop(1, lightingColor + '00');\n\n                        ctx.fillStyle = gradient;\n                    };\n                    this.currentLightColor = lightingColor;\n                }\n            }\n\n            let showWaves = false;\n            let showLighting = false;\n            if (currentState) {\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\n                showLighting = currentState.stateId !== MUTE_BUTTON_STATE_CONNECTING;\n            }\n\n            if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                this.showWavesProgress -= dt / 180;\n                if (this.showWavesProgress < 0) {\n                    this.showWavesProgress = 0;\n                }\n            } else {\n                if (showWaves && this.showWavesProgress !== 1) {\n                    this.showWavesProgress += dt / 350;\n                    if (this.showWavesProgress > 1) {\n                        this.showWavesProgress = 1;\n                    }\n                } else if (!showWaves && this.showWavesProgress !== 0) {\n                    this.showWavesProgress -= dt / 350;\n                    if (this.showWavesProgress < 0) {\n                        this.showWavesProgress = 0;\n                    }\n                }\n            }\n\n            if (showLighting && this.showLightingProgress !== 1) {\n                this.showLightingProgress += dt / 350;\n                if (this.showLightingProgress > 1) {\n                    this.showLightingProgress = 1;\n                }\n            } else if (!showLighting && this.showLightingProgress !== 0) {\n                this.showLightingProgress -= dt / 350;\n                if (this.showLightingProgress < 0) {\n                    this.showLightingProgress = 0;\n                }\n            }\n        }\n\n        let showWavesProgressInterpolated = this.overshootInterpolator.getInterpolation(this.showWavesProgress);\n        showWavesProgressInterpolated = 0.4 + 0.6 * showWavesProgressInterpolated;\n\n        this.bigWaveDrawable.update(this.amplitude, 1.0);\n        this.tinyWaveDrawable.update(this.amplitude, 1.0);\n\n        const ctx = this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        ctx.resetTransform();\n\n        const cx = this.cx;\n        const cy = this.cy;\n\n        if (prevState && currentState && (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING || prevState.stateId === MUTE_BUTTON_STATE_CONNECTING)) {\n            let progress;\n            if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                progress = this.switchProgress;\n                this.paint = prevState.shader;\n            } else {\n                progress = 1.0 - this.switchProgress;\n                this.paint = currentState.shader;\n            }\n\n            this.paintTmp = ctx => {\n                ctx.fillStyle = '#2B333E';\n            }\n\n            let paint = ctx => {\n                this.paint(ctx, left, top, right, bottom);\n            };\n\n            ctx.globalAlpha = 1.0;\n            let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\n            const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\n            this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\n\n            ctx.globalAlpha = 0.3;\n            // big wave\n            ctx.save();\n            scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\n            ctx.translate(cx, cy);\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n            this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\n            ctx.restore();\n\n            // small wave\n            ctx.save();\n            scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\n            ctx.translate(cx, cy);\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n            this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\n            ctx.restore();\n\n            ctx.globalAlpha = 1.0;\n            if (canSwitchProgress) {\n                this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\n                paint = ctx => {\n                    ctx.fillStyle = '#28BAFF';\n                };\n                if (progress !== 0) {\n                    ctx.globalAlpha = progress;\n                    this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\n                }\n            }\n            ctx.globalAlpha = 1.0;\n            this.drawCircle(ctx, cx, cy, 1,Math.trunc(this.buttonRadius - 0.5 * this.strokeWidth) * progress * this.scale, this.paintTmp);\n            if  (!canSwitchProgress) {\n                this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\n            }\n            ctx.restore();\n        } else {\n            for (let i = 0; i < 2; i++) {\n                let alpha = 0;\n                let buttonRadius = this.buttonRadius;\n                let paint = null;\n                if (i === 0 && prevState) {\n                    paint = prevState.shader;\n                    alpha = 1 - this.switchProgress;\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else if (i === 1) {\n                    paint = currentState.shader;\n                    alpha = this.switchProgress;\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else {\n                    continue;\n                }\n\n                if (!paint) {\n                    paint = ctx => {\n                        ctx.fillStyle = '#2B333E';\n                    };\n                }\n\n                ctx.globalAlpha = 1.0;\n                let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\n                if (i === 1) {\n                    const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\n                    this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\n                }\n\n                ctx.globalAlpha = 0.3 * alpha;\n                // big wave\n                ctx.save();\n                scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\n                ctx.translate(cx, cy);\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n                this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\n                ctx.restore();\n\n                // small wave\n                ctx.save();\n                scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\n                ctx.translate(cx, cy);\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n                this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\n                ctx.restore();\n            }\n\n            // button\n            for (let i = 0; i < 2; i++) {\n                let alpha = 0;\n                let buttonRadius = this.buttonRadius;\n                let paint = null;\n                if (i === 0 && prevState) {\n                    paint = prevState.shader;\n                    alpha = 1 - this.switchProgress;\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else if (i === 1) {\n                    paint = currentState.shader;\n                    alpha = this.switchProgress;\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else {\n                    continue;\n                }\n\n                if (!paint) {\n                    paint = ctx => {\n                        ctx.fillStyle = '#2B333E';\n                    };\n                }\n\n                if (i === 0) {\n                    ctx.globalAlpha = 1.0;\n                } else {\n                    ctx.globalAlpha = alpha;\n                }\n                this.drawCircle(ctx, cx, cy, this.scale, buttonRadius, paint);\n\n                if (i === 1 && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                    this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\n                }\n            }\n        }\n\n        if (!force) {\n            this.raf = requestAnimationFrame(() => this.draw());\n        }\n    };\n\n    drawCircle(ctx, cx, cy, scale, radius, paint) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.translate(cx, cy);\n        ctx.scale(scale, scale);\n        ctx.arc(0, 0, radius, 0, 2 * Math.PI, false);\n        ctx.closePath();\n        paint && paint(ctx);\n        ctx.fill();\n        ctx.restore();\n    }\n\n    setCurrentState = (stateId, animated) => {\n        const { currentState, states } = this;\n\n        if (currentState && currentState.id === stateId) {\n            return;\n        }\n\n        this.previousState = animated ? currentState : null;\n        this.currentState = states[stateId];\n        this.progressToState = this.previousState ? 0.0 : 1.0;\n    };\n\n    updateMuteButton = (stateId, animated) => {\n        const { muteButtonState } = this;\n        if (muteButtonState === stateId && animated) {\n            return;\n        }\n\n        // TODO: add text animation\n\n        if (animated) {\n            this.muteButtonState = stateId;\n        } else {\n            this.muteButtonState = stateId;\n        }\n        this.updateMuteButtonState(animated);\n    }\n\n    updateMuteButtonState (animated) {\n        const { states, currentState, muteButtonState } = this;\n\n        if (states[muteButtonState] !== currentState) {\n            this.prevState = currentState;\n            this.currentState = states[muteButtonState];\n            if (!this.prevState || !animated) {\n                this.switchProgress = 1.0;\n                this.prevState = null;\n            } else {\n                this.switchProgress = 0.0;\n            }\n        }\n\n        if (!animated) {\n            let showWaves = false;\n            let showLighting = false;\n            if (currentState) {\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\n                showLighting = currentState.stateId === MUTE_BUTTON_STATE_CONNECTING;\n            }\n            this.showWavesProgress = showWaves ? 1.0 : 0.0;\n            this.showLightingProgress = showLighting ? 1.0 : 0.0;\n        }\n    }\n\n    setAmplitude(value) {\n        this.animateToAmplitude = value;\n        this.animateAmplitudeDiff = (value - this.amplitude) / (100 + 500 * AMPLITUDE_SPEED);\n        // console.log('[button] setAmplitude', [this.amplitude, this.animateToAmplitude, this.animateAmplitudeDiff]);\n    }\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    }\n\n    render() {\n        const { children, onClick } = this.props;\n        const { left, right, top, bottom, scale } = this;\n\n        return (\n            <div id='button' className='button' style={{ height: bottom / scale, borderRadius: 12, position: 'relative', transform: 'translateY(-28px)' }}>\n                <canvas id='button-canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\n                <div style={{\n                    position: 'absolute',\n                    background: 'transparent',\n                    width: 104,\n                    height: 104,\n                    borderRadius: '50%',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    left: '50%',\n                    top: '50%',\n                    marginLeft: -52,\n                    marginTop: -38,\n                    cursor: 'pointer'\n                }}\n                     onMouseDown={stopPropagation}\n                     onClick={onClick}>\n                    {children}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nButton.propTypes = {};\n\nexport default Button;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport AnimatedItem from '../ColumnMiddle/AnimatedItem';\nimport './GroupCallMicButtonHint.css';\n\nclass GroupCallMicButtonHint extends React.Component {\n\n    getItemTemplate = item => {\n        const { t } = this.props;\n\n        let title = '';\n        let subtitle = '';\n        switch (item) {\n            case 'muted': {\n                title = t('VoipGroupUnmute');\n                subtitle = t('VoipHoldAndTalk');\n                break;\n            }\n            case 'unmuted': {\n                title = t('VoipTapToMute');\n                break;\n            }\n            case 'forceMuted': {\n                title = t('VoipMutedByAdmin');\n                subtitle = t('VoipMutedByAdminInfo');\n                break;\n            }\n            case 'connecting': {\n                title = t('Connecting');\n                break;\n            }\n        }\n\n        return (\n            <div className='group-call-mic-button-hint-item'>\n                <div className='group-call-mic-button-hint-title'>{title}</div>\n                {subtitle && <div className='group-call-mic-button-hint-subtitle'>{subtitle}</div>}\n            </div>\n        );\n    }\n\n    render() {\n        const { className, status } = this.props;\n\n        return (\n            <div className={classNames('group-call-mic-button-hint', className)}>\n                <AnimatedItem item={status} height={37} getItemTemplate={this.getItemTemplate} scrollDown={true} animateOnMount={false}/>\n            </div>\n        );\n    }\n}\n\nGroupCallMicButtonHint.propTypes = {\n    status: PropTypes.string\n};\n\nexport default withTranslation()(GroupCallMicButtonHint);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from './Button';\nimport GroupCallMicButtonHint from './GroupCallMicButtonHint';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport { getCallStatus } from '../../Calls/Utils';\nimport { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallMicButton.css';\n\nclass GroupCallMicButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.buttonRef = React.createRef();\n\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected,\n            animated: CallStore.animated\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { status, connected, animated, shook } = this.state;\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        if (connected !== nextState.connected) {\n            return true;\n        }\n\n        if (shook !== nextState.shook) {\n            return true;\n        }\n\n        if (status !== nextState.status) {\n            return true;\n        }\n\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.switchButtonState(false);\n\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onClientUpdateGroupCallAmplitudeChange = update => {\n        const { amplitudes } = update;\n        if (!amplitudes.length) return;\n\n        for (let i = 0; i < amplitudes.length; i++) {\n            const { type, value } = amplitudes[i];\n            if (type === 'input') {\n                this.buttonRef.current && this.buttonRef.current.setAmplitude(value);\n                return;\n            }\n        }\n    };\n\n    switchButtonState(animated = true) {\n        const { connected, status } = this.state;\n\n        let stateId = MUTE_BUTTON_STATE_MUTE;\n        if (!connected) {\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\n        } else {\n            if (status === 'forceMuted') {\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\n            } else if (status === 'unmuted') {\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\n            } else if (status === 'muted') {\n                stateId = MUTE_BUTTON_STATE_MUTE;\n            }\n        }\n\n\n        this.buttonRef.current && this.buttonRef.current.updateMuteButton(stateId, true);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id, is_muted } = participant\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status,\n            connected\n        }, () => {\n            this.switchButtonState();\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            call,\n            status,\n            connected\n        }, () => {\n            this.switchButtonState();\n        });\n    };\n\n    handleClick = () => {\n        const { call } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId, stream } = call;\n\n        const groupCall = CallStore.get(groupCallId);\n        if (!groupCall) return;\n\n        if (!groupCall.can_unmute_self) {\n            const { shook } = this.state;\n            if (shook) {\n                this.setState({\n                    shook: false\n                }, () => {\n                    requestAnimationFrame(() => {\n                        this.setState({ shook: true });\n                    })\n                });\n            } else {\n                this.setState({\n                    shook: true\n                });\n            }\n        } else {\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\n        }\n    };\n\n    render() {\n        const { status, connected, animated, shook } = this.state;\n        // console.log('[call][GroupCallMicButton] render');\n\n        return (\n            <div className='group-call-mic-button-wrapper' >\n                {animated ? (\n                    <Button ref={this.buttonRef} onClick={this.handleClick}>\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\n                    </Button>\n                ) : (\n                    <div className={classNames('group-call-mic-button',\n                        {\n                            'group-call-muted-by-admin ': connected && status === 'forceMuted',\n                            'group-call-unmuted': connected && status === 'unmuted',\n                            'group-call-connecting': !connected,\n                        })}\n                         onClick={this.handleClick}\n                    >\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\n                    </div>\n                )}\n                <GroupCallMicButtonHint className={shook ? 'shook-horizontal' : ''} status={connected ? status : 'connecting'}/>\n            </div>\n        )\n    }\n}\n\nGroupCallMicButton.propTypes = {\n    groupCallId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(GroupCallMicButton);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getCallStatus } from '../../Calls/Utils';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallPanelButtons.css'\n\nclass GroupCallPanelButtons extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { status, connected } = this.state;\n\n        if (connected !== nextState.connected) {\n            return true;\n        }\n\n        if (status !== nextState.status) {\n            return true;\n        }\n\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id } = participant;\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            call,\n            status,\n            connected\n        });\n    };\n\n    render() {\n        const { children } = this.props;\n        const { status, connected } = this.state;\n        // console.log('[call][GroupCallPanelButtons] render');\n\n        return (\n            <div className={classNames('group-call-panel-buttons', {\n                'group-call-connecting': !connected,\n                'group-call-muted': connected && status === 'muted',\n                'group-call-muted-by-admin': connected && status === 'forceMuted',\n                'group-call-unmuted': connected && status === 'unmuted',\n            })}>\n                {children}\n            </div>\n        );\n    }\n}\n\nGroupCallPanelButtons.propTypes = {};\n\nexport default GroupCallPanelButtons;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M18.8833789,7.00672773 L19,7 C19.5128358,7 19.9355072,7.38604019 19.9932723,7.88337887 L20,8 L20,10 L22,10 C22.5128358,10 22.9355072,10.3860402 22.9932723,10.8833789 L23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L20,12 L20,14 C20,14.5128358 19.6139598,14.9355072 19.1166211,14.9932723 L19,15 C18.4871642,15 18.0644928,14.6139598 18.0067277,14.1166211 L18,14 L18,12 L16,12 C15.4871642,12 15.0644928,11.6139598 15.0067277,11.1166211 L15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L18,10 L18,8 C18,7.48716416 18.3860402,7.06449284 18.8833789,7.00672773 L19,7 L18.8833789,7.00672773 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />,\n    'AddMember'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm-1-9c0-.55.45-1 1-1s1 .45 1 1v6c0 .55-.45 1-1 1s-1-.45-1-1V5zm6 6c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.08c3.39-.49 6-3.39 6-6.92h-2z\" />,\n    'MicOutlined'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M10.8 4.9c0-.66.54-1.2 1.2-1.2s1.2.54 1.2 1.2l-.01 3.91L15 10.6V5c0-1.66-1.34-3-3-3-1.54 0-2.79 1.16-2.96 2.65l1.76 1.76V4.9zM19 11h-1.7c0 .58-.1 1.13-.27 1.64l1.27 1.27c.44-.88.7-1.87.7-2.91zM4.41 2.86L3 4.27l6 6V11c0 1.66 1.34 3 3 3 .23 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.55-.9l4.2 4.2 1.41-1.41L4.41 2.86z\" />,\n    'MicOffOutlined'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport MicIcon from '../../Assets/Icons/MicOutlined';\nimport MicOffIcon from '../../Assets/Icons/MicOffOutlined';\nimport UserTile from '../Tile/UserTile';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { getUserFullName } from '../../Utils/User';\nimport { openUser } from '../../Actions/Client';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallParticipant.css';\n\nclass GroupCallParticipant extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        participant: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { userId, groupCallId } = props;\n        const { prevUserId, prevGroupCallId } = state;\n\n        if (prevUserId !== userId || prevGroupCallId !== groupCallId) {\n            const participants = CallStore.participants.get(groupCallId) || new Map();\n            const participant = participants.get(userId);\n\n            return {\n                prevUserId: userId,\n                prevGroupCallId: groupCallId,\n                participant\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participant, left, top, contextMenu } = this.state;\n\n        if (participant !== nextState.participant) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { groupCallId, userId } = this.props;\n        const { group_call_id, participant } = update;\n        if (groupCallId !== group_call_id) return;\n        if (!participant) return;\n\n        const { user_id } = participant;\n        if (userId !== user_id) return;\n\n        this.setState({\n            participant\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { userId } = this.props;\n        if (userId === UserStore.getMyId()) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleOpenProfile = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n\n        openUser(userId, true);\n        closeGroupCallPanel();\n    };\n\n    handleSendMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n\n        openUser(userId, false);\n        closeGroupCallPanel();\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n        CallStore.changeUserMuted(userId, true);\n    };\n\n    handleUnmute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n        CallStore.changeUserMuted(userId, false);\n    };\n\n    render() {\n        const { userId, t } = this.props;\n        const { contextMenu, left, top, participant } = this.state;\n        // console.log('[call][GroupCallParticipant] render', participant);\n        if (!participant) return null;\n\n        const { is_speaking, is_muted_for_all_users, is_muted_for_current_user, can_unmute_self, can_be_muted_for_all_users, can_be_unmuted_for_all_users } = participant;\n        const isMuted = is_muted_for_all_users || is_muted_for_current_user;\n\n        return (\n            <div className='group-call-participant' onClick={this.handleOpenContextMenu} onContextMenu={this.handleOpenContextMenu}>\n                <UserTile userId={userId}/>\n                <div className='group-call-participant-content'>\n                    <div className='group-call-participant-content-title'>\n                        {/*{userId}*/}\n                        {getUserFullName(userId)}\n                    </div>\n                    <div className={classNames('group-call-participant-content-subtitle', 'participant-listening', { 'participant-speaking': is_speaking })}>\n                        {/*{order}*/}\n                        {is_speaking ? t('Speaking') : t('Listening')}\n                    </div>\n                </div>\n                <div className={classNames('group-call-participant-mic', { 'participant-muted-by-admin': isMuted && !can_unmute_self, 'participant-speaking': is_speaking })}>\n                    {!isMuted || is_speaking ? <MicIcon /> : <MicOffIcon />}\n                </div>\n\n                <Popover\n                    classes={{\n                        paper: 'group-call-participant-menu-root'\n                    }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        { can_be_unmuted_for_all_users && (\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleUnmute}>\n                                <ListItemText primary={t('VoipGroupUnmute')} />\n                            </MenuItem>\n                        )}\n                        { can_be_muted_for_all_users && (\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleMute}>\n                                <ListItemText primary={t('VoipGroupMute')} />\n                            </MenuItem>\n                        )}\n                        <MenuItem\n                            classes={{ root: 'group-call-participant-menu-item' }}\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                            TouchRippleProps={{\n                                classes : {\n                                    child : 'group-call-participant-menu-item-ripple-child',\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                }\n                            }}\n                            onClick={this.handleOpenProfile}>\n                            <ListItemText primary={t('VoipGroupOpenProfile')} />\n                        </MenuItem>\n                        <MenuItem\n                            classes={{ root: 'group-call-participant-menu-item' }}\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                            TouchRippleProps={{\n                                classes : {\n                                    child : 'group-call-participant-menu-item-ripple-child',\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                }\n                            }}\n                            onClick={this.handleSendMessage}>\n                            <ListItemText primary={t('SendMessage')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n\n}\n\nGroupCallParticipant.propTypes = {\n    userId: PropTypes.number,\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallParticipant);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddMemberIcon from '../../Assets/Icons/AddMember';\nimport GroupCallParticipant from './GroupCallParticipant';\nimport { albumHistoryEquals, orderCompare } from '../../Utils/Common';\nimport { canManageVoiceChats } from '../../Utils/Chat';\nimport { loadUsersContent } from '../../Utils/File';\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport FileStore from '../../Stores/FileStore';\nimport './GroupCallParticipants.css';\n\nclass GroupCallParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            participants: []\n        };\n\n        this.participantsMap = new Map();\n        // this.updateParticipants = throttle(this.updateParticipants, 1000);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            const participantsMap = CallStore.participants.get(groupCallId) || new Map();\n            const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\n\n            return {\n                prevGroupCallId: groupCallId,\n                participants: participants.map(x => x.user_id)\n            }\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participants } = this.state;\n        if (!albumHistoryEquals(participants, nextState.participants)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.preloadContent();\n\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { groupCallId } = this.props;\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        if (group_call_id !== groupCallId) return;\n\n        const { order, user_id } = participant;\n        if (order !== '0') {\n            this.participantsMap.set(user_id, user_id);\n            this.loadContent();\n\n            // wait for profile photo\n            setTimeout(() => {\n                this.updateParticipants();\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\n        } else {\n            this.updateParticipants();\n        }\n    };\n\n    updateParticipants() {\n        const { groupCallId } = this.props;\n\n        const participantsMap = CallStore.participants.get(groupCallId) || new Map();\n        const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\n\n        this.setState({\n            participants: participants.map(x => x.user_id)\n        });\n    }\n\n    preloadContent = () => {\n        const { participants } = this.state;\n        if (!participants) return;\n        if (!participants.length) return;\n\n        participants.forEach(x => {\n            this.participantsMap.set(x, x);\n        });\n        this.loadContent();\n    };\n\n    loadContent = () => {\n        const { participantsMap } = this;\n        if (!participantsMap) return;\n        if (!participantsMap.size) return;\n\n        this.participantsMap = new Map();\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, Array.from(participantsMap.keys()));\n    }\n\n    render() {\n        const { t, groupCallId } = this.props;\n        const { participants } = this.state;\n        // console.log('[call][GroupCallParticipants] render');\n\n        const { currentGroupCall } = CallStore;\n        if (!currentGroupCall) return null;\n\n        const { chatId } = currentGroupCall;\n\n        const manageGroupCalls = canManageVoiceChats(chatId);\n\n        return (\n            <div className='group-call-participants'>\n                { manageGroupCalls && (\n                    <div className='group-call-participants-invite'>\n                        <AddMemberIcon/>\n                        <div className='group-call-participants-invite-text'>\n                            {t('VoipGroupInviteMember')}\n                        </div>\n                    </div>\n                )}\n                {participants.map(x => <GroupCallParticipant key={x} userId={x} groupCallId={groupCallId}/>)}\n            </div>\n        );\n    }\n}\n\nGroupCallParticipants.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallParticipants);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M3,17V19H9V17H3M3,5V7H13V5H3M13,21V19H21V17H13V15H11V21H13M7,9V11H3V13H7V15H9V9H7M21,13V11H11V13H21M15,9H17V7H21V5H17V3H15V9Z' />,\n    'Tune'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TuneIcon from '../../Assets/Icons/Tune';\nimport { stopPropagation } from '../../Utils/Message';\nimport './GroupCallSettingsButton.css';\n\nclass GroupCallSettingsButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={onClick}>\n                <TuneIcon />\n            </div>\n        );\n    }\n}\n\nGroupCallSettingsButton.propTypes = {\n    groupCallId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default GroupCallSettingsButton;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport GroupCallMicButton from './GroupCallMicButton';\nimport GroupCallPanelButtons from './GroupCallPanelButtons';\nimport GroupCallParticipants from './GroupCallParticipants';\nimport GroupCallSettings from './GroupCallSettings';\nimport GroupCallSettingsButton from './GroupCallSettingsButton';\nimport GroupCallSubtitle from './GroupCallJoinPanelSubtitle';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { getChatTitle } from '../../Utils/Chat';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCallPanel.css';\n\nclass GroupCallPanel extends React.Component {\n    state = {\n        openSettings: false\n    };\n\n    handleClick = () => {\n        this.handleClose();\n    }\n\n    handleLeave = async event => {\n        event.stopPropagation();\n\n        const { currentGroupCall: call } = CallStore;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        await CallStore.leaveGroupCall(chatId, groupCallId);\n    };\n\n    handleOpenSettings = async event => {\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\n\n        this.setState({\n            openSettings: true\n        });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({\n            openSettings: false\n        });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    render() {\n        const { groupCallId, t } = this.props;\n        const { openSettings } = this.state;\n        const { currentGroupCall } = CallStore;\n        if (!currentGroupCall) return null;\n\n        const { chatId } = currentGroupCall;\n\n        return (\n            <div className='group-call-panel'>\n                <div className='group-call-panel-header'>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </div>\n                    <div className='group-call-panel-caption'>\n                        <div className='group-call-title'>{getChatTitle(chatId)}</div>\n                        <GroupCallSubtitle groupCallId={groupCallId} participantsOnly={true}/>\n                    </div>\n                    <div style={{ width: 48 }}/>\n                </div>\n                <div className='group-call-panel-participants scrollbars-hidden'>\n                    <GroupCallParticipants groupCallId={groupCallId}/>\n                </div>\n                <GroupCallPanelButtons>\n                    <GroupCallMicButton/>\n                    <div className='group-call-panel-button'>\n                        <GroupCallSettingsButton onClick={this.handleOpenSettings}/>\n                        <div className='group-call-panel-button-text'>\n                            {t('Settings')}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleLeave}>\n                            <CallEndIcon />\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {t('Leave')}\n                        </div>\n                    </div>\n                </GroupCallPanelButtons>\n                {openSettings && <GroupCallSettings groupCallId={groupCallId} onClose={this.handleCloseSettings}/>}\n            </div>\n        );\n    }\n}\n\nGroupCallPanel.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport GroupCallPanel from './GroupCallPanel';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { clamp } from '../../Utils/Common';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { modalManager } from '../../Utils/Modal';\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCall.css';\n\nclass GroupCall extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = {\n            fullScreen: false\n        };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.setPosition();\n\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.add(this.keyboardHandler);\n        window.addEventListener('resize', this.onWindowResize);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.remove(this.keyboardHandler);\n        window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    onClientUpdateGroupCallFullScreen = update => {\n        const { fullscreen } = update;\n\n        this.setState({ fullscreen });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    handleMouseDown = event => {\n        if (event.nativeEvent.which !== 1) return;\n\n        const element = document.getElementById('group-call');\n        if (element) element.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        this.left = parseInt(element.style.left, 10);\n        this.top = parseInt(element.style.top, 10);\n        this.pageX = event.nativeEvent.pageX;\n        this.pageY = event.nativeEvent.pageY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.windowDragging = true;\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('group-call');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\n\n        const element = document.getElementById('group-call');\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.windowDragging = false;\n    };\n\n    setPosition() {\n        const element = document.getElementById('group-call');\n        let { pipParams } = CallStore;\n        if (!pipParams) {\n            pipParams = {\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\n            }\n        }\n\n        const { left: prevLeft, top: prevTop } = pipParams;\n\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\n\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    }\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('group-call');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        CallStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    render() {\n        const { groupCallId } = this.props;\n        const { fullscreen } = this.state;\n\n        return (\n            <div\n                id='group-call'\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\n                onMouseDown={this.handleMouseDown}\n            >\n                <GroupCallPanel groupCallId={groupCallId}/>\n            </div>\n        )\n    }\n}\n\nGroupCall.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default GroupCall;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, maxCount) : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date, sender_id } = message;\n\n        const dateHint = getDateHint(date);\n\n        const tileControl = sender_id.user_id ? <UserTile userId={sender_id.user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={sender_id} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <>\n                <div className='media-viewer-content'>\n                    {content}\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                </div>\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', maxCount - index, maxCount) : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'/>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    render() {\n        const { chatId, date, style } = this.props;\n\n        return (\n            <div className='media-info' style={style}>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)}/>\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, totalCount) : null}\n                    />\n                    <div style={{ width: 64 }}/>\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport Actions from './Actions';\nimport Call from './Calls/Call';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport GroupCall from './Calls/GroupCall';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport PipPlayer from './Player/PipPlayer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport CallStore from '../Stores/CallStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null,\n            groupCallId: 0,\n            callId: 0\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        CallStore.on('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\n        CallStore.on('clientUpdateCallPanel', this.onClientUpdateCallPanel);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        CallStore.off('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\n        CallStore.off('clientUpdateCallPanel', this.onClientUpdateCallPanel);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdateCallPanel = update => {\n        const { opened, callId } = update;\n\n        this.setState({\n            callId: opened ? callId : 0\n        });\n    };\n\n    onClientUpdateGroupCallPanel = update => {\n        const { opened } = update;\n        const { currentGroupCall } = CallStore;\n\n        this.setState({\n            groupCallId: currentGroupCall && opened ? currentGroupCall.groupCallId : 0\n        });\n    };\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup, options } = update;\n\n        this.handleSelectChat(chatId, messageId, popup, options || AppStore.chatSelectOptions);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false, options = null) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId && !options) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId && !options) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId, options);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            callId,\n            groupCallId,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Actions/>\n                {Boolean(instantViewContent) && <InstantViewer {...instantViewContent} />}\n                {Boolean(mediaViewerContent) && <MediaViewer {...mediaViewerContent} />}\n                {Boolean(profileMediaViewerContent) && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {Boolean(forwardInfo) && <ForwardDialog {...forwardInfo} />}\n                {Boolean(videoInfo) && <PipPlayer {...videoInfo}/>}\n                {Boolean(groupCallId) && <GroupCall groupCallId={groupCallId}/>}\n                {Boolean(callId) && <Call callId={callId}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}